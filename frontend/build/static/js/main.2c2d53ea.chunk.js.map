{"version":3,"sources":["constants/pxxConstants.js","constants/userConstants.js","constants/consultantConstants.js","constants/skillsConstants.js","constants/dealConstants.js","constants/accessConstants.js","constants/clientConstants.js","constants/taceConstants.js","constants/emailConstants.js","store.js","reducers/userReducers.js","reducers/consultantReducers.js","reducers/pxxReducers.js","reducers/skillReducers.js","reducers/dealReducer.js","reducers/accessReducers.js","reducers/clientReducers.js","reducers/taceReducer.js","reducers/emailReducers.js","actions/userActions.js","components/DisplayChildren.js","actions/consultantActions.js","components/ChangeAdminPractice.js","components/Header.js","components/Footer.js","components/Message.js","components/Loader.js","components/FormContainer.js","screens/LoginScreen.js","actions/pxxActions.js","components/PxxUserLine.js","components/PxxEditor.js","components/DropDownTitleContainer.js","components/ConsultantsTab.js","components/Meta.js","components/ViewStaffs.js","actions/dealActions.js","components/ViewOldStaffs.js","components/Rating.js","components/SkillsDetails.js","screens/PxxEditScreen.js","screens/ConsultantEditScreen.js","components/ImportExcelFile.js","components/FlowImportWKConsultants.js","screens/ManageConsultantScreen.js","components/SelectComponent.js","screens/ManageUsersScreen.js","actions/accessActions.js","screens/UserEditScreen.js","screens/RegisterScreen.js","components/StaffAConsultant.js","components/SelectInput.js","actions/skillActions.js","components/ConsoDispo.js","components/Tace.js","actions/taceActions.js","screens/DashboardScreen.js","actions/clientActions.js","components/SelectCompany.js","components/DateComponent.js","components/NumberComponent.js","components/TextComponent.js","components/SelectMultipleComponent.js","components/TextAreaComponent.js","screens/StaffingEditScreen.js","screens/ManageSkillsScreen.js","components/FlowImportPxx.js","screens/PxxDetailsScreen.js","components/DealList.js","screens/ManageDealsScreen.js","screens/DealsHistoryScreen.js","screens/AccessEditScreen.js","screens/ManageCompaniesScreen.js","screens/EnvoyerMailsScreen.js","actions/emailActions.js","screens/ProfileScreen.js","components/TokenIsValide.js","components/History.js","components/PageSize.js","components/PaginateComponent.js","screens/AddUsersScreen.js","App.js","serviceWorker.js","index.js"],"names":["PXX_MY_TO_EDIT_REQUEST","PXX_MY_TO_EDIT_SUCCESS","PXX_MY_TO_EDIT_FAIL","PXX_MY_TO_EDIT_RESET","PXX_UPDATE_REQUEST","PXX_UPDATE_SUCCESS","PXX_UPDATE_FAIL","PXX_UPDATE_RESET","PXX_LIST_REQUEST","PXX_LIST_SUCCESS","PXX_LIST_FAIL","PXX_LIST_RESET","PXX_TACE_REQUEST","PXX_TACE_SUCCESS","PXX_TACE_FAIL","PXX_TACE_RESET","PXX_AVAILABILITIES_REQUEST","PXX_AVAILABILITIES_SUCCESS","PXX_AVAILABILITIES_FAIL","PXX_AVAILABILITIES_RESET","PXX_ALL_REQUEST","PXX_ALL_SUCCESS","PXX_ALL_FAIL","PXX_ALL_RESET","PXX_IMPORT_LINE_REQUEST","PXX_IMPORT_LINE_SUCCESS","PXX_IMPORT_LINE_FAIL","PXX_IMPORT_LINE_RESET","PXX_UPLOAD_FILE_REQUEST","PXX_UPLOAD_FILE_SUCCESS","PXX_UPLOAD_FILE_FAIL","PXX_UPLOAD_FILE_RESET","PXX_UPDATE_PXX_REQUEST","PXX_UPDATE_PXX_SUCCESS","PXX_UPDATE_PXX_FAIL","PXX_UPDATE_PXX_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_ADMIN_CHANGE_PRACTICE","USER_ADMIN_CHANGE_PRACTICE_FAIL","USER_REDIRECT_AZ_REQUEST","USER_REDIRECT_AZ_SUCCESS","USER_REDIRECT_AZ_FAIL","USER_REDIRECT_AZ_RESET","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_TO_CREATE_REQUEST","USER_TO_CREATE_SUCCESS","USER_TO_CREATE_FAIL","USER_TO_CREATE_RESET","USER_CREATE_REQUEST","USER_CREATE_SUCCESS","USER_CREATE_FAIL","USER_CREATE_RESET","USER_STATUS","CONSULTANTS_MY_DETAILS_REQUEST","CONSULTANTS_MY_DETAILS_SUCCESS","CONSULTANTS_MY_DETAILS_FAIL","CONSULTANTS_MY_DETAILS_FOCUS","CONSULTANTS_MY_DETAILS_RESET","CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST","CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS","CONSULTANTS_ALL_ADMIN_DETAILS_FAIL","CONSULTANTS_ALL_ADMIN_DETAILS_RESET","CONSULTANTS_ALL_LEADERS_REQUEST","CONSULTANTS_ALL_LEADERS_SUCCESS","CONSULTANTS_ALL_LEADERS_FAIL","CONSULTANTS_ALL_LEADERS_RESET","CONSULTANT_MY_REQUEST","CONSULTANT_MY_SUCCESS","CONSULTANT_MY_FAIL","CONSULTANT_MY_RESET","CONSULTANT_DELEGATE_UPDATE_REQUEST","CONSULTANT_DELEGATE_UPDATE_SUCCESS","CONSULTANT_DELEGATE_UPDATE_FAIL","CONSULTANT_DELEGATE_UPDATE_RESET","CONSULTANT_MY_UPDATE_REQUEST","CONSULTANT_MY_UPDATE_SUCCESS","CONSULTANT_MY_UPDATE_FAIL","CONSULTANT_MY_UPDATE_RESET","CONSULTANT_CREATE_REQUEST","CONSULTANT_CREATE_SUCCESS","CONSULTANT_CREATE_FAIL","CONSULTANT_CREATE_RESET","CONSULTANT_DELETE_REQUEST","CONSULTANT_DELETE_SUCCESS","CONSULTANT_DELETE_FAIL","CONSULTANT_DELETE_RESET","CONSULTANT_CDM_LIST_REQUEST","CONSULTANT_CDM_LIST_SUCCESS","CONSULTANT_CDM_LIST_FAIL","CONSULTANT_CDM_LIST_RESET","CONSULTANT_PRACTICE_LIST_REQUEST","CONSULTANT_PRACTICE_LIST_SUCCESS","CONSULTANT_PRACTICE_LIST_FAIL","CONSULTANT_PRACTICE_LIST_RESET","CONSULTANT_UPDATE_COMMENT_REQUEST","CONSULTANT_UPDATE_COMMENT_SUCCESS","CONSULTANT_UPDATE_COMMENT_FAIL","CONSULTANT_UPDATE_COMMENT_RESET","CONSULTANT_CDM_REQUEST","CONSULTANT_CDM_SUCCESS","CONSULTANT_CDM_FAIL","CONSULTANT_CDM_RESET","CONSULTANT_SKILLS_REQUEST","CONSULTANT_SKILLS_SUCCESS","CONSULTANT_SKILLS_FAIL","CONSULTANT_SKILLS_RESET","CONSULTANT_ALL_SKILLS_REQUEST","CONSULTANT_ALL_SKILLS_SUCCESS","CONSULTANT_ALL_SKILLS_FAIL","CONSULTANT_ALL_SKILLS_RESET","CONSULTANT_ALL_STAFF_REQUEST","CONSULTANT_ALL_STAFF_SUCCESS","CONSULTANT_ALL_STAFF_FAIL","CONSULTANT_ALL_STAFF_RESET","CONSULTANT_ADD_SKILL_REQUEST","CONSULTANT_ADD_SKILL_SUCCESS","CONSULTANT_ADD_SKILL_FAIL","CONSULTANT_ADD_SKILL_RESET","CONSULTANT_DELETE_SKILL_REQUEST","CONSULTANT_DELETE_SKILL_SUCCESS","CONSULTANT_DELETE_SKILL_FAIL","CONSULTANT_DELETE_SKILL_RESET","CONSULTANT_UPDATE_SKILL_REQUEST","CONSULTANT_UPDATE_SKILL_SUCCESS","CONSULTANT_UPDATE_SKILL_FAIL","CONSULTANT_UPDATE_SKILL_RESET","CONSULTANT_MASS_IMPORT_REQUEST","CONSULTANT_MASS_IMPORT_SUCCESS","CONSULTANT_MASS_IMPORT_FAIL","CONSULTANT_MASS_IMPORT_RESET","CONSULTANT_UPLOAD_WK_REQUEST","CONSULTANT_UPLOAD_WK_SUCCESS","CONSULTANT_UPLOAD_WK_FAIL","CONSULTANT_UPLOAD_WK_RESET","CONSULTANT_UPDATE_WK_REQUEST","CONSULTANT_UPDATE_WK_SUCCESS","CONSULTANT_UPDATE_WK_FAIL","CONSULTANT_UPDATE_WK_RESET","CONSULTANT_GRADE","SKILL_LIST_REQUEST","SKILL_LIST_SUCCESS","SKILL_LIST_FAIL","SKILL_LIST_RESET","SKILL_DELETE_REQUEST","SKILL_DELETE_SUCCESS","SKILL_DELETE_FAIL","SKILL_DELETE_RESET","SKILL_CREATE_REQUEST","SKILL_CREATE_SUCCESS","SKILL_CREATE_FAIL","SKILL_CREATE_RESET","DEAL_CREATE_REQUEST","DEAL_CREATE_SUCCESS","DEAL_CREATE_FAIL","DEAL_CREATE_RESET","DEAL_UPDATE_REQUEST","DEAL_UPDATE_SUCCESS","DEAL_UPDATE_FAIL","DEAL_UPDATE_RESET","DEAL_ALL_LIST_REQUEST","DEAL_ALL_LIST_SUCCESS","DEAL_ALL_LIST_FAIL","DEAL_ALL_LIST_RESET","DEAL_DELETE_REQUEST","DEAL_DELETE_SUCCESS","DEAL_DELETE_FAIL","DEAL_DELETE_RESET","DEAL_EDIT_REQUEST","DEAL_EDIT_SUCCESS","DEAL_EDIT_FAIL","DEAL_EDIT_RESET","DEAL_OLD_REQUEST","DEAL_OLD_SUCCESS","DEAL_OLD_FAIL","DEAL_OLD_RESET","DEAL_MASS_IMPORT_REQUEST","DEAL_MASS_IMPORT_SUCCESS","DEAL_MASS_IMPORT_FAIL","DEAL_MASS_IMPORT_RESET","REQUEST_STATUS","name","staff","priority","TYPE_BUSINESS","DEAL_STATUS","display","DEAL_PROBABILITY","ACCESS_LIST_REQUEST","ACCESS_LIST_SUCCESS","ACCESS_LIST_FAIL","ACCESS_LIST_RESET","ACCESS_UPDATE_FRONTACCESS_REQUEST","ACCESS_UPDATE_FRONTACCESS_SUCCESS","ACCESS_UPDATE_FRONTACCESS_FAIL","ACCESS_UPDATE_FRONTACCESS_RESET","ACCESS_MODES","ACCESS_DATAS","CLIENT_ALL_REQUEST","CLIENT_ALL_SUCCESS","CLIENT_ALL_FAIL","CLIENT_ALL_RESET","CLIENT_CREATE_REQUEST","CLIENT_CREATE_SUCCESS","CLIENT_CREATE_FAIL","CLIENT_CREATE_RESET","CLIENT_UPDATE_REQUEST","CLIENT_UPDATE_SUCCESS","CLIENT_UPDATE_FAIL","CLIENT_UPDATE_RESET","CLIENT_DELETE_REQUEST","CLIENT_DELETE_SUCCESS","CLIENT_DELETE_FAIL","CLIENT_DELETE_RESET","TACE_CREATE_REQUEST","TACE_CREATE_SUCCESS","TACE_CREATE_FAIL","TACE_CREATE_RESET","EMAIL_CONTACTS_LIST_REQUEST","EMAIL_CONTACTS_LIST_SUCCESS","EMAIL_CONTACTS_LIST_FAIL","EMAIL_CONTACTS_LIST_RESET","EMAIL_SEND_DECISION_REQUEST","EMAIL_SEND_DECISION_SUCCESS","EMAIL_SEND_DECISION_FAIL","EMAIL_SEND_DECISION_RESET","reducer","combineReducers","userRegister","state","action","type","loading","userInfo","payload","error","userLogin","userRedirectAz","redirectURL","userList","users","pages","page","count","userDetails","user","userUpdate","success","userDelete","userUpdateProfil","userToCreate","usersListToCreate","userCreate","consultantId","message","consultantUpdateComment","consultantsMyAdminList","consultantsMyAdmin","consultants","consultantsMyList","focus","consultantsMy","consultantMy","consultant","consultantMyUpdate","consultantCreate","consultantCreated","consultantDelete","consultantCDMList","cdmList","consultantDelegateUpdate","consultantPracticeList","practiceList","consultantSkills","skills","consultantAllSkills","consultantAllStaffs","staffings","consultantAddSkill","consultantDeleteSkill","consultantUpdateSkill","consultantGetCdm","cdm","consultantsAllLeaders","leaderslist","consultantsMassImport","consultantUploadWk","path","consultantUpdateWk","pxxList","pxxs","pxxMonthInformation","pxxUserList","pxxAllList","pxxMyToEdit","pxx","pxxUpdate","pxxTACE","tace","pxxAvailabilities","availabilities","updatePxx","pxxImportLine","updatedLine","pxxUploadFile","skillList","skillDelete","skillCreate","dealCreate","createId","dealAllList","deals","dealDelete","dealEdit","deal","dealUpdate","dealOld","oldDeals","dealsImportMass","datas","accessList","access","accessFrontUpdate","clientAll","clients","clientCreate","clientUpdate","clientDelete","createTace","taceData","contactsList","contacts","sendOneEmail","email","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","login","param","dispatch","a","config","headers","data","axios","post","password","get","code","accountType","setItem","stringify","response","logout","clear","getUserDetails","id","getState","Authorization","token","listUsers","practice","keyword","pageNumber","pageSize","searchName","searchStatus","getUsersToCreate","consultantName","cdmName","DisplayChildren","children","useSelector","grantedAccess","rule","profil","frontAccess","filter","x","length","mode","setConsultantFocus","getMyConsultant","updateMyConsultant","put","_id","Error","getAllCDM","getAllPractice","getAllMyAdminConsultants","getConsultantSkills","quality","getAllConsultantSkills","ChangeAdminPractice","useDispatch","useEffect","NavDropdown","title","consultantProfil","map","practiceName","val","Item","onClick","newUserInfo","changeAdminPractice","Header","Navbar","bg","variant","expand","collapseOnSelect","fixed","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","Divider","Footer","Row","Col","Message","Alert","defaultProps","Loader","Spinner","animation","role","stype","width","height","margin","FormContainer","xs","md","LoginScreen","location","history","useState","setEmail","setPassword","setMessage","redirect","search","split","status","push","window","href","Form","onSubmit","e","currentTarget","checkValidity","preventDefault","Group","controlId","Label","Control","placeholder","value","onChange","target","toLocaleLowerCase","Button","block","disabled","process","includes","Table","hover","striped","getAvailabilities","start","end","experienceStart","experienceEnd","searchMode","searchExperience","toString","getAllPxx","month","keywork","PxxUserLine","prodDay","prodDayComponent","setProdDayComponent","notProdDay","notProdDayComponent","setNotProdDayComponent","leavingDay","leavingDayComponent","setLeavingDayComponent","Number","availableDay","availableDayComponent","setAvailableDayComponent","workingDay","hasChange","setHasChange","firstDayOfCurrentMonth","Date","now","setDate","toISOString","substring","editable","firstDay","prd","transformNumber","nPrd","lvg","match","InputGroup","min","max","step","PxxEditor","consultantFocus","searchDate","navigationMonthHandler","numberOfMonth","loadingPxx","errorPxx","loadingUpdate","errorUpdate","setUTCDate","getMyConsultantPxxToEdit","ListGroup","size","style","line","key","DropDownTitleContainer","close","hide","setHide","ConsultantsTab","focusActive","responsive","matricule","valued","arrival","leaving","comment","onClickHandler","Meta","Helmet","ViewStaffs","displayedDeal","onNavigate","getAllStaffs","company","mainPractice","probability","startDate","requestStatus","updateDeal","dealId","getAllDeals","contact","request","filterMy","ViewOldStaffs","getOldDeals","staffingRequest","Rating","setValue","text","color","valueList","Array","Math","floor","fill","SkillDisplayLine","skill","setUpdate","successConsultantUpdateSkill","successConsultantDeleteSkill","level","setLevel","waitingValidationLevel","setWaitingValidationLevel","handlerDeleteConsultantSkill","skillId","delete","plaintext","readOnly","newLevel","consultantUpdateASkillLevel","SkillsDetails","skillCategory","setSkillCategory","setSkillId","skillLevel","setSkillLevel","skillCategoryList","setSkillCategoryList","qualityOrdonned","setQualityOrdonned","update","skillsAll","loadingConsultantAddSkill","successConsultantAddSkill","errorConsultantAddSkill","ordonnedSkills","orderSkills","categoryList","category","Set","incr","handleAddSkill","consultantAddASkill","as","required","OverlayTrigger","placement","overlay","Tooltip","description","PxxEditScreen","commentText","setCommentText","trObjectives","setTrObjectives","availabilityComment","setAvailabilityComment","notProdComment","setNotProdComment","cvLink","setCvLink","editCv","setEditCv","delegateOption","setDelegationOption","loadingConsultantsMyList","errorConsultantsMyList","setSearchDate","option","getAllMyConsultants","talentReviewObjectives","linkedCV","navigationConsultantHandler","updateCommentHandler","updateComment","htmlFor","FormControl","rows","navigationDate","setMonth","getMonth","rel","Check","label","checked","ConsultantEditScreen","setName","setMatricule","setPractice","grade","setGrade","setCdm","setArrival","setValued","setLeaving","seniority","setSeniority","isCDM","setIsCDM","partialTime","setPartialTime","startPartialTime","setStartPartialTime","endPartialTime","setEndPartialTime","valueMonday","setValueMonday","valueTuesday","setValueTuesday","valueWednesday","setValueWednesday","valueThursday","setValueThursday","valueFriday","setValueFriday","errorMessage","setErrorMessage","successMessage","setSuccessMessage","valueEditType","params","successUpdate","loadingCreate","errorCreate","successCreate","errorCDM","errorPractice","cdmId","isPartialTime","week","num","worked","go","updatedUser","createConsultant","changeValueDateHandler","ImportExcelFile","setImportData","sheets","fileName","setFileName","readFileHandler","file","files","reader","FileReader","onload","result","workBook","XLSX","jsonData","SheetNames","wsName","ws","Sheets","sheet_to_json","readAsBinaryString","File","custom","data-browse","Input","FlowImportWKConsultants","props","setStep","loadingUpload","errorUpload","Modal","aria-labelledby","centered","closeButton","Title","Body","Image","src","rounded","fluid","FormData","append","updateConsultantWk","onHide","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ManageConsultantScreen","setPageSize","setPageNumber","setKeyword","exportExcel","setExportExcel","importData","showImportConsultant","setShowImportConsultant","successConsultantDelete","loadingMassImport","errorMassImport","successMassImport","exportExcelData","onClickDeleteHandler","confirm","show","element","Pagination","Prev","keys","active","Ellipsis","Next","SelectComponent","editRequest","options","ManageUsersScreen","getStatusDisplay","createdAt","lastConnexion","userId","getAllAccess","UserEditScreen","linkConsultant","setLinkConsultant","setProfil","setStatus","errorMyAdmin","updateUser","Append","newProfil","updateProfilHandler","RegisterScreen","confirmPassword","setConfirmPassword","register","variat","StaffAConsultant","loadingData","addStaffHandler","responsability","sdResponsability","setSdResponsability","sdPriority","setSdPriority","information","sdInformation","setSdInformation","SelectInput","multi","closeMenuOnSelect","isMulti","valuesSelected","isDisabled","getAllSkills","ConsoDispoUnit","monthData","grades","addStaff","setFocus","formatName","fullName","separateName","word","indice1","toUpperCase","join","Card","consultantData","yVal","sm","html","date","background","onFocus","ConsoDispo","searchExperienceStart","setSearchExperienceStart","searchExperienceEnd","setSearchExperienceEnd","searchSkillsList","setSearchSkillsList","setSearchMode","modalWindowShow","setModalWindowShow","sdConsultant","setSdConsultant","loadingAvailabilities","errorAvailabilities","moreConsultantDetails","Tabs","defaultActiveKey","Tab","eventKey","xVal","Tace","setTarget","bid","setBid","setEditRequest","missingFTEToBid","setMissingFTEToBid","missingFTEToTarget","setMissingFTEToTarget","totalProdDay","totalProdDayToBid","totalNotProdDay","totalAvailableDay","totalProdDayToTarget","today","lastMonthDay","setUTCMonth","getUTCMonth","todayToEnd","Text","totalTACE","toFixed","totalLeaving","totalETP","DashboardScreen","startDefault","endDefault","setStart","setEnd","loadingTACE","errorTACE","getTace","endDate","replace","getAllClients","createAClient","updateAClient","SelectCompany","setCompany","companies","isClearable","commercialTeam","DateComponent","editMode","NumberComponent","TextComponent","formInline","SelectMultipleComponent","updateOthersPractices","selectedList","selectBox","document","getElementById","i","selected","multiple","TextAreaComponent","StaffingEditScreen","successEdit","dealToEdit","setTitle","client","setClient","setType","setProbability","setDescription","proposalDate","setProposalDate","presentationDate","setPresentationDate","setStartDate","setMainPractice","othersPractices","setOthersPractices","setLocation","srInstruction","setSrInstruction","srStatus","setSrStatus","srRessources","setSrRessources","comments","setComments","duration","setDuration","othersContacts","setOthersContacts","newComment","setNewComment","sdInstructions","sdStatus","setSdStatus","sdStaff","setSdStaff","wonDate","setWonDate","loadingSdConsultantData","setLoadingSdConsultantData","dealChange","setDealChange","leader","setLeader","coLeaders","setCoLeaders","companyMessage","setCompanyMessage","searchValue","getAllLeaders","instructions","ressources","staffingDecision","staffingStatus","primary","secondary","coLeader","idConsultant","tampon","addCommentHandler","newComments","slice","sender","sort","b","createDeal","prob","trigger","Popover","Content","removeStaffHandler","updatedAt","onKeyUp","index","textAlign","marginBottom","deleteCommentHandler","ManageSkillsScreen","skillName","setSkillName","skillDescription","setSkillDescription","loadingCreateSkill","errorCreateSkill","successCreateSkill","loadingSkills","skillsList","FlowImportPxx","pxxUploadFiles","webkitdirectory","directory","updatePxxFiles","PxxDetailsScreen","monthId","progress","setProgress","massImport","setMassImport","errorImportMessage","setErrorImportMessage","messsagesImportSuccess","setMessagesImportSuccess","messsagesImportError","setMessagesImportError","totalToImport","setTotalToImport","showImportPxx","setShowImportPxx","loadingImportLine","errorImportLine","successImportLine","handlerImportData","lineToImport","newImportData","MATRICULE","updatedMatricule","newErrorMessage","ProgressBar","animated","DealList","searchTitle","setSearchTitle","searchContact","setSearchContact","searchCompany","setSearchCompany","searchDealStatus","setSearchDealStatus","searchRequestStatus","setSearchRequestStatus","searchStaff","setSearchStaff","colSpan","ManageDealsScreen","dealStatus","myDeals","searchMyDeals","setSearchMyDeals","updateFilter","setUpdateFilter","notUpdateFilter","setNotUpdateFilter","newDealFilter","setNewDealFilter","wonDealFilter","setWonDealFilter","changePeriod","setChangePeriod","tabsFilter","defaultTabs","setDefaultTabs","dataFiltered","setDataFiltered","errorDelete","successDelete","loadingImportMass","successImportData","updateTime","getUTCDate","notUpdateTime","newDealTime","wonDealTime","filteredData","dealsFiltered","needStaff","toDisplay","setParam","activeKey","onSelect","k","DealsHistoryScreen","getFullYear","ProfilDescription","categories","categorizedFrontAccess","filterdData","frontAccessRules","categorizeFrontAccess","categoryRules","accessRules","profilId","CategoryAccess","modes","item","frontAccessItem","AccessLineEdit","setLabel","setMode","setData","loadingState","setLoadingState","updateprofilFrontAcessRule","console","log","AccessEditScreen","errorFrontUpdate","DisplayContact","setShowAddContact","deleteContactHandler","contactName","contactEmail","companyId","companyName","ManageCompaniesScreen","showAddContact","setContactName","setContactEmail","showModifyName","setShowModifyName","newCompanyName","setNewCompanyName","showCreateCompany","setShowCreateCompany","clientsId","clientToUpdate","newContacts","contactNameConform","contactEmailConform","test","addContactHandler","modifyCompanyNameHandler","addCompanyHandler","EnvoyerMailsScreen","contactList","setContactList","messsagesSendSuccess","setMessagesSendSuccess","messsagesSendError","setMessagesSendError","totalToSend","setTotalToSend","massSending","setMassSending","handlerSendADecision","newContactsInfo","sendDecisionEmail","successEmail","errorEmail","ProfileScreen","messageUpdate","setMessageUpdate","delegation","setDelegation","loadingDelegate","cdmDelegation","strongRegex","RegExp","lowRegex","applyRegex","updateUserProfile","delegationToUpdate","updateDelegateConsultant","c","s","TokenIsValide","setGrantedAccess","delay","userInfoUpdated","getTransparentNewToken","createBrowserHistory","PageSize","PaginateComponent","CheckComponent","allCheck","sendProcess","setChecked","AddUsersScreen","setAllCheck","consultantToCreateList","setConsultantToCreateList","setSendProcess","countSend","setCountSend","waitSend","setWaitSend","noAction","setNoAction","newList","send","onCheck","oldStatus","onUnCheck","onChangeHandler","newStatus","verifyStatus","App","component","exact","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2c2d53ea.chunk.js","sourcesContent":["export const PXX_MY_TO_EDIT_REQUEST = 'PXX_MY_TO_EDIT_REQUEST';\nexport const PXX_MY_TO_EDIT_SUCCESS = 'PXX_MY_TO_EDIT_SUCCESS';\nexport const PXX_MY_TO_EDIT_FAIL = 'PXX_MY_TO_EDIT_FAIL';\nexport const PXX_MY_TO_EDIT_RESET = 'PXX_MY_TO_EDIT_RESET';\n\nexport const PXX_UPDATE_REQUEST = 'PXX_UPDATE_REQUEST';\nexport const PXX_UPDATE_SUCCESS = 'PXX_UPDATE_SUCCESS';\nexport const PXX_UPDATE_FAIL = 'PXX_UPDATE_FAIL';\nexport const PXX_UPDATE_RESET = 'PXX_UPDATE_RESET';\n\nexport const PXX_LIST_REQUEST = 'PXX_LIST_REQUEST';\nexport const PXX_LIST_SUCCESS = 'PXX_LIST_SUCCESS';\nexport const PXX_LIST_FAIL = 'PXX_LIST_FAIL';\nexport const PXX_LIST_RESET = 'PXX_LIST_RESET';\n\nexport const PXX_USER_LIST_REQUEST = 'PXX_USER_LIST_REQUEST';\nexport const PXX_USER_LIST_SUCCESS = 'PXX_USER_LIST_SUCCESS';\nexport const PXX_USER_LIST_FAIL = 'PXX_USER_LIST_FAIL';\nexport const PXX_USER_LIST_RESET = 'PXX_USER_LIST_RESET';\n\nexport const PXX_TACE_REQUEST = 'PXX_TACE_REQUEST';\nexport const PXX_TACE_SUCCESS = 'PXX_TACE_SUCCESS';\nexport const PXX_TACE_FAIL = 'PXX_TACE_FAIL';\nexport const PXX_TACE_RESET = 'PXX_TACE_RESET';\n\nexport const PXX_AVAILABILITIES_REQUEST = 'PXX_AVAILABILITIES_REQUEST';\nexport const PXX_AVAILABILITIES_SUCCESS = 'PXX_AVAILABILITIES_SUCCESS';\nexport const PXX_AVAILABILITIES_FAIL = 'PXX_AVAILABILITIES_FAIL';\nexport const PXX_AVAILABILITIES_RESET = 'PXX_AVAILABILITIES_RESET';\n\nexport const PXX_ALL_REQUEST = 'PXX_ALL_REQUEST';\nexport const PXX_ALL_SUCCESS = 'PXX_ALL_SUCCESS';\nexport const PXX_ALL_FAIL = 'PXX_ALL_FAIL';\nexport const PXX_ALL_RESET = 'PXX_ALL_RESET';\n\nexport const PXX_IMPORT_MASS_REQUEST = 'PXX_IMPORT_MASS_REQUEST';\nexport const PXX_IMPORT_MASS_SUCCESS = 'PXX_IMPORT_MASS_SUCCESS';\nexport const PXX_IMPORT_MASS_FAIL = 'PXX_IMPORT_MASS_FAIL';\nexport const PXX_IMPORT_MASS_RESET = 'PXX_IMPORT_MASS_RESET';\n\nexport const PXX_IMPORT_LINE_REQUEST = 'PXX_IMPORT_LINE_REQUEST';\nexport const PXX_IMPORT_LINE_SUCCESS = 'PXX_IMPORT_LINE_SUCCESS';\nexport const PXX_IMPORT_LINE_FAIL = 'PXX_IMPORT_LINE_FAIL';\nexport const PXX_IMPORT_LINE_RESET = 'PXX_IMPORT_LINE_RESET';\n\nexport const PXX_UPLOAD_FILE_REQUEST = 'PXX_UPLOAD_FILE_REQUEST';\nexport const PXX_UPLOAD_FILE_SUCCESS = 'PXX_UPLOAD_FILE_SUCCESS';\nexport const PXX_UPLOAD_FILE_FAIL = 'PXX_UPLOAD_FILE_FAIL';\nexport const PXX_UPLOAD_FILE_RESET = 'PXX_UPLOAD_FILE_RESET';\n\nexport const PXX_UPDATE_PXX_REQUEST = 'PXX_UPDATE_PXX_REQUEST';\nexport const PXX_UPDATE_PXX_SUCCESS = 'PXX_UPDATE_PXX_SUCCESS';\nexport const PXX_UPDATE_PXX_FAIL = 'PXX_UPDATE_PXX_FAIL';\nexport const PXX_UPDATE_PXX_RESET = 'PXX_UPDATE_PXX_RESET';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_ADMIN_CHANGE_PRACTICE = 'USER_ADMIN_CHANGE_PRACTICE';\nexport const USER_ADMIN_CHANGE_PRACTICE_FAIL = 'USER_ADMIN_CHANGE_PRACTICE_FAIL';\n\nexport const USER_REDIRECT_AZ_REQUEST = 'USER_REDIRECT_AZ_REQUEST';\nexport const USER_REDIRECT_AZ_SUCCESS = 'USER_REDIRECT_AZ_SUCCESS';\nexport const USER_REDIRECT_AZ_FAIL = 'USER_REDIRECT_AZ_FAIL';\nexport const USER_REDIRECT_AZ_RESET = 'USER_REDIRECT_AZ_RESET';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\n\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n\nexport const USER_TO_CREATE_REQUEST = 'USER_TO_CREATE_REQUEST';\nexport const USER_TO_CREATE_SUCCESS = 'USER_TO_CREATE_SUCCESS';\nexport const USER_TO_CREATE_FAIL = 'USER_TO_CREATE_FAIL';\nexport const USER_TO_CREATE_RESET = 'USER_TO_CREATE_RESET';\n\nexport const USER_CREATE_REQUEST = 'USER_CREATE_REQUEST';\nexport const USER_CREATE_SUCCESS = 'USER_CREATE_SUCCESS';\nexport const USER_CREATE_FAIL = 'USER_CREATE_FAIL';\nexport const USER_CREATE_RESET = 'USER_CREATE_RESET';\n\nexport const USER_STATUS = ['Waiting approval', 'Validated', 'Refused', 'Blocked', 'Left'];","export const CONSULTANTS_MY_DETAILS_REQUEST = 'CONSULTANTS_MY_DETAILS_REQUEST';\nexport const CONSULTANTS_MY_DETAILS_SUCCESS = 'CONSULTANTS_MY_DETAILS_SUCCESS';\nexport const CONSULTANTS_MY_DETAILS_FAIL = 'CONSULTANTS_MY_DETAILS_FAIL';\nexport const CONSULTANTS_MY_DETAILS_FOCUS = 'CONSULTANTS_MY_DETAILS_FOCUS';\nexport const CONSULTANTS_MY_DETAILS_RESET = 'CONSULTANTS_MY_DETAILS_RESET';\n\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST = 'CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS = 'CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_FAIL = 'CONSULTANTS_ALL_ADMIN_DETAILS_FAIL';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS = 'CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_RESET = 'CONSULTANTS_ALL_ADMIN_DETAILS_RESET';\n\nexport const CONSULTANTS_ALL_LEADERS_REQUEST = 'CONSULTANTS_ALL_LEADERS_REQUEST';\nexport const CONSULTANTS_ALL_LEADERS_SUCCESS = 'CONSULTANTS_ALL_LEADERS_SUCCESS';\nexport const CONSULTANTS_ALL_LEADERS_FAIL = 'CONSULTANTS_ALL_LEADERS_FAIL';\nexport const CONSULTANTS_ALL_LEADERS_FOCUS = 'CONSULTANTS_ALL_LEADERS_FOCUS';\nexport const CONSULTANTS_ALL_LEADERS_RESET = 'CONSULTANTS_ALL_LEADERS_RESET';\n\nexport const CONSULTANT_MY_REQUEST = 'CONSULTANT_MY_REQUEST';\nexport const CONSULTANT_MY_SUCCESS = 'CONSULTANT_MY_SUCCESS';\nexport const CONSULTANT_MY_FAIL = 'CONSULTANT_MY_FAIL';\nexport const CONSULTANT_MY_RESET = 'CONSULTANT_MY_RESET';\n\nexport const CONSULTANT_DELEGATE_UPDATE_REQUEST = 'CONSULTANT_DELEGATE_UPDATE_REQUEST';\nexport const CONSULTANT_DELEGATE_UPDATE_SUCCESS = 'CONSULTANT_DELEGATE_UPDATE_SUCCESS';\nexport const CONSULTANT_DELEGATE_UPDATE_FAIL = 'CONSULTANT_DELEGATE_UPDATE_FAIL';\nexport const CONSULTANT_DELEGATE_UPDATE_RESET = 'CONSULTANT_DELEGATE_UPDATE_RESET';\n\nexport const CONSULTANT_MY_UPDATE_REQUEST = 'CONSULTANT_MY_UPDATE_REQUEST';\nexport const CONSULTANT_MY_UPDATE_SUCCESS = 'CONSULTANT_MY_UPDATE_SUCCESS';\nexport const CONSULTANT_MY_UPDATE_FAIL = 'CONSULTANT_MY_UPDATE_FAIL';\nexport const CONSULTANT_MY_UPDATE_RESET = 'CONSULTANT_MY_UPDATE_RESET';\n\nexport const CONSULTANT_CREATE_REQUEST = 'CONSULTANT_CREATE_REQUEST';\nexport const CONSULTANT_CREATE_SUCCESS = 'CONSULTANT_CREATE_SUCCESS';\nexport const CONSULTANT_CREATE_FAIL = 'CONSULTANT_CREATE_FAIL';\nexport const CONSULTANT_CREATE_RESET = 'CONSULTANT_CREATE_RESET';\n\nexport const CONSULTANT_DELETE_REQUEST = 'CONSULTANT_DELETE_REQUEST';\nexport const CONSULTANT_DELETE_SUCCESS = 'CONSULTANT_DELETE_SUCCESS';\nexport const CONSULTANT_DELETE_FAIL = 'CONSULTANT_DELETE_FAIL';\nexport const CONSULTANT_DELETE_RESET = 'CONSULTANT_DELETE_RESET';\n\nexport const CONSULTANT_CDM_LIST_REQUEST = 'CONSULTANT_CDM_LIST_REQUEST';\nexport const CONSULTANT_CDM_LIST_SUCCESS = 'CONSULTANT_CDM_LIST_SUCCESS';\nexport const CONSULTANT_CDM_LIST_FAIL = 'CONSULTANT_CDM_LIST_FAIL';\nexport const CONSULTANT_CDM_LIST_RESET = 'CONSULTANT_CDM_LIST_RESET';\n\nexport const CONSULTANT_PRACTICE_LIST_REQUEST = 'CONSULTANT_PRACTICE_LIST_REQUEST';\nexport const CONSULTANT_PRACTICE_LIST_SUCCESS = 'CONSULTANT_PRACTICE_LIST_SUCCESS';\nexport const CONSULTANT_PRACTICE_LIST_FAIL = 'CONSULTANT_PRACTICE_LIST_FAIL';\nexport const CONSULTANT_PRACTICE_LIST_RESET = 'CONSULTANT_PRACTICE_LIST_RESET';\n\nexport const CONSULTANT_UPDATE_COMMENT_REQUEST = 'CONSULTANT_UPDATE_COMMENT_REQUEST';\nexport const CONSULTANT_UPDATE_COMMENT_SUCCESS = 'CONSULTANT_UPDATE_COMMENT_SUCCESS';\nexport const CONSULTANT_UPDATE_COMMENT_FAIL = 'CONSULTANT_UPDATE_COMMENT_FAIL';\nexport const CONSULTANT_UPDATE_COMMENT_RESET = 'CONSULTANT_UPDATE_COMMENT_RESET';\n\nexport const CONSULTANT_CDM_REQUEST = 'CONSULTANT_CDM_REQUEST';\nexport const CONSULTANT_CDM_SUCCESS = 'CONSULTANT_CDM_SUCCESS';\nexport const CONSULTANT_CDM_FAIL = 'CONSULTANT_CDM_FAIL';\nexport const CONSULTANT_CDM_RESET = 'CONSULTANT_CDM_RESET';\n\nexport const CONSULTANT_SKILLS_REQUEST = 'CONSULTANT_SKILLS_REQUEST';\nexport const CONSULTANT_SKILLS_SUCCESS = 'CONSULTANT_SKILLS_SUCCESS';\nexport const CONSULTANT_SKILLS_FAIL = 'CONSULTANT_SKILLS_FAIL';\nexport const CONSULTANT_SKILLS_RESET = 'CONSULTANT_SKILLS_RESET';\n\nexport const CONSULTANT_ALL_SKILLS_REQUEST = 'CONSULTANT_ALL_SKILLS_REQUEST';\nexport const CONSULTANT_ALL_SKILLS_SUCCESS = 'CONSULTANT_ALL_SKILLS_SUCCESS';\nexport const CONSULTANT_ALL_SKILLS_FAIL = 'CONSULTANT_ALL_SKILLS_FAIL';\nexport const CONSULTANT_ALL_SKILLS_RESET = 'CONSULTANT_ALL_SKILLS_RESET';\n\nexport const CONSULTANT_ALL_STAFF_REQUEST = 'CONSULTANT_ALL_STAFF_REQUEST';\nexport const CONSULTANT_ALL_STAFF_SUCCESS = 'CONSULTANT_ALL_STAFF_SUCCESS';\nexport const CONSULTANT_ALL_STAFF_FAIL = 'CONSULTANT_ALL_STAFF_FAIL';\nexport const CONSULTANT_ALL_STAFF_RESET = 'CONSULTANT_ALL_STAFF_RESET';\n\nexport const CONSULTANT_ADD_SKILL_REQUEST = 'CONSULTANT_ADD_SKILL_REQUEST';\nexport const CONSULTANT_ADD_SKILL_SUCCESS = 'CONSULTANT_ADD_SKILL_SUCCESS';\nexport const CONSULTANT_ADD_SKILL_FAIL = 'CONSULTANT_ADD_SKILL_FAIL';\nexport const CONSULTANT_ADD_SKILL_RESET = 'CONSULTANT_ADD_SKILL_RESET';\n\nexport const CONSULTANT_DELETE_SKILL_REQUEST = 'CONSULTANT_DELETE_SKILL_REQUEST';\nexport const CONSULTANT_DELETE_SKILL_SUCCESS = 'CONSULTANT_DELETE_SKILL_SUCCESS';\nexport const CONSULTANT_DELETE_SKILL_FAIL = 'CONSULTANT_DELETE_SKILL_FAIL';\nexport const CONSULTANT_DELETE_SKILL_RESET = 'CONSULTANT_DELETE_SKILL_RESET';\n\nexport const CONSULTANT_UPDATE_SKILL_REQUEST = 'CONSULTANT_UPDATE_SKILL_REQUEST';\nexport const CONSULTANT_UPDATE_SKILL_SUCCESS = 'CONSULTANT_UPDATE_SKILL_SUCCESS';\nexport const CONSULTANT_UPDATE_SKILL_FAIL = 'CONSULTANT_UPDATE_SKILL_FAIL';\nexport const CONSULTANT_UPDATE_SKILL_RESET = 'CONSULTANT_UPDATE_SKILL_RESET';\n\nexport const CONSULTANT_MASS_IMPORT_REQUEST = 'CONSULTANT_MASS_IMPORT_REQUEST';\nexport const CONSULTANT_MASS_IMPORT_SUCCESS = 'CONSULTANT_MASS_IMPORT_SUCCESS';\nexport const CONSULTANT_MASS_IMPORT_FAIL = 'CONSULTANT_MASS_IMPORT_FAIL';\nexport const CONSULTANT_MASS_IMPORT_RESET = 'CONSULTANT_MASS_IMPORT_RESET';\n\nexport const CONSULTANT_UPLOAD_WK_REQUEST = 'CONSULTANT_UPLOAD_WK_REQUEST';\nexport const CONSULTANT_UPLOAD_WK_SUCCESS = 'CONSULTANT_UPLOAD_WK_SUCCESS';\nexport const CONSULTANT_UPLOAD_WK_FAIL = 'CONSULTANT_UPLOAD_WK_FAIL';\nexport const CONSULTANT_UPLOAD_WK_RESET = 'CONSULTANT_UPLOAD_WK_RESET';\n\nexport const CONSULTANT_UPDATE_WK_REQUEST = 'CONSULTANT_UPDATE_WK_REQUEST';\nexport const CONSULTANT_UPDATE_WK_SUCCESS = 'CONSULTANT_UPDATE_WK_SUCCESS';\nexport const CONSULTANT_UPDATE_WK_FAIL = 'CONSULTANT_UPDATE_WK_FAIL';\nexport const CONSULTANT_UPDATE_WK_RESET = 'CONSULTANT_UPDATE_WK_RESET';\n\nexport const CONSULTANT_GRADE = ['Intern', 'Analyst', 'Consultant', 'Senior consultant', 'Manager', 'Senior manager', 'Director', 'Partner', 'Unknown', 'Commercial', 'Research'];","export const SKILL_LIST_REQUEST = 'SKILL_LIST_REQUEST';\nexport const SKILL_LIST_SUCCESS = 'SKILL_LIST_SUCCESS';\nexport const SKILL_LIST_FAIL = 'SKILL_LIST_FAIL';\nexport const SKILL_LIST_RESET = 'SKILL_LIST_RESET';\n\nexport const SKILL_DELETE_REQUEST = 'SKILL_DELETE_REQUEST';\nexport const SKILL_DELETE_SUCCESS = 'SKILL_DELETE_SUCCESS';\nexport const SKILL_DELETE_FAIL = 'SKILL_DELETE_FAIL';\nexport const SKILL_DELETE_RESET = 'SKILL_DELETE_RESET';\n\nexport const SKILL_CREATE_REQUEST = 'SKILL_CREATE_REQUEST';\nexport const SKILL_CREATE_SUCCESS = 'SKILL_CREATE_SUCCESS';\nexport const SKILL_CREATE_FAIL = 'SKILL_CREATE_FAIL';\nexport const SKILL_CREATE_RESET = 'SKILL_CREATE_RESET';","export const DEAL_CREATE_REQUEST = 'DEAL_CREATE_REQUEST';\nexport const DEAL_CREATE_SUCCESS = 'DEAL_CREATE_SUCCESS';\nexport const DEAL_CREATE_FAIL = 'DEAL_CREATE_FAIL';\nexport const DEAL_CREATE_RESET = 'DEAL_CREATE_RESET';\n\nexport const DEAL_UPDATE_REQUEST = 'DEAL_UPDATE_REQUEST';\nexport const DEAL_UPDATE_SUCCESS = 'DEAL_UPDATE_SUCCESS';\nexport const DEAL_UPDATE_FAIL = 'DEAL_UPDATE_FAIL';\nexport const DEAL_UPDATE_RESET = 'DEAL_UPDATE_RESET';\n\nexport const DEAL_ALL_LIST_REQUEST = 'DEAL_ALL_LIST_REQUEST';\nexport const DEAL_ALL_LIST_SUCCESS = 'DEAL_ALL_LIST_SUCCESS';\nexport const DEAL_ALL_LIST_FAIL = 'DEAL_ALL_LIST_FAIL';\nexport const DEAL_ALL_LIST_RESET = 'DEAL_ALL_LIST_RESET';\n\nexport const DEAL_DELETE_REQUEST = 'DEAL_DELETE_REQUEST';\nexport const DEAL_DELETE_SUCCESS = 'DEAL_DELETE_SUCCESS';\nexport const DEAL_DELETE_FAIL = 'DEAL_DELETE_FAIL';\nexport const DEAL_DELETE_RESET = 'DEAL_DELETE_RESET';\n\nexport const DEAL_EDIT_REQUEST = 'DEAL_EDIT_REQUEST';\nexport const DEAL_EDIT_SUCCESS = 'DEAL_EDIT_SUCCESS';\nexport const DEAL_EDIT_FAIL = 'DEAL_EDIT_FAIL';\nexport const DEAL_EDIT_RESET = 'DEAL_EDIT_RESET';\n\nexport const DEAL_OLD_REQUEST = 'DEAL_OLD_REQUEST';\nexport const DEAL_OLD_SUCCESS = 'DEAL_OLD_SUCCESS';\nexport const DEAL_OLD_FAIL = 'DEAL_OLD_FAIL';\nexport const DEAL_OLD_RESET = 'DEAL_OLD_RESET';\n\nexport const DEAL_MASS_IMPORT_REQUEST = 'DEAL_MASS_IMPORT_REQUEST';\nexport const DEAL_MASS_IMPORT_SUCCESS = 'DEAL_MASS_IMPORT_SUCCESS';\nexport const DEAL_MASS_IMPORT_FAIL = 'DEAL_MASS_IMPORT_FAIL';\nexport const DEAL_MASS_IMPORT_RESET = 'DEAL_MASS_IMPORT_RESET';\n\nexport const REQUEST_STATUS = [\n    {name: 'Identify Leader', staff: true, priority: 10},\n    {name: 'Identify Staff', staff: true, priority: 7},\n    {name: 'Staff to validate by leader', staff: false, priority: 5},\n    {name: 'Staff validated by leader', staff: false, priority: 0},\n    {name: 'Staff validated by client', staff: false, priority: 0},\n    {name: 'You can staff elsewhere', staff: false, priority: 0},\n    {name: 'Close', staff: false, priority: 0}\n];\n\nexport const TYPE_BUSINESS = [\n    {name: 'New business', priority: 10},\n    {name: 'New position', priority: 5},\n    {name: 'Replacement', priority: 1}\n];\n\nexport const DEAL_STATUS = [\n    {name: 'Lead', priority: 0, display: 'onTrack'},\n    {name: 'Proposal to send', priority: 5, display: 'onTrack'},\n    {name: 'Proposal sent', priority: 5, display: 'onTrack'},\n    {name: 'Won', priority: 10, display: 'win'},\n    {name: 'Abandoned', priority: 0, display: 'lost'},\n    {name: 'Lost', priority: 0, display: 'lots'},\n];\n\nexport const DEAL_PROBABILITY = [\n    {name: 10, priority: 1},\n    {name: 30, priority: 3},\n    {name: 50, priority: 5},\n    {name: 70, priority: 7},\n    {name: 100, priority: 10},\n];","export const ACCESS_LIST_REQUEST = 'ACCESS_LIST_REQUEST';\nexport const ACCESS_LIST_SUCCESS = 'ACCESS_LIST_SUCCESS';\nexport const ACCESS_LIST_FAIL = 'ACCESS_LIST_FAIL';\nexport const ACCESS_LIST_RESET = 'ACCESS_LIST_RESET';\n\nexport const ACCESS_UPDATE_FRONTACCESS_REQUEST = 'ACCESS_UPDATE_FRONTACCESS_REQUEST';\nexport const ACCESS_UPDATE_FRONTACCESS_SUCCESS = 'ACCESS_UPDATE_FRONTACCESS_SUCCESS';\nexport const ACCESS_UPDATE_FRONTACCESS_FAIL = 'ACCESS_UPDATE_FRONTACCESS_FAIL';\nexport const ACCESS_UPDATE_FRONTACCESS_RESET = 'ACCESS_UPDATE_FRONTACCESS_RESET';\n\nexport const ACCESS_MODES = ['no', 'yes', 'read', 'write'];\nexport const ACCESS_DATAS = ['my', 'team', 'department', 'domain', 'all'];","export const CLIENT_ALL_REQUEST = 'CLIENT_ALL_REQUEST';\nexport const CLIENT_ALL_SUCCESS = 'CLIENT_ALL_SUCCESS';\nexport const CLIENT_ALL_FAIL = 'CLIENT_ALL_FAIL';\nexport const CLIENT_ALL_RESET = 'CLIENT_ALL_RESET';\n\nexport const CLIENT_CREATE_REQUEST = 'CLIENT_CREATE_REQUEST';\nexport const CLIENT_CREATE_SUCCESS = 'CLIENT_CREATE_SUCCESS';\nexport const CLIENT_CREATE_FAIL = 'CLIENT_CREATE_FAIL';\nexport const CLIENT_CREATE_RESET = 'CLIENT_CREATE_RESET';\n\nexport const CLIENT_UPDATE_REQUEST = 'CLIENT_UPDATE_REQUEST';\nexport const CLIENT_UPDATE_SUCCESS = 'CLIENT_UPDATE_SUCCESS';\nexport const CLIENT_UPDATE_FAIL = 'CLIENT_UPDATE_FAIL';\nexport const CLIENT_UPDATE_RESET = 'CLIENT_UPDATE_RESET';\n\nexport const CLIENT_DELETE_REQUEST = 'CLIENT_DELETE_REQUEST';\nexport const CLIENT_DELETE_SUCCESS = 'CLIENT_DELETE_SUCCESS';\nexport const CLIENT_DELETE_FAIL = 'CLIENT_DELETE_FAIL';\nexport const CLIENT_DELETE_RESET = 'CLIENT_DELETE_RESET';","export const TACE_CREATE_REQUEST = 'TACE_CREATE_REQUEST';\nexport const TACE_CREATE_SUCCESS = 'TACE_CREATE_SUCCESS';\nexport const TACE_CREATE_FAIL = 'TACE_CREATE_FAIL';\nexport const TACE_CREATE_RESET = 'TACE_CREATE_RESET';","export const EMAIL_CONTACTS_LIST_REQUEST = 'EMAIL_CONTACTS_LIST_REQUEST';\nexport const EMAIL_CONTACTS_LIST_SUCCESS = 'EMAIL_CONTACTS_LIST_SUCCESS';\nexport const EMAIL_CONTACTS_LIST_FAIL = 'EMAIL_CONTACTS_LIST_FAIL';\nexport const EMAIL_CONTACTS_LIST_RESET = 'EMAIL_CONTACTS_LIST_RESET';\n\nexport const EMAIL_SEND_DECISION_REQUEST = 'EMAIL_SEND_DECISION_REQUEST';\nexport const EMAIL_SEND_DECISION_SUCCESS = 'EMAIL_SEND_DECISION_SUCCESS';\nexport const EMAIL_SEND_DECISION_FAIL = 'EMAIL_SEND_DECISION_FAIL';\nexport const EMAIL_SEND_DECISION_RESET = 'EMAIL_SEND_DECISION_RESET';","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { pxxAvailabilitiesReducer, pxxListReducer, pxxAllListReducer, pxxTACEReducer, pxxUpdateReducer, pxxMyToEditReducer, pxxImportLineReducer, pxxUploadFileReducer, updatePxxReducer } from './reducers/pxxReducers';\nimport { userLoginReducer, userListReducer, userDeleteReducer, userDetailsReducer, userUpdateReducer, userRegisterReducer, userRedirectAzReducer, userUpdateProfileReducer, userToCreateReducer, userCreateReducer } from './reducers/userReducers';\nimport { \n    consultantMyReducer, \n    consultantsMyListReducer, \n    consultantMyUpdateReducer, \n    consultantsMyAdminListReducer,\n    consultantCreateReducer,\n    consultantCDMListReducer,\n    consultantPracticeListReducer,\n    consultantDeleteReducer,\n    consultantUpdateCommentReducer,\n    consultantAllSkillsReducer,\n    consultantAddSkillReducer,\n    consultantDeleteSkillReducer,\n    consultantUpdateSkillReducer,\n    consultantAllStaffsReducer,\n    consultantSkillsReducer,\n    consultantGetCDMReducer,\n    consultantsAllLeadersReducer,\n    consultantsMassImportReducer,\n    consultantUploadWkReducer,\n    consultantUpdateWkReducer,\n    consultantDelegateUpdateReducer\n } from './reducers/consultantReducers';\n//import {  } from './reducers/pxxReducers';\nimport { skillCreateReducer, skillDelteReducer, skillListReducer } from './reducers/skillReducers'\nimport { dealAllListReducer, dealCreateReducer, dealDeleteReducer, dealEditeReducer, dealOldReducer, dealsImportMassReducer, dealUpdateReducer } from './reducers/dealReducer';\nimport { accessFrontUpdateReducer, accessListReducer } from './reducers/accessReducers';\nimport { clientAllReducer, clientCreateReducer, clientUpdateReducer, clientDeleteReducer } from './reducers/clientReducers';\nimport { createTaceReducer } from './reducers/taceReducer';\nimport { contactsListReducer, sendOneEmailReducer } from './reducers/emailReducers';\n\nexport const reducer = combineReducers({\n    userRegister: userRegisterReducer,\n    userLogin: userLoginReducer,\n    userRedirectAz: userRedirectAzReducer,\n    userList: userListReducer,\n    userDetails: userDetailsReducer,\n    userUpdate: userUpdateReducer,\n    userDelete: userDeleteReducer,\n    userUpdateProfil: userUpdateProfileReducer,\n    userToCreate: userToCreateReducer,\n    userCreate: userCreateReducer,\n    consultantUpdateComment: consultantUpdateCommentReducer,\n    consultantsMyAdminList: consultantsMyAdminListReducer,\n    consultantsMyList: consultantsMyListReducer,\n    consultantMy: consultantMyReducer,\n    consultantMyUpdate: consultantMyUpdateReducer,\n    consultantCreate: consultantCreateReducer,\n    consultantDelete: consultantDeleteReducer,\n    consultantCDMList: consultantCDMListReducer,\n    consultantDelegateUpdate: consultantDelegateUpdateReducer,\n    consultantPracticeList: consultantPracticeListReducer,\n    //consultantAllAccess: consultantAllAccessReducer,\n    consultantSkills: consultantSkillsReducer,\n    consultantAllSkills: consultantAllSkillsReducer,\n    consultantAllStaffs: consultantAllStaffsReducer,\n    consultantAddSkill: consultantAddSkillReducer,\n    consultantDeleteSkill: consultantDeleteSkillReducer,\n    consultantUpdateSkill: consultantUpdateSkillReducer,\n    consultantGetCdm: consultantGetCDMReducer,\n    consultantsAllLeaders: consultantsAllLeadersReducer,\n    consultantsMassImport: consultantsMassImportReducer,\n    consultantUploadWk: consultantUploadWkReducer,\n    consultantUpdateWk: consultantUpdateWkReducer,\n    pxxList: pxxListReducer,\n    pxxAllList: pxxAllListReducer,\n    pxxMyToEdit: pxxMyToEditReducer,\n    pxxUpdate: pxxUpdateReducer,\n    pxxTACE: pxxTACEReducer,\n    pxxAvailabilities: pxxAvailabilitiesReducer,\n    updatePxx: updatePxxReducer,\n    //pxxImportMass: pxxImportMassReducer,\n    pxxImportLine: pxxImportLineReducer,\n    pxxUploadFile: pxxUploadFileReducer,\n    skillList: skillListReducer,\n    skillDelete: skillDelteReducer,\n    skillCreate: skillCreateReducer,\n    dealCreate: dealCreateReducer,\n    dealAllList: dealAllListReducer,\n    dealDelete: dealDeleteReducer,\n    dealEdit: dealEditeReducer,\n    dealUpdate: dealUpdateReducer,\n    dealOld: dealOldReducer,\n    dealsImportMass: dealsImportMassReducer,\n    accessList: accessListReducer,\n    accessFrontUpdate: accessFrontUpdateReducer,\n    clientAll: clientAllReducer,\n    clientCreate: clientCreateReducer,\n    clientUpdate: clientUpdateReducer,\n    clientDelete: clientDeleteReducer,\n    createTace: createTaceReducer,\n    contactsList: contactsListReducer,\n    sendOneEmail: sendOneEmailReducer\n});\n\n// space for store on local\nconst userItemsFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst initialState = {\n    userLogin: {userInfo: userItemsFromStorage}\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import { USER_LOGIN_FAIL, \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGOUT, \n    USER_ADMIN_CHANGE_PRACTICE,\n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_RESET,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_REQUEST, \n    USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DELETE_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_RESET,\n    USER_UPDATE_FAIL,\n    USER_REDIRECT_AZ_REQUEST,\n    USER_REDIRECT_AZ_SUCCESS,\n    USER_REDIRECT_AZ_FAIL,\n    USER_REDIRECT_AZ_RESET,\n    USER_ADMIN_CHANGE_PRACTICE_FAIL,\n    USER_TO_CREATE_REQUEST,\n    USER_TO_CREATE_SUCCESS,\n    USER_TO_CREATE_FAIL,\n    USER_TO_CREATE_RESET,\n    USER_CREATE_REQUEST,\n    USER_CREATE_SUCCESS,\n    USER_CREATE_FAIL,\n    USER_CREATE_RESET\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true };\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LOGOUT:\n            return {};\n        case USER_ADMIN_CHANGE_PRACTICE:\n            return { loading: false, userInfo: action.payload };\n        case USER_ADMIN_CHANGE_PRACTICE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userRedirectAzReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REDIRECT_AZ_REQUEST:\n            return { loading: true };\n        case USER_REDIRECT_AZ_SUCCESS:\n            return { loading: false, redirectURL: action.payload.redirectURL };\n        case USER_REDIRECT_AZ_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_REDIRECT_AZ_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_REGISTER_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userDetailsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { loading: true };\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload };\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_PROFILE_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\nexport const userListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true };\n        case USER_LIST_SUCCESS:\n            return { \n                loading: false, \n                users: action.payload.users,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count \n            };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LIST_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\n\nexport const userDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DELETE_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\n\nexport const userUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const userToCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_TO_CREATE_REQUEST:\n            return { loading: true };\n        case USER_TO_CREATE_SUCCESS:\n            return {\n                loading: false, \n                usersListToCreate: action.payload.usersListToCreate,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case USER_TO_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_TO_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const userCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_CREATE_REQUEST:\n            return { loading: true };\n        case USER_CREATE_SUCCESS:\n            return {loading: false, success: true, consultantId: action.payload.consultantId};\n        case USER_CREATE_FAIL:\n            return { loading: false, error: action.payload.message, consultantId: action.payload.consultantId };\n        case USER_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import {\n    CONSULTANTS_MY_DETAILS_REQUEST,\n    CONSULTANTS_MY_DETAILS_SUCCESS,\n    CONSULTANTS_MY_DETAILS_FAIL,\n    CONSULTANTS_MY_DETAILS_FOCUS,\n    CONSULTANTS_MY_DETAILS_RESET,\n    CONSULTANT_MY_REQUEST,\n    CONSULTANT_MY_SUCCESS,\n    CONSULTANT_MY_FAIL,\n    CONSULTANT_MY_RESET,\n    CONSULTANT_MY_UPDATE_REQUEST,\n    CONSULTANT_MY_UPDATE_SUCCESS,\n    CONSULTANT_MY_UPDATE_FAIL,\n    CONSULTANT_MY_UPDATE_RESET,\n    CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST,\n    CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS,\n    CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n    CONSULTANTS_ALL_ADMIN_DETAILS_RESET,\n    CONSULTANT_CREATE_REQUEST,\n    CONSULTANT_CREATE_SUCCESS,\n    CONSULTANT_CREATE_FAIL,\n    CONSULTANT_CREATE_RESET,\n    CONSULTANT_CDM_LIST_REQUEST,\n    CONSULTANT_CDM_LIST_SUCCESS,\n    CONSULTANT_CDM_LIST_FAIL,\n    CONSULTANT_CDM_LIST_RESET,\n    CONSULTANT_PRACTICE_LIST_REQUEST,\n    CONSULTANT_PRACTICE_LIST_SUCCESS,\n    CONSULTANT_PRACTICE_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_RESET,\n    CONSULTANT_DELETE_REQUEST,\n    CONSULTANT_DELETE_SUCCESS,\n    CONSULTANT_DELETE_FAIL,\n    CONSULTANT_DELETE_RESET,\n    CONSULTANT_UPDATE_COMMENT_REQUEST,\n    CONSULTANT_UPDATE_COMMENT_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_FAIL,\n    CONSULTANT_UPDATE_COMMENT_RESET,\n    //CONSULTANT_ALL_ACCESS_REQUEST,\n    //CONSULTANT_ALL_ACCESS_SUCCESS,\n    //CONSULTANT_ALL_ACCESS_FAIL,\n    //CONSULTANT_ALL_ACCESS_RESET,\n    CONSULTANT_ALL_SKILLS_REQUEST,\n    CONSULTANT_ALL_SKILLS_SUCCESS,\n    CONSULTANT_ALL_SKILLS_FAIL,\n    CONSULTANT_ALL_SKILLS_RESET,\n    CONSULTANT_ADD_SKILL_REQUEST,\n    CONSULTANT_ADD_SKILL_SUCCESS,\n    CONSULTANT_ADD_SKILL_FAIL,\n    CONSULTANT_ADD_SKILL_RESET,\n    CONSULTANT_DELETE_SKILL_REQUEST,\n    CONSULTANT_DELETE_SKILL_SUCCESS,\n    CONSULTANT_DELETE_SKILL_FAIL,\n    CONSULTANT_DELETE_SKILL_RESET,\n    CONSULTANT_UPDATE_SKILL_REQUEST,\n    CONSULTANT_UPDATE_SKILL_SUCCESS,\n    CONSULTANT_UPDATE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_RESET,\n    CONSULTANT_ALL_STAFF_REQUEST,\n    CONSULTANT_ALL_STAFF_SUCCESS,\n    CONSULTANT_ALL_STAFF_FAIL,\n    CONSULTANT_ALL_STAFF_RESET,\n    CONSULTANT_SKILLS_REQUEST,\n    CONSULTANT_SKILLS_SUCCESS,\n    CONSULTANT_SKILLS_FAIL,\n    CONSULTANT_SKILLS_RESET,\n    CONSULTANT_CDM_REQUEST,\n    CONSULTANT_CDM_SUCCESS,\n    CONSULTANT_CDM_FAIL,\n    CONSULTANT_CDM_RESET,\n    CONSULTANTS_ALL_LEADERS_REQUEST,\n    CONSULTANTS_ALL_LEADERS_SUCCESS,\n    CONSULTANTS_ALL_LEADERS_FAIL,\n    CONSULTANTS_ALL_LEADERS_RESET,\n    CONSULTANT_MASS_IMPORT_REQUEST,\n    CONSULTANT_MASS_IMPORT_SUCCESS,\n    CONSULTANT_MASS_IMPORT_FAIL,\n    CONSULTANT_MASS_IMPORT_RESET,\n    CONSULTANT_UPLOAD_WK_REQUEST,\n    CONSULTANT_UPLOAD_WK_SUCCESS,\n    CONSULTANT_UPLOAD_WK_FAIL,\n    CONSULTANT_UPLOAD_WK_RESET,\n    CONSULTANT_UPDATE_WK_REQUEST,\n    CONSULTANT_UPDATE_WK_SUCCESS,\n    CONSULTANT_UPDATE_WK_FAIL,\n    CONSULTANT_UPDATE_WK_RESET,\n    CONSULTANT_DELEGATE_UPDATE_REQUEST,\n    CONSULTANT_DELEGATE_UPDATE_SUCCESS,\n    CONSULTANT_DELEGATE_UPDATE_FAIL,\n    CONSULTANT_DELEGATE_UPDATE_RESET\n} from '../constants/consultantConstants';\n\nexport const consultantsMyListReducer = (state = {focus: 0}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_MY_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANTS_MY_DETAILS_SUCCESS:\n            return { ...state, loading: false, consultantsMy: action.payload };\n        case CONSULTANTS_MY_DETAILS_FAIL:\n            return { ...state, loading: false, error: action.payload };\n        case CONSULTANTS_MY_DETAILS_FOCUS:\n            return { ...state, focus: action.payload }\n        case CONSULTANTS_MY_DETAILS_RESET:\n            return { focus: 0 }\n        default:\n            return state;\n    }\n};\n\n/*\nexport const consultantsMyAdminListReducer = (state = {\n    loading: true, \n    consultantsMyAdmin: [\n        {\n            name: '',\n            matricule: '',\n            arrival: '',\n            leaving: '',\n            seriority: '',\n            comment: '',\n            practice: ''\n        }],\n    focus: 0\n}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS:\n            return { ...state, loading: false, consultantsMyAdmin: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FAIL:\n            return { ...state, loading: false, error: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS:\n            return { ...state, focus: action.payload }\n        case CONSULTANTS_ALL_ADMIN_DETAILS_RESET:\n            return { loading: true, consultantsMyAdmin: [\n                                {\n                                    name: '',\n                                    matricule: '',\n                                    arrival: '',\n                                    leaving: '',\n                                    seriority: '',\n                                    comment: '',\n                                    practice: ''\n                                }], focus: 0 }\n        default:\n            return state;\n    }\n};\n*/\n/*\nexport const consultantMyReducer = (state = { consultant: {} }, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANT_MY_SUCCESS:\n            return { loading: false, consultant: action.payload };\n        case CONSULTANT_MY_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_RESET:\n            return { consultant: {} }\n        default:\n            return state;\n    }\n};\n*/\n\nexport const consultantMyReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MY_SUCCESS:\n            return { loading: false, consultant: action.payload };\n        case CONSULTANT_MY_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantMyUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_UPDATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MY_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_MY_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_UPDATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantDelegateUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELEGATE_UPDATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELEGATE_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELEGATE_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_DELEGATE_UPDATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_CREATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CREATE_SUCCESS:\n            return { loading: false, success: true, consultantCreated: action.payload };\n        case CONSULTANT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CREATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELETE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_DELETE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantCDMListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_CDM_LIST_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CDM_LIST_SUCCESS:\n            return { loading: false, cdmList: action.payload };\n        case CONSULTANT_CDM_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CDM_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantPracticeListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_PRACTICE_LIST_REQUEST:\n            return { loading: true };\n        case CONSULTANT_PRACTICE_LIST_SUCCESS:\n            return { loading: false, practiceList: action.payload };\n        case CONSULTANT_PRACTICE_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_PRACTICE_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateCommentReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_COMMENT_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_COMMENT_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_UPDATE_COMMENT_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_UPDATE_COMMENT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsMyAdminListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST:\n            return { loading: true };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS:\n            return { \n                loading: false, \n                consultantsMyAdmin: action.payload.consultants,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsAllLeadersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_LEADERS_REQUEST:\n            return { loading: true };\n        case CONSULTANTS_ALL_LEADERS_SUCCESS:\n            return { loading: false, leaderslist: action.payload };\n        case CONSULTANTS_ALL_LEADERS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANTS_ALL_LEADERS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantGetCDMReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CONSULTANT_CDM_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CDM_SUCCESS:\n            return { loading: false, success: true, cdm: action.payload };\n        case CONSULTANT_CDM_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CDM_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantSkillsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_SKILLS_REQUEST:\n            return { loading: true };\n        case CONSULTANT_SKILLS_SUCCESS:\n            return { loading: false, skills: action.payload };\n        case CONSULTANT_SKILLS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_SKILLS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAllSkillsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ALL_SKILLS_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ALL_SKILLS_SUCCESS:\n            return { loading: false, skills: action.payload };\n        case CONSULTANT_ALL_SKILLS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_ALL_SKILLS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAllStaffsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ALL_STAFF_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ALL_STAFF_SUCCESS:\n            return { loading: false, staffings: action.payload };\n        case CONSULTANT_ALL_STAFF_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_ALL_STAFF_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAddSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ADD_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ADD_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_ADD_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_ADD_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantDeleteSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELETE_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELETE_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELETE_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_DELETE_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_UPDATE_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPDATE_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsMassImportReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MASS_IMPORT_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MASS_IMPORT_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_MASS_IMPORT_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_MASS_IMPORT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUploadWkReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPLOAD_WK_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPLOAD_WK_SUCCESS:\n            return { loading: false, success: true, path: action.payload };\n        case CONSULTANT_UPLOAD_WK_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPLOAD_WK_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateWkReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_WK_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_WK_SUCCESS:\n            return { loading: false, success: true, message: action.payload };\n        case CONSULTANT_UPDATE_WK_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPDATE_WK_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import {\n    PXX_LIST_REQUEST,\n    PXX_LIST_SUCCESS,\n    PXX_LIST_FAIL,\n    PXX_LIST_RESET,\n    PXX_MY_TO_EDIT_REQUEST,\n    PXX_MY_TO_EDIT_SUCCESS,\n    PXX_MY_TO_EDIT_FAIL,\n    PXX_MY_TO_EDIT_RESET,\n    PXX_UPDATE_REQUEST,\n    PXX_UPDATE_SUCCESS,\n    PXX_UPDATE_FAIL,\n    PXX_UPDATE_RESET,\n    PXX_TACE_REQUEST,\n    PXX_TACE_SUCCESS,\n    PXX_TACE_FAIL,\n    PXX_TACE_RESET,\n    PXX_AVAILABILITIES_REQUEST,\n    PXX_AVAILABILITIES_SUCCESS,\n    PXX_AVAILABILITIES_FAIL,\n    PXX_AVAILABILITIES_RESET,\n    PXX_ALL_REQUEST,\n    PXX_ALL_SUCCESS,\n    PXX_ALL_FAIL,\n    PXX_ALL_RESET,\n    PXX_IMPORT_LINE_REQUEST,\n    PXX_IMPORT_LINE_SUCCESS,\n    PXX_IMPORT_LINE_FAIL,\n    PXX_IMPORT_LINE_RESET,\n    PXX_UPLOAD_FILE_REQUEST,\n    PXX_UPLOAD_FILE_SUCCESS,\n    PXX_UPLOAD_FILE_FAIL,\n    PXX_UPLOAD_FILE_RESET,\n    PXX_UPDATE_PXX_REQUEST,\n    PXX_UPDATE_PXX_SUCCESS,\n    PXX_UPDATE_PXX_FAIL,\n    PXX_UPDATE_PXX_RESET\n} from '../constants/pxxConstants';\n\nexport const pxxMyToEditReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_MY_TO_EDIT_REQUEST:\n            return { loading: true };\n        case PXX_MY_TO_EDIT_SUCCESS:\n            return { loading: false, pxx: action.payload };\n        case PXX_MY_TO_EDIT_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_MY_TO_EDIT_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n};\n\nexport const pxxUpdateReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPDATE_REQUEST:\n            return { loading: true };\n        case PXX_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case PXX_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPDATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxTACEReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_TACE_REQUEST:\n            return { loading: true, success: false };\n        case PXX_TACE_SUCCESS:\n            return { loading: false, success: true, tace: action.payload };\n        case PXX_TACE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_TACE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxAvailabilitiesReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_AVAILABILITIES_REQUEST:\n            return { loading: true, success: false };\n        case PXX_AVAILABILITIES_SUCCESS:\n            return { loading: false, success: true, availabilities: action.payload };\n        case PXX_AVAILABILITIES_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_AVAILABILITIES_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxAllListReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_ALL_REQUEST:\n            return { loading: true, success: false };\n        case PXX_ALL_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                pxxs: action.payload.pxxs,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case PXX_ALL_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_ALL_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\n/* export const pxxImportMassReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_IMPORT_MASS_REQUEST:\n            return { loading: true };\n        case PXX_IMPORT_MASS_SUCCESS:\n            return { \n                loading: false, \n                success:true, \n                message: action.payload.message,\n                datas: action.payload.datas\n            };\n        case PXX_IMPORT_MASS_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_IMPORT_MASS_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n}; */\n\nexport const pxxImportLineReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_IMPORT_LINE_REQUEST:\n            return { loading: true };\n        case PXX_IMPORT_LINE_SUCCESS:\n            return { loading: false, success:true, updatedLine: action.payload };\n        case PXX_IMPORT_LINE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_IMPORT_LINE_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n};\n\nexport const pxxUploadFileReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPLOAD_FILE_REQUEST:\n            return { loading: true };\n        case PXX_UPLOAD_FILE_SUCCESS:\n            return { loading: false, success:true, path: action.payload };\n        case PXX_UPLOAD_FILE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPLOAD_FILE_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\nexport const updatePxxReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPDATE_PXX_REQUEST:\n            return { loading: true };\n        case PXX_UPDATE_PXX_SUCCESS:\n            return { loading: false, success:true, message: action.payload };\n        case PXX_UPDATE_PXX_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPDATE_PXX_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\n\n// TO DELETE //\n\nexport const pxxListReducer = (state= { pxxs: { pxxMonthInformation: [], pxxUserList: [] } }, action) => {\n    switch(action.type) {\n        case PXX_LIST_REQUEST:\n            return { loading: true, pxxs: {} };\n        case PXX_LIST_SUCCESS:\n            return { loading: false, pxxs: action.payload };\n        case PXX_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_LIST_RESET:\n            return { pxxs: { pxxMonthInformation: [], pxxUserList: [] } };\n        default:\n            return state ;\n    }\n};","import { \n    SKILL_LIST_REQUEST, \n    SKILL_LIST_RESET, \n    SKILL_LIST_SUCCESS, \n    SKILL_LIST_FAIL, \n    SKILL_DELETE_REQUEST,\n    SKILL_DELETE_SUCCESS,\n    SKILL_DELETE_FAIL,\n    SKILL_DELETE_RESET,\n    SKILL_CREATE_REQUEST,\n    SKILL_CREATE_SUCCESS,\n    SKILL_CREATE_FAIL,\n    SKILL_CREATE_RESET\n} from \"../constants/skillsConstants\";\n\nexport const skillListReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_LIST_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_LIST_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                skills: action.payload.skills,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n             };\n        case SKILL_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_LIST_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const skillDelteReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_DELETE_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case SKILL_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_DELETE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const skillCreateReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_CREATE_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case SKILL_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_CREATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};","import { \n    DEAL_ALL_LIST_FAIL,\n    DEAL_ALL_LIST_REQUEST,\n    DEAL_ALL_LIST_RESET,\n    DEAL_ALL_LIST_SUCCESS,\n    DEAL_CREATE_FAIL, \n    DEAL_CREATE_REQUEST, \n    DEAL_CREATE_RESET, \n    DEAL_CREATE_SUCCESS, \n    DEAL_DELETE_FAIL, \n    DEAL_DELETE_REQUEST,\n    DEAL_DELETE_RESET,\n    DEAL_DELETE_SUCCESS,\n    DEAL_EDIT_FAIL,\n    DEAL_EDIT_REQUEST,\n    DEAL_EDIT_RESET,\n    DEAL_EDIT_SUCCESS,\n    DEAL_MASS_IMPORT_FAIL,\n    DEAL_MASS_IMPORT_REQUEST,\n    DEAL_MASS_IMPORT_RESET,\n    DEAL_MASS_IMPORT_SUCCESS,\n    DEAL_OLD_FAIL,\n    DEAL_OLD_REQUEST,\n    DEAL_OLD_RESET,\n    DEAL_OLD_SUCCESS,\n    DEAL_UPDATE_FAIL,\n    DEAL_UPDATE_REQUEST,\n    DEAL_UPDATE_RESET,\n    DEAL_UPDATE_SUCCESS\n} from \"../constants/dealConstants\";\n\nexport const dealCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_CREATE_REQUEST:\n            return { loading: true };\n        case DEAL_CREATE_SUCCESS:\n            return { loading: false, success: true, createId: action.payload };\n        case DEAL_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_UPDATE_REQUEST:\n            return { loading: true };\n        case DEAL_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case DEAL_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealAllListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_ALL_LIST_REQUEST:\n            return { loading: true };\n        case DEAL_ALL_LIST_SUCCESS:\n            return { \n                loading: false, \n                success: true,\n                deals: action.payload.deals,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case DEAL_ALL_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_ALL_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_DELETE_REQUEST:\n            return { loading: true };\n        case DEAL_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case DEAL_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_DELETE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealEditeReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_EDIT_REQUEST:\n            return { loading: true };\n        case DEAL_EDIT_SUCCESS:\n            return { loading: false, success: true, deal: action.payload };\n        case DEAL_EDIT_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_EDIT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealOldReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_OLD_REQUEST:\n            return { loading: true };\n        case DEAL_OLD_SUCCESS:\n            return { loading: false, success: true, oldDeals: action.payload };\n        case DEAL_OLD_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_OLD_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealsImportMassReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_MASS_IMPORT_REQUEST:\n            return { loading: true };\n        case DEAL_MASS_IMPORT_SUCCESS:\n            return { loading: false, success: true, datas: action.payload.datas };\n        case DEAL_MASS_IMPORT_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_MASS_IMPORT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    ACCESS_LIST_FAIL, \n    ACCESS_LIST_REQUEST, \n    ACCESS_LIST_RESET, \n    ACCESS_LIST_SUCCESS, \n    ACCESS_UPDATE_FRONTACCESS_FAIL, \n    ACCESS_UPDATE_FRONTACCESS_REQUEST,\n    ACCESS_UPDATE_FRONTACCESS_SUCCESS,\n    ACCESS_UPDATE_FRONTACCESS_RESET\n} from \"../constants/accessConstants\";\n\nexport const accessListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ACCESS_LIST_REQUEST:\n            return { loading: true };\n        case ACCESS_LIST_SUCCESS:\n            return { loading: false, access: action.payload };\n        case ACCESS_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case ACCESS_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const accessFrontUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ACCESS_UPDATE_FRONTACCESS_REQUEST:\n            return { loading: true };\n        case ACCESS_UPDATE_FRONTACCESS_SUCCESS:\n            return { loading: false, success: true };\n        case ACCESS_UPDATE_FRONTACCESS_FAIL:\n            return { loading: false, error: action.payload };\n        case ACCESS_UPDATE_FRONTACCESS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    CLIENT_ALL_FAIL, \n    CLIENT_ALL_REQUEST, \n    CLIENT_ALL_RESET, \n    CLIENT_ALL_SUCCESS, \n    CLIENT_CREATE_FAIL, \n    CLIENT_CREATE_REQUEST,\n    CLIENT_CREATE_RESET,\n    CLIENT_CREATE_SUCCESS,\n    CLIENT_UPDATE_FAIL,\n    CLIENT_UPDATE_REQUEST,\n    CLIENT_UPDATE_SUCCESS,\n    CLIENT_UPDATE_RESET,\n    CLIENT_DELETE_REQUEST,\n    CLIENT_DELETE_SUCCESS,\n    CLIENT_DELETE_FAIL,\n    CLIENT_DELETE_RESET\n} from \"../constants/clientConstants\";\n\nexport const clientAllReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_ALL_REQUEST:\n            return { loading: true };\n        case CLIENT_ALL_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                clients: action.payload.clients,\n                page: action.payload.page,\n                pages: action.payload.pages,\n                count: action.payload.count\n            };\n        case CLIENT_ALL_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_ALL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientCreateReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_CREATE_REQUEST:\n            return { loading: true };\n        case CLIENT_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientUpdateReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_UPDATE_REQUEST:\n            return { loading: true };\n        case CLIENT_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_DELETE_REQUEST:\n            return { loading: true };\n        case CLIENT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_DELETE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    TACE_CREATE_FAIL,\n    TACE_CREATE_REQUEST,\n    TACE_CREATE_RESET,\n    TACE_CREATE_SUCCESS,\n} from \"../constants/taceConstants\";\n\nexport const createTaceReducer = (state= {}, action) => {\n    switch(action.type) {\n        case TACE_CREATE_REQUEST:\n            return { loading: true, success: false };\n        case TACE_CREATE_SUCCESS:\n            return { loading: false, taceData: action.payload };\n        case TACE_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case TACE_CREATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};","import { \n    EMAIL_CONTACTS_LIST_FAIL, \n    EMAIL_CONTACTS_LIST_REQUEST, \n    EMAIL_CONTACTS_LIST_RESET, \n    EMAIL_CONTACTS_LIST_SUCCESS, \n    EMAIL_SEND_DECISION_FAIL, \n    EMAIL_SEND_DECISION_REQUEST,\n    EMAIL_SEND_DECISION_SUCCESS,\n    EMAIL_SEND_DECISION_RESET\n} from \"../constants/emailConstants\";\n\nexport const contactsListReducer = (state= { }, action) => {\n    switch(action.type) {\n        case EMAIL_CONTACTS_LIST_REQUEST:\n            return { loading: true };\n        case EMAIL_CONTACTS_LIST_SUCCESS:\n            return { loading: false, contacts: action.payload };\n        case EMAIL_CONTACTS_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case EMAIL_CONTACTS_LIST_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\nexport const sendOneEmailReducer = (state= { }, action) => {\n    switch(action.type) {\n        case EMAIL_SEND_DECISION_REQUEST:\n            return { loading: true };\n        case EMAIL_SEND_DECISION_SUCCESS:\n            return { success:true, loading: false, email: action.payload.email };\n        case EMAIL_SEND_DECISION_FAIL:\n            return { loading: false, error: action.payload };\n        case EMAIL_SEND_DECISION_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};","import axios from 'axios';\nimport { CONSULTANTS_MY_DETAILS_RESET, CONSULTANT_MY_RESET, CONSULTANT_PRACTICE_LIST_RESET } from '../constants/consultantConstants';\nimport { PXX_LIST_RESET, PXX_MY_TO_EDIT_RESET, PXX_UPDATE_RESET } from '../constants/pxxConstants';\nimport { \n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DELETE_REQUEST, \n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS, \n    USER_DETAILS_FAIL, \n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL, \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_REGISTER_RESET,\n    USER_REDIRECT_AZ_REQUEST,\n    USER_REDIRECT_AZ_SUCCESS,\n    USER_REDIRECT_AZ_FAIL,\n    USER_ADMIN_CHANGE_PRACTICE_FAIL,\n    USER_ADMIN_CHANGE_PRACTICE,\n    USER_TO_CREATE_REQUEST,\n    USER_TO_CREATE_SUCCESS,\n    USER_TO_CREATE_FAIL,\n    USER_CREATE_REQUEST,\n    USER_CREATE_SUCCESS,\n    USER_CREATE_FAIL\n} from \"../constants/userConstants\";\n\n\n//export const login = (email, password) => async(dispatch) => {\nexport const login = (type, param) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        let data = '';\n        if (type === 'LOCAL') {\n            // data contains all shared user informations\n            data  = await axios.post('/api/users/login', {email: param.email, password: param.password}, config);\n        }\n\n        if (type === 'AZ') {\n            data = await axios.get(`/api/users/loginAz?code=${param.code}`, config);\n        }\n\n        const userInfo = {\n            ...data.data,\n            accountType: type,\n        }\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: userInfo\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(userInfo))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getTransparentNewToken = (information, userInfo) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n        \n        //console.log(\"information\", information);\n        const type = 'LOCAL'\n        //const { userLogin: { userInfo } } = getState();\n\n        //console.log('userInfo', userInfo);\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data }  = await axios.post('/api/users/renewToken', information, config);\n\n        const userInfoUpdated = {\n            ...data,\n            accountType: type,\n        }\n\n        //console.log(\"userInfoUpdated\", userInfoUpdated);\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: userInfoUpdated\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(userInfoUpdated));\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const changeAdminPractice = (userInfo, practice) => async (dispatch) => {\n    try {\n        \n        const newUserInfo = userInfo;\n        newUserInfo.consultantProfil.practice = practice\n\n        dispatch({\n            type: USER_ADMIN_CHANGE_PRACTICE,\n            payload: newUserInfo\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(newUserInfo));\n\n    } catch (error) {\n        dispatch({\n            type: USER_ADMIN_CHANGE_PRACTICE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getRedirectAz = () => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_REDIRECT_AZ_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        // Check if user is configured in app\n        const { data } = await axios.get('/api/users/redirectAz', config);\n\n        dispatch({\n            type: USER_REDIRECT_AZ_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_REDIRECT_AZ_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const logout = () => (dispatch) => {\n    //localStorage.removeItem('userInfo');\n    localStorage.clear();\n    dispatch({type: USER_LOGOUT});\n    dispatch({type: USER_REGISTER_RESET});\n    dispatch({type: CONSULTANTS_MY_DETAILS_RESET});\n    dispatch({type: CONSULTANT_MY_RESET});\n    dispatch({type: PXX_LIST_RESET});\n    dispatch({type: PXX_MY_TO_EDIT_RESET});\n    dispatch({type: PXX_UPDATE_RESET});\n    dispatch({type: CONSULTANT_PRACTICE_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.post('/api/users', {name, email, password}, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        });\n\n        /*\n        // we also want to inform user is logged\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        */\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getUserDetails = (id) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.get(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.put(`/api/users/profile`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        });\n\n        // dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload: data,\n        // });\n\n        // dispatch({\n        //     type: USER_DETAILS_SUCCESS,\n        //     payload: data,\n        // });\n\n        //localStorage.setItem('userInfo', JSON.stringify(data));\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const listUsers = (practice='', keyword={}, pageNumber='', pageSize='15') => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_LIST_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n        //const userPractice = userInfo.consultantProfil.practice;\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        //const { data } = await axios.get(`/api/users`, config);\n        const { data } = await axios.get(`/api/users?practice=${practice}&searchName=${keyword.searchName}&searchStatus=${keyword.searchStatus}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const deleteUser = (id) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateUser = (user) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/users/${user._id}`, user, config);\n\n        dispatch({ type: USER_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getUsersToCreate = ({practice, keyword, pageSize, pageNumber}) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_TO_CREATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/users/list-to-create?practice=${practice}&consultantName=${keyword.consultantName}&cdmName=${keyword.cdmName}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n\n        dispatch({ type: USER_TO_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: USER_TO_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const createUser = (user) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_CREATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/users/create-from-ihm`, user, config);\n\n        dispatch({ type: USER_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: USER_CREATE_FAIL,\n            payload: error.response.data\n            // payload: error.response && error.response.data.message\n            //     ? error.response.data.message\n            //     : error.message\n        });\n        //console.log(error.response);\n    }\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst DisplayChildren = ({ access, children }) => {\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    let grantedAccess = false;\n\n    if (userInfo) {\n        const rule = userInfo.profil.frontAccess.filter(x => x.id === access);\n        if (rule.length > 0) {\n            grantedAccess = rule[0].mode !== 'no' ? true : false\n        }\n    }\n\n    return (\n        <span>\n            {grantedAccess && children}\n        </span>\n    )\n}\n\nexport default DisplayChildren;\n","import axios from 'axios';\nimport {\n    CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n    CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST,\n    CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS,\n    CONSULTANTS_MY_DETAILS_FAIL,\n    CONSULTANTS_MY_DETAILS_FOCUS,\n    CONSULTANTS_MY_DETAILS_REQUEST,\n    CONSULTANTS_MY_DETAILS_SUCCESS,\n    CONSULTANT_MY_FAIL,\n    CONSULTANT_MY_REQUEST,\n    CONSULTANT_MY_SUCCESS,\n    CONSULTANT_MY_UPDATE_FAIL,\n    CONSULTANT_MY_UPDATE_REQUEST,\n    CONSULTANT_MY_UPDATE_SUCCESS,\n    CONSULTANT_CREATE_REQUEST,\n    CONSULTANT_CREATE_SUCCESS,\n    CONSULTANT_CREATE_FAIL,\n    CONSULTANT_CDM_LIST_REQUEST,\n    CONSULTANT_CDM_LIST_SUCCESS,\n    CONSULTANT_CDM_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_REQUEST,\n    CONSULTANT_PRACTICE_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_SUCCESS,\n    CONSULTANT_DELETE_REQUEST,\n    CONSULTANT_DELETE_FAIL,\n    CONSULTANT_DELETE_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_REQUEST,\n    CONSULTANT_UPDATE_COMMENT_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_FAIL,\n    //CONSULTANT_ALL_ACCESS_REQUEST,\n    //CONSULTANT_ALL_ACCESS_SUCCESS,\n    //CONSULTANT_ALL_ACCESS_FAIL,\n    CONSULTANT_ALL_SKILLS_REQUEST,\n    CONSULTANT_ALL_SKILLS_SUCCESS,\n    CONSULTANT_ALL_SKILLS_FAIL,\n    CONSULTANT_ADD_SKILL_REQUEST,\n    CONSULTANT_ADD_SKILL_SUCCESS,\n    CONSULTANT_ADD_SKILL_FAIL,\n    CONSULTANT_DELETE_SKILL_REQUEST,\n    CONSULTANT_DELETE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_REQUEST,\n    CONSULTANT_UPDATE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_SUCCESS,\n    CONSULTANT_ALL_STAFF_REQUEST,\n    CONSULTANT_ALL_STAFF_SUCCESS,\n    CONSULTANT_ALL_STAFF_FAIL,\n    CONSULTANT_DELETE_SKILL_SUCCESS,\n    CONSULTANT_SKILLS_REQUEST,\n    CONSULTANT_SKILLS_FAIL,\n    CONSULTANT_SKILLS_SUCCESS,\n    CONSULTANT_CDM_REQUEST,\n    CONSULTANT_CDM_SUCCESS,\n    CONSULTANT_CDM_FAIL,\n    CONSULTANTS_ALL_LEADERS_REQUEST,\n    CONSULTANTS_ALL_LEADERS_SUCCESS,\n    CONSULTANTS_ALL_LEADERS_FAIL,\n    CONSULTANT_MASS_IMPORT_REQUEST,\n    CONSULTANT_MASS_IMPORT_SUCCESS,\n    CONSULTANT_MASS_IMPORT_FAIL,\n    CONSULTANT_UPLOAD_WK_REQUEST,\n    CONSULTANT_UPLOAD_WK_SUCCESS,\n    CONSULTANT_UPLOAD_WK_FAIL,\n    CONSULTANT_UPDATE_WK_REQUEST,\n    CONSULTANT_UPDATE_WK_SUCCESS,\n    CONSULTANT_UPDATE_WK_FAIL,\n    CONSULTANT_DELEGATE_UPDATE_REQUEST,\n    CONSULTANT_DELEGATE_UPDATE_SUCCESS,\n    CONSULTANT_DELEGATE_UPDATE_FAIL\n} from '../constants/consultantConstants';\n\nexport const getAllMyConsultants = (option = '') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANTS_MY_DETAILS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants?option=${option}`, config);        \n\n        dispatch({ type: CONSULTANTS_MY_DETAILS_SUCCESS, payload: data });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANTS_MY_DETAILS_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const setConsultantFocus = (focus) => async(dispatch) => {\n    dispatch({type: CONSULTANTS_MY_DETAILS_FOCUS, payload: focus});\n}\n\nexport const getMyConsultant = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MY_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_MY_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateMyConsultant = (consultant) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MY_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/${consultant._id}`, consultant, config);\n        if (!data) {\n            throw new Error('Error: your modification is not saved')\n        }\n\n        dispatch({ type: CONSULTANT_MY_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MY_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateDelegateConsultant = (consultantId, delegation) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELEGATE_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/delegate/${consultantId}`, delegation, config);\n        if (!data) {\n            throw new Error('Error: your modification is not saved')\n        }\n\n        dispatch({ type: CONSULTANT_DELEGATE_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_DELEGATE_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const createConsultant = (consultant) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/consultants', consultant, config);\n\n        dispatch({ type: CONSULTANT_CREATE_SUCCESS, payload: data });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANT_CREATE_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const deleteConsultant = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/consultants/${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_DELETE_SUCCESS });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANT_DELETE_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const getAllCDM = (practice) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CDM_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/cdm/${practice}`, config);\n\n        dispatch({ type: CONSULTANT_CDM_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_CDM_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllPractice = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_PRACTICE_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/practicelist`, config);\n\n        dispatch({ type: CONSULTANT_PRACTICE_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_PRACTICE_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllStaffs = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_ALL_STAFF_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/staffings?consultantId=${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_ALL_STAFF_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ALL_STAFF_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateComment = (consultantId, commentText) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CONSULTANT_UPDATE_COMMENT_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        await axios.put(`/api/consultants/comment/${consultantId}`, {commentText}, config);\n\n        dispatch({ type: CONSULTANT_UPDATE_COMMENT_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_UPDATE_COMMENT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllLeaders = (searchValue='') => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANTS_ALL_LEADERS_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/leaderslist?searchLeader=${searchValue}`, config);\n\n        dispatch({ type: CONSULTANTS_ALL_LEADERS_SUCCESS, payload: data });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANTS_ALL_LEADERS_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const getAllMyAdminConsultants = (keyword = '', pageNumber = '', pageSize = '15') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/admin/consultants?keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        \n        dispatch({ type: CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getConsultantCdm = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CDM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}/cdm`, config);\n\n        dispatch({ type: CONSULTANT_CDM_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_CDM_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getConsultantSkills = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_SKILLS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}/skill`, config);\n\n        dispatch({ type: CONSULTANT_SKILLS_SUCCESS, payload: data.quality });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_SKILLS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllConsultantSkills = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_ALL_SKILLS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/skills`, config);\n\n        dispatch({ type: CONSULTANT_ALL_SKILLS_SUCCESS, payload: data.skills });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ALL_SKILLS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantAddASkill = (consultantId, skillId, level) => async (dispatch, getState) => {\n\n    //console.log(\"consultantId\", consultantId, 'skillId', skillId, 'level', level);\n\n    try {\n        const skill = {\n            skill: skillId,\n            level: level\n        }\n\n        dispatch({ type: CONSULTANT_ADD_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/${consultantId}/skill`, skill, config);\n\n        dispatch({ type: CONSULTANT_ADD_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ADD_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantDeleteSkill = (consultantId, skillId) => async (dispatch, getState) => {\n\n    //console.log(\"consultantId\", consultantId, 'skillId', skillId);\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELETE_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/consultants/${consultantId}/skill/${skillId}`, config);\n\n        dispatch({ type: CONSULTANT_DELETE_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_DELETE_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantUpdateASkillLevel = (consultantId, skillId, level) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_UPDATE_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/${consultantId}/skill/${skillId}`, { level }, config);\n\n        dispatch({ type: CONSULTANT_UPDATE_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_UPDATE_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantImportInMass = (data) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MASS_IMPORT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/admin/mass-import`, data, config);\n\n        dispatch({ type: CONSULTANT_MASS_IMPORT_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MASS_IMPORT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const uploadConsultantWk = (file) => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANT_UPLOAD_WK_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/upload/consultant`, file, config);\n\n        dispatch({ type: CONSULTANT_UPLOAD_WK_SUCCESS, payload: data });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANT_UPLOAD_WK_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const updateConsultantWk = (path) => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANT_UPDATE_WK_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                'responseType': 'stream',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/admin/wk`, path, config);\n        /* axios.put(`/api/consultants/admin/wk`, path, config)\n            .then((response) => {\n                response.data.pipe(fs.createWriteStream(\"tempsfile.txt\"))\n            })\n            .catch(error => console.log(error)); */\n        \n        dispatch({ type: CONSULTANT_UPDATE_WK_SUCCESS, payload: data });\n        //dispatch({ type: CONSULTANT_UPDATE_WK_SUCCESS, payload: 'OK' });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANT_UPDATE_WK_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { changeAdminPractice } from '../actions/userActions';\nimport DisplayChildren from './DisplayChildren';\nimport { getAllPractice } from '../actions/consultantActions';\n\nconst ChangeAdminPractice = ({ userInfo }) => {\n\n    const dispatch = useDispatch();\n\n    const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    const { practiceList } = consultantPracticeList;\n\n    useEffect(() => {\n        if (!practiceList) {\n            dispatch(getAllPractice());\n        }\n    }, [dispatch, practiceList]);\n\n    return (\n        <DisplayChildren access='adminChangePractice'>\n            <NavDropdown title={userInfo.consultantProfil.practice ? userInfo.consultantProfil.practice : 'undefined'}>\n                {practiceList && practiceList.map((practiceName, val) => (\n                    <NavDropdown.Item\n                        key={val}\n                        onClick={() => dispatch(changeAdminPractice(userInfo, practiceName))}\n                    >{practiceName}</NavDropdown.Item>\n                ))}\n            </NavDropdown>\n        </DisplayChildren>\n    )\n};\n\nexport default ChangeAdminPractice;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport { changeAdminPractice, logout } from '../actions/userActions';\nimport DisplayChildren from './DisplayChildren';\nimport { getAllPractice } from '../actions/consultantActions';\nimport ChangeAdminPractice from './ChangeAdminPractice';\n\n\nconst Header = () => {\n    \n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    // const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    // const { practiceList } = consultantPracticeList;\n\n    // useEffect(() => {\n    //     if (!practiceList) {\n    //         dispatch(getAllPractice());\n    //     }\n    // }, [dispatch, practiceList]);\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    };\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect fixed=\"top\">\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Performance App</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n\n                            <DisplayChildren access='staffingRequest'>\n                                <LinkContainer to='/staffing'>\n                                    <Nav.Link>Staffing Request</Nav.Link>\n                                </LinkContainer>\n                            </DisplayChildren>\n\n                            <DisplayChildren access='editMyPxx'>\n                                <LinkContainer to='/pxx'>\n                                    <Nav.Link>Edit My Pxx</Nav.Link>\n                                </LinkContainer>\n                            </DisplayChildren>\n\n                            {userInfo ? (\n\n                                <NavDropdown title={`${userInfo.name} (${userInfo.profil.profil && userInfo.profil.profil})` || 'no user'} id=\"username\">\n\n                                    <DisplayChildren access='editMyProfil'>\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item>Edit My Profil</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access={'manageConsultants'}>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/consultants'>\n                                            <NavDropdown.Item>Manage Consultant</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access={'manageDeals'}>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/deals'>\n                                            <NavDropdown.Item>Manage Deals</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <NavDropdown.Divider />\n\n                                    <LinkContainer to='/login'>\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                    </LinkContainer>\n                                    \n                                </NavDropdown>\n\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\n                                    </LinkContainer>)}\n\n                            <DisplayChildren access='adminMenu'>\n                                <NavDropdown title='admin'>\n\n                                    <DisplayChildren access='manageUsers'>\n                                        <LinkContainer to='/admin/users'>\n                                            <NavDropdown.Item>Manage Users</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageSkills'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/skills'>\n                                            <NavDropdown.Item>Manage Skills</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageProfils'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/profils'>\n                                            <NavDropdown.Item>Manage Profils</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageCompanies'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/companies'>\n                                            <NavDropdown.Item>Manage companies</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                </NavDropdown>\n                            </DisplayChildren>\n                            \n                            { userInfo && (\n                                <ChangeAdminPractice userInfo={userInfo} />\n                                // <DisplayChildren access='adminChangePractice'>\n                                //     <NavDropdown title={userInfo.consultantProfil.practice ? userInfo.consultantProfil.practice : 'undefined' }>\n                                //         {practiceList && practiceList.map((practiceName, val) => (\n                                //             <NavDropdown.Item \n                                //                 key={val}\n                                //                 onClick={() => dispatch(changeAdminPractice(userInfo, practiceName))}\n                                //             >{practiceName}</NavDropdown.Item>\n                                //         ))}\n                                //     </NavDropdown>\n                                // </DisplayChildren>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; byJPR\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant} className='my-1'>\n            {children}\n        </Alert>\n    )\n};\n\nMessage.defaultProps = {\n    variant: 'info',\n};\n\nMessage.propTypes = {\n    variant: PropTypes.string\n}\n\nexport default Message;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <Spinner \n            animation='border' \n            role='status' \n            stype={{ \n                width:'100px', \n                height: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}>\n                <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\n//import  { Redirect } from 'react-router-dom'\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Container, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login, getRedirectAz } from '../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    const userRedirectAz = useSelector(state => state.userRedirectAz);\n    const { redirectURL } = userRedirectAz;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo && userInfo.status === 'Validated') {\n            history.push(redirect);\n            // If user is authenticate, there is no search and user is redirect to home page\n        }\n    });\n\n    // effect to redirect to AZ authentication\n    useEffect(() => {\n        if (redirectURL) {\n            window.location.href = redirectURL\n        }\n    },[redirectURL]);\n\n    useEffect(() => {\n        if (location.search && location.search.split('code=').length > 0) {\n            //console.log('authentication code find, add request to get token');\n            //console.log(location.search.split('code=')[1]);\n            dispatch(login('AZ', {code: location.search.split('code=')[1]}));\n            history.push('/');\n        }\n    })\n\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            // Dispatch Login\n            dispatch(login('LOCAL', {email:email, password:password}));\n        }\n    };\n\n    const azAuthentClick = () => {\n        dispatch(getRedirectAz());\n    }\n\n\n    return (\n        <>\n            <FormContainer>\n                <h1>Sign In</h1>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value.toLocaleLowerCase())}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Row>\n                        <Col>\n                            <Button type='submit' variant='primary' block>\n                                Sign In\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className='mt-3'>\n                            <Button \n                                variant=\"success\"\n                                onClick={azAuthentClick}\n                                block\n                                disabled={process.env.REACT_APP_ENV === 'poc'}\n                            >-- AZ Connect --</Button>\n                        </Col>\n                    </Row>\n\n\n                    <Row className='py-3'>\n                        <Col>\n                            New User ? <Link to={redirect ?\n                                `/register?reditect=${redirect}`\n                                : '/register'}>Register</Link>\n                        </Col>\n                    </Row>\n                </Form>\n\n            </FormContainer>\n\n            {['demo', 'dev'].includes(process.env.REACT_APP_ENV) && (\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6} className='mt-5'>\n                            <h3>Disclaimer</h3>\n                            <p>Welcome on this demo! Please note that this is not an official Wavestone product.<br />\n                            On this online resource management application, you'll be able to:</p>\n                            <ul>\n                                <li>Login with different profiles (admin, coordinator, CDM, manager)</li>\n                                <li>Edit your Pxx</li>\n                                <li>Edit your consultants' profiles (position, expertise, partial time, etc.)</li>\n                                <li>Create, edit and keep track of your staffing requests</li>\n                                <li>Staff your available consultants on staffing requests</li>\n                                <li>Check where a consultant is staffed</li>\n                                <li>Create and manage a dataset of skills for your consultants</li>\n                                <li>Get access to latest KPIs and export the data on Excel</li>\n                            </ul>\n                            <h4>Test acounts logins:</h4>\n                            <Table hover striped>\n                                <thead>\n                                    <tr className='table-secondary'>\n                                        <th className='align-middle text-light text-center'>Email</th>\n                                        <th className='align-middle text-light text-center'>Password</th>\n                                        <th className='align-middle text-light text-center'>Description</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11000@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Admin account with all accreditation on application</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11001@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Coordinator of practice PTC1 account</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11004@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>CDM of practice PTC1 account</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>detmanagerprofil@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Manager of DET account</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>detconsultantprofil@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Consultant of DET account</td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </Container>\n            )}\n\n\n            {process.env.REACT_APP_ENV === 'poc' && (\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6} className='mt-5'>\n                            <h3>Disclaimer</h3>\n                            <p>Welcome on this poc! Please note that this is not an official Wavestone product.<br />\n                        On this online resource management application, you'll be able to:</p>\n                            <ul>\n                                <li>Edit your activity forecast</li>\n                                <li>Share your personal and annual objectives</li>\n                            </ul>\n                            <p>Others functionalities will come soon!</p>\n                            <br />\n                        </Col>\n                    </Row>\n                </Container>\n            )}\n        </>\n    );\n};\n\nexport default LoginScreen;\n","import axios from 'axios';\n//import fetch from 'fetch';\n//import fs from 'fs';\n//import path from 'path';\nimport {\n    PXX_LIST_REQUEST,\n    PXX_LIST_SUCCESS,\n    PXX_LIST_FAIL,\n    PXX_MY_TO_EDIT_REQUEST,\n    PXX_MY_TO_EDIT_FAIL,\n    PXX_MY_TO_EDIT_SUCCESS,\n    PXX_UPDATE_REQUEST,\n    PXX_UPDATE_SUCCESS,\n    PXX_UPDATE_FAIL,\n    PXX_TACE_REQUEST,\n    PXX_TACE_SUCCESS,\n    PXX_TACE_FAIL,\n    PXX_AVAILABILITIES_REQUEST,\n    PXX_AVAILABILITIES_SUCCESS,\n    PXX_AVAILABILITIES_FAIL,\n    PXX_ALL_REQUEST,\n    PXX_ALL_FAIL,\n    PXX_ALL_SUCCESS,\n    PXX_IMPORT_LINE_REQUEST,\n    PXX_IMPORT_LINE_SUCCESS,\n    PXX_IMPORT_LINE_FAIL,\n    PXX_UPLOAD_FILE_REQUEST,\n    PXX_UPLOAD_FILE_SUCCESS,\n    PXX_UPLOAD_FILE_FAIL,\n    PXX_UPDATE_PXX_REQUEST,\n    PXX_UPDATE_PXX_SUCCESS,\n    PXX_UPDATE_PXX_FAIL\n} from '../constants/pxxConstants';\n\nexport const getMyConsultantPxxToEdit = (consultantId, searchDate, numberOfMonth) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_MY_TO_EDIT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        searchDate.setUTCDate(1);\n        const month = searchDate.toISOString().substring(0,10);\n\n        const { data } = await axios.get(`/api/pxx/edit?consultantId=${consultantId}&month=${month}&numberOfMonth=${numberOfMonth}`, config)\n        \n        /*\n        const functionDate = new Date(searchDate);\n        functionDate.setDate(1);\n        const pxx = [];\n        for (let incr = 0; incr < numberOfMonth; incr++){\n            \n            const transformDate = functionDate.toISOString().substring(0,10);\n            const { data } = await axios.get(`/api/pxx/consultantId/${consultantId}/month/${transformDate}`, config);\n            pxx.push(data);\n            functionDate.setMonth(functionDate.getMonth()+1);\n        }\n        dispatch({ type: PXX_MY_TO_EDIT_SUCCESS, payload: pxx });\n        */\n\n       dispatch({ type: PXX_MY_TO_EDIT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_MY_TO_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updatePxx = (pxx) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/pxx`, pxx, config);    \n\n        dispatch({ type: PXX_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\n// TO DELETE //\n\nconst transformListPxxToDisplay = (pxxData, pxxInfo) => {\n\n    const listConsultant = pxxData.data.map(pxx => (pxx.name));\n\n    // collect unique _id for consultant\n    const tampon = []\n    for (let incr = listConsultant.length - 1; incr >= 0; incr--) {\n        if (tampon.includes(listConsultant[incr]._id)) {\n            listConsultant.splice(incr, 1);\n        } else {\n            tampon.push(listConsultant[incr]._id);\n        }\n    }\n\n    const listPxx = [];\n    for (let incr = 0; incr < listConsultant.length; incr++) {\n\n        let pxx = [];\n\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].name,\n            userId: listConsultant[incr]._id,\n            information: \"consultantName\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].arrival,\n            userId: listConsultant[incr]._id,\n            information: \"consultantArrivalDate\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].leaving,\n            userId: listConsultant[incr]._id,\n            information: \"consultantLeavingDate\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].seniority,\n            userId: listConsultant[incr]._id,\n            information: \"consultantSeniority\"\n        });\n\n        for (let incrMonth = 0; incrMonth < pxxInfo.data.length; incrMonth++) {\n\n            let val = pxxData.data.filter(x => (x.name._id === listConsultant[incr]._id && x.month._id === pxxInfo.data[incrMonth]._id))[0];\n            if (val.length > 1) {\n                throw new Error({ message: 'number of value can not be up to 1' })\n            }\n            pxx.push({\n                type: \"day\",\n                value: val.prodDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'productionDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.notProdDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'notProductionDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.leavingDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'leavingDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.availableDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'availableDay'\n            });\n        }\n\n        listPxx.push(pxx);\n    }\n\n    return listPxx;\n\n}\n\nconst transformPxxMonthInfoToDisplay = (pxxInfo) => {\n    const pxxMonthInfoList = []\n    const firstLine = [];\n    const secondLine = [];\n\n    for (let incr = 0; incr < pxxInfo.data.length; incr++){\n        \n        firstLine.push({\n            name: pxxInfo.data[incr].name,\n            value: pxxInfo.data[incr].workingday\n        });\n        firstLine.push({ name:'', value:'' });\n        firstLine.push({ name:'', value:'' });\n        firstLine.push({ name:'', value:'' });\n    }\n\n    for (let incr = 0; incr < pxxInfo.data.length; incr++){\n        secondLine.push({ name:'Prod', value: 'P'});\n        secondLine.push({ name: 'Not Prod', value: 'NP'});\n        secondLine.push({ name: 'Hollidays', value: 'H'});\n        secondLine.push({ name: 'Availability', value: 'A'});\n    }\n    pxxMonthInfoList.push(firstLine, secondLine);\n\n    return pxxMonthInfoList;\n}\n\nexport const getPxxList = (searchDate, numberOfMonth) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        \n        const pxxInfo = await axios.get(`/api/monthdata?searchdate=${searchDate}&numberofmonths=${numberOfMonth}`);\n        const pxxMonthInfoList = transformPxxMonthInfoToDisplay(pxxInfo);\n\n        let monthId = \"\";\n        for (let incr = 0; incr < pxxInfo.data.length; incr++) {\n            if (incr === 0) {\n                monthId = pxxInfo.data[incr]._id;\n            }\n            monthId = monthId + '_' + pxxInfo.data[incr]._id;\n        }\n\n        const pxxData = await axios.get(`/api/pxx/${monthId}`, config);\n        const listPxx = transformListPxxToDisplay(pxxData, pxxInfo);\n\n        dispatch({ type: PXX_LIST_SUCCESS, payload: { pxxMonthInformation: pxxMonthInfoList, pxxUserList: listPxx } });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getTace = (practice, start, end) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_TACE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.get(`/api/pxx/chart/tace?practice=${practice}&start=${start}&end=${end}`, config);\n\n        dispatch({ type: PXX_TACE_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_TACE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAvailabilities = (practice='', start, end, skills='', experienceStart='', experienceEnd='', searchMode) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_AVAILABILITIES_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        let searchExperience = experienceStart.toString();\n        if (experienceEnd) {\n            searchExperience = searchExperience + '-' + experienceEnd.toString()\n        }\n\n        const { data } = await axios.get(`/api/pxx/chart/availability?practice=${practice}&start=${start}&end=${end}&skills=${skills}&experience=${searchExperience}&filterMode=${searchMode}`, config);\n\n        dispatch({ type: PXX_AVAILABILITIES_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_AVAILABILITIES_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllPxx = (practice = '', month = '', keywork = '', pageSize = '10', pageNumber = '1') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_ALL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.get(`/api/pxx?practice=${practice}&month=${month}&keyword=${keywork}&pageSize=${pageSize}&pageNumber=${pageNumber}`, config);\n\n        dispatch({ type: PXX_ALL_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_ALL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n/* export const pxxImportInMass = (datas) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_IMPORT_MASS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.put(`/api/pxx/admin/mass-import`, datas, config);\n\n        dispatch({ type: PXX_IMPORT_MASS_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_IMPORT_MASS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}; */\n\nexport const pxxUpdateALine = (line) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_IMPORT_LINE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.put(`/api/pxx/admin/line-import`, line, config);\n\n        dispatch({ type: PXX_IMPORT_LINE_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_IMPORT_LINE_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};\n\nexport const pxxUploadFiles = (files) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPLOAD_FILE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                \"Content-Type\": \"application/vnd.ms-excel\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        let result = '';\n        for (let incr=0 ; incr < files.length ; incr++) {\n            const file = files[incr];\n            const { data } = await axios.post(`/api/upload/pxx`, file, config);\n            result = data;\n        }\n\n\n        dispatch({ type: PXX_UPLOAD_FILE_SUCCESS, payload: result });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPLOAD_FILE_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};\n\nexport const updatePxxFiles = (path) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPDATE_PXX_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/pxx/admin/line-import-wk`, path, config);\n\n        dispatch({ type: PXX_UPDATE_PXX_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPDATE_PXX_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport InputGroup from 'react-bootstrap/InputGroup';\n// import FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport { updatePxx } from '../actions/pxxActions';\n\nconst PxxUserLine = ({ data }) => {\n\n    const dispatch = useDispatch();\n\n    // const [prodDayComponent, setProdDayComponent] = useState(Number(data.prodDay) ? Number(data.prodDay) : 0);\n    // const [notProdDayComponent, setNotProdDayComponent] = useState(Number(data.notProdDay) ? Number(data.notProdDay) : 0);\n    // const [leavingDayComponent, setLeavingDayComponent] = useState(Number(data.leavingDay) ? Number(data.leavingDay) : 0);\n    const [prodDayComponent, setProdDayComponent] = useState(data.prodDay ? data.prodDay : '0');\n    const [notProdDayComponent, setNotProdDayComponent] = useState(data.notProdDay ? data.notProdDay : '0');\n    const [leavingDayComponent, setLeavingDayComponent] = useState(data.leavingDay ? data.leavingDay : '0');\n    const [availableDayComponent, setAvailableDayComponent] = useState(Number(data.availableDay) ? Number(data.availableDay) : 0);\n    const [workingDay] = useState(Number(data.prodDay) + Number(data.notProdDay) + Number(data.leavingDay) + Number(data.availableDay));\n\n    const [hasChange, setHasChange] = useState(false);\n\n    // Calculate firstday of current month to compare with firstDayMonth of displayed Pxx\n    let firstDayOfCurrentMonth = new Date(Date.now());\n    firstDayOfCurrentMonth.setDate(1);\n    firstDayOfCurrentMonth = firstDayOfCurrentMonth.toISOString().substring(0, 10);\n\n    const editable = data.month ? (data.month.firstDay >= firstDayOfCurrentMonth) : false;\n\n    useEffect(() => {\n        const prd = transformNumber(prodDayComponent);\n        const nPrd = transformNumber(notProdDayComponent);\n        const lvg = transformNumber(leavingDayComponent);\n\n        if (hasChange && workingDay >= (prd + nPrd + lvg)) {\n            setAvailableDayComponent(workingDay - (prd + nPrd + lvg))\n            dispatch(updatePxx({\n                _id: data._id,\n                name: data.name,\n                month: data.month._id,\n                prodDay: prd,\n                notProdDay: nPrd,\n                leavingDay: lvg,\n                availableDay: workingDay - (prd + nPrd + lvg)\n            }));\n            setHasChange(false);\n        }\n    // eslint-disable-next-line\n    },[workingDay, prodDayComponent, notProdDayComponent, leavingDayComponent, data]);\n\n    // useEffect(() => {\n    //     if (hasChange && workingDay >= (prodDayComponent + notProdDayComponent + leavingDayComponent)) {\n    //         setAvailableDayComponent(workingDay - (prodDayComponent + notProdDayComponent + leavingDayComponent))\n    //         dispatch(updatePxx({\n    //             _id: data._id,\n    //             name: data.name,\n    //             month: data.month._id,\n    //             prodDay: prodDayComponent,\n    //             notProdDay: notProdDayComponent,\n    //             leavingDay: leavingDayComponent,\n    //             availableDay: workingDay - (prodDayComponent + notProdDayComponent + leavingDayComponent)\n    //         }));\n    //         setHasChange(false);\n    //     }\n    // // eslint-disable-next-line\n    // },[workingDay, prodDayComponent, notProdDayComponent, leavingDayComponent, data]);\n\n    const transformNumber = (value) => {\n        if(value.toString().match(/^[0-9]{0,}[.,]$/i)){\n            return Number(value + '0');\n        } else {\n            return Number(value);\n        }\n    }\n\n    return (\n        <>\n            <Row className=\"py-1\">\n                <Col xs={4} className=\"text-center align-middle\"><b>{data.month ? data.month.name : 'Not created Yeat'}</b> <i>{workingDay ? `(${workingDay}d)` : null}</i></Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - notProdDayComponent - leavingDayComponent) ? (workingDay - notProdDayComponent - leavingDayComponent) : '-'}\n                            step={0.5}\n                            placeholder='-'\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={prodDayComponent && prodDayComponent.toString()}\n                            onChange={(e) => {\n                                //setProdDayComponent(Number(e.target.value));\n                                if (e.target.value.match(/^[0-9]{0,}[.,][05]{0,1}$|^[0-9]{0,}$/i)) {\n                                    setProdDayComponent(e.target.value);\n                                    setHasChange(true);\n                                }\n                            }}\n                        ></Form.Control>\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - prodDayComponent - leavingDayComponent) ? (workingDay - prodDayComponent - leavingDayComponent) : '-'}\n                            step={0.5}\n                            placeholder='-'\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={notProdDayComponent && notProdDayComponent.toString()}\n                            onChange={(e) => {\n                                if (e.target.value.match(/^[0-9]{0,}[.,][05]{0,1}$|^[0-9]{0,}$/i)) {\n                                    //setNotProdDayComponent(Number(e.target.value));\n                                    setNotProdDayComponent(e.target.value);\n                                    setHasChange(true);\n                                }\n                            }}\n                        ></Form.Control>\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - prodDayComponent - notProdDayComponent) ? (workingDay - prodDayComponent - notProdDayComponent) : '-'}\n                            step={0.5}\n                            placeholder='-'\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={leavingDayComponent && leavingDayComponent.toString()}\n                            onChange={(e) => {\n                                if (e.target.value.match(/^[0-9]{0,}[.,][05]{0,1}$|^[0-9]{0,}$/i)) {\n                                    //setLeavingDayComponent(Number(e.target.value));\n                                    setLeavingDayComponent(e.target.value);\n                                    setHasChange(true);\n                                }\n                            }}\n                        ></Form.Control>\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"text\"\n                            //min={0}\n                            //max={workingDay ? workingDay : '-'}\n                            //step={0.5}\n                            placeholder='-'\n                            className=\"align-middle text-center p-0\"\n                            value={availableDayComponent && availableDayComponent.toString()}\n                            disabled\n                        ></Form.Control>\n                    </InputGroup>\n                </Col>\n\n            </Row>\n        </>\n    )\n}\n\nexport default PxxUserLine;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport PxxUserLine from '../components/PxxUserLine';\nimport { getMyConsultantPxxToEdit } from '../actions/pxxActions';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst PxxEditor = ({ consultantsMy, consultantFocus, searchDate, navigationMonthHandler }) => {\n\n    const dispatch = useDispatch();\n\n    const [numberOfMonth] = useState(5);\n\n    const pxxMyToEdit = useSelector(state => state.pxxMyToEdit);\n    const { loading: loadingPxx, error: errorPxx, pxx } = pxxMyToEdit;\n\n    const pxxUpdate = useSelector(state => state.pxxUpdate);\n    const { loading: loadingUpdate, error: errorUpdate } = pxxUpdate;\n\n    let consultantId = consultantsMy[consultantFocus]._id;\n    \n    useEffect(() => {\n\n        // Effect when loading component and each time entry parameters change\n        dispatch(getMyConsultantPxxToEdit(consultantId, searchDate, numberOfMonth));\n    }, [dispatch, searchDate, numberOfMonth, consultantId]);\n\n    return (\n        <ListGroup.Item>\n\n            <Row>\n                <Col xs={4} className='text-center align-middle'>\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                        style={{width: '8em'}}\n                    ><i className=\"fas fa-caret-up\"></i>  Previous</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={4} className=\"text-center align-middle px-1 pb-2\" style={{height: '2em'}}> {loadingUpdate && <Loader />}</Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Prd</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>NPrd</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Hld</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Avlb</strong></Col>\n            </Row>\n\n            {loadingPxx ? <Loader /> : errorPxx ? <Message variant=\"danger\">{errorPxx}</Message> : (\n                pxx.map((line, key) => (\n                        <PxxUserLine\n                            key={key}\n                            data={line}\n                        />\n                ))\n            )}\n\n            {errorUpdate && (\n                <Row><Message variant='danger'>{errorUpdate}</Message></Row>\n            )}\n            \n            <Row>\n                <Col xs={4} className='text-center align-middle'>\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                        style={{width: '8em'}}\n                    >Next  <i className=\"fas fa-caret-down\"></i></Button>\n                </Col>\n                {/* <Col xs={6} md={2} className=\"text-right\">\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                        block\n                    ><i className=\"fas fa-caret-left\"></i>  Previous</Button>\n                </Col>\n                <Col xs={6} md={2} className=\"text-left\">\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                        block\n                    >Next  <i className=\"fas fa-caret-right\"></i></Button>\n                </Col>\n                <Col xs={0} md={2}></Col> */}\n            </Row>\n\n        </ListGroup.Item>\n    )\n}\n\nexport default PxxEditor;\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst DropDownTitleContainer = ({children, title, close}) => {\n\n    const [hide, setHide] = useState(close);\n\n    return (\n        <Row className='mt-3'>\n            <Col>\n                <Button\n                    onClick={() => setHide(!hide)}\n                    variant='light'\n                    className='text-left'\n                    block\n                > <h3>{hide ? (\n                    <><i className=\"fas fa-caret-down\"></i> {title}</>\n                ) : (\n                        <><i className=\"fas fa-caret-up\"></i> {title}</>\n                    )}</h3></Button>\n\n                {!hide && children}\n            </Col>\n        </Row>\n    )\n}\n\nDropDownTitleContainer.defaultProps = {\n    close: true\n};\n\nexport default DropDownTitleContainer\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport { setConsultantFocus } from '../actions/consultantActions';\nimport Button from 'react-bootstrap/Button';\n\nconst ConsultantsTab = ({ history, consultantsMy, focusActive }) => {\n\n    const dispatch = useDispatch();\n\n    const onClickHandler = (focus, consultantId) => {\n        focusActive && dispatch(setConsultantFocus(focus));\n        //focusActive && setFocus(focus);\n        history.push(`/editconsultant/${consultantId}`);\n    };\n\n    return (\n\n        <Table responsive hover striped className='mt-3'>\n            <thead>\n                <tr className='table-light'>\n                    <th className='align-middle text-dark'>Consultant name</th>\n                    <th className='align-middle text-dark'>Matricule</th>\n                    <th className='align-middle text-dark'>Practice</th>\n                    <th className='align-middle text-dark'>Valued</th>\n                    <th className='align-middle text-dark'>Arrival</th>\n                    <th className='align-middle text-dark'>Leaving</th>\n                    <th className='align-middle text-dark'>Seniority</th>\n                    <th className='align-middle text-dark'>Comment</th>\n                    <th className='align-middle text-dark'></th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {consultantsMy.map((consultant, focus) => (\n                    <tr key={consultant._id} onClick={() => focusActive && dispatch(setConsultantFocus(focus))}>\n                        <td className='align-middle'>{consultant.name}</td>\n                        <td className='align-middle'>{consultant.matricule}</td>\n                        <td className='align-middle'>{consultant.practice}</td>\n                        <td className='align-middle'>{consultant.valued ? consultant.valued.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{consultant.arrival ? consultant.arrival.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{consultant.leaving ? consultant.leaving.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{\n                                consultant.valued ? ((new Date(Date.now()) - new Date(consultant.valued.substring(0,10)))/(1000*3600*24*365.25)).toString().substring(0,4) : 0\n                            } years</td>\n                        <td className='align-middle'>{consultant.comment}</td>\n                        <td className='align-middle'>\n                            <Button className='btn btn-light p-1' onClick={() => onClickHandler(focus, consultant._id)}>\n                                <i className=\"fas fa-user-edit\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default ConsultantsTab;\n","import React from 'react'\nimport { Helmet } from 'react-helmet';\n\nconst Meta = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Performance App'\n}\n\nexport default Meta\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Loader from './Loader';\nimport { getAllStaffs } from '../actions/consultantActions';\n\nconst ViewStaffs = ({ history, consultantId, displayedDeal = '', onNavigate = () => ('') }) => {\n\n    const dispatch = useDispatch();\n    const consultantAllStaffs = useSelector(state => state.consultantAllStaffs);\n    const { loading, staffings } = consultantAllStaffs;\n\n    useEffect(() => {\n        if (consultantId) {\n            dispatch(getAllStaffs(consultantId));\n        }\n    }, [dispatch, consultantId]);\n\n    return (\n        <Row>\n            <Col>\n                {loading && <Loader />}\n                <Table responsive hover striped className='mt-3'>\n                    <thead>\n                        <tr className='table-light'>\n                            <th className='align-middle text-dark'>Company</th>\n                            <th className='align-middle text-dark'>Title</th>\n                            <th className='align-middle text-dark'>Practice</th>\n                            <th className='align-middle text-dark'>Probability</th>\n                            <th className='align-middle text-dark'>Start</th>\n                            <th className='align-middle text-dark'>Deal status</th>\n                            <th className='align-middle text-dark'>Request status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {staffings && staffings.map(deal => (deal._id.toString() !== displayedDeal.toString()) && (\n                            <tr key={deal._id}>\n                                <td className='align-middle'>{deal.company}</td>\n                                <td className='align-middle'>{deal.title}</td>\n                                <td className='align-middle'>{deal.mainPractice}</td>\n                                <td className='align-middle'>{deal.probability} %</td>\n                                <td className='align-middle'>{deal.startDate.substring(0, 10)}</td>\n                                <td className='align-middle'>{deal.status}</td>\n                                <td className='align-middle'>{deal.requestStatus}</td>\n                                <td className='align-middle'>\n                                        <Button\n                                            onClick={() => {\n                                                history.push(`/staffing/${deal._id}`);\n                                                onNavigate();\n                                            }}\n                                            variant='light'\n                                        ><i className=\"fas fa-edit\"></i></Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ViewStaffs;\n","import axios from 'axios';\nimport { \n    DEAL_ALL_LIST_FAIL,\n    DEAL_ALL_LIST_REQUEST,\n    DEAL_ALL_LIST_SUCCESS,\n    DEAL_CREATE_FAIL, \n    DEAL_CREATE_REQUEST, \n    DEAL_CREATE_SUCCESS, \n    DEAL_DELETE_FAIL, \n    DEAL_DELETE_REQUEST,\n    DEAL_DELETE_SUCCESS,\n    DEAL_EDIT_FAIL,\n    DEAL_EDIT_REQUEST,\n    DEAL_EDIT_SUCCESS,\n    DEAL_MASS_IMPORT_FAIL,\n    DEAL_MASS_IMPORT_REQUEST,\n    DEAL_MASS_IMPORT_SUCCESS,\n    DEAL_OLD_FAIL,\n    DEAL_OLD_REQUEST,\n    DEAL_OLD_SUCCESS,\n    DEAL_UPDATE_FAIL,\n    DEAL_UPDATE_REQUEST,\n    DEAL_UPDATE_SUCCESS\n} from '../constants/dealConstants';\n\n\nexport const createDeal = (deal) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/deals`, deal, config);\n\n       dispatch({ type: DEAL_CREATE_SUCCESS, payload: data._id });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateDeal = (dealId, deal) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/deals/${dealId}`, deal, config);\n\n       dispatch({ type: DEAL_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllDeals = (keyword, pageNumber = 1, pageSize = 20, state = '', filter = '') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_ALL_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals?title=${keyword.title}&company=${keyword.company}&contact=${keyword.contact}&status=${keyword.status}&request=${keyword.request}&pageNumber=${pageNumber}&pageSize=${pageSize}&state=${state}&filterMy=${keyword.filterMy}&staff=${keyword.staff}`, config);\n\n       dispatch({ type: DEAL_ALL_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_ALL_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteDeal = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        //await axios.delete(`/api/deals?id=${id}`, config);\n        await axios.delete(`/api/deals/${id}`, config);\n\n       dispatch({ type: DEAL_DELETE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getDealToEdit = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_EDIT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals/${id}`, config);\n\n       dispatch({ type: DEAL_EDIT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getOldDeals = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_OLD_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals/old?consultantId=${consultantId}`, config);\n\n       dispatch({ type: DEAL_OLD_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_OLD_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const dealsImportInMass = (datas) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_MASS_IMPORT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/deals/admin/mass-import`, datas, config);\n\n       dispatch({ type: DEAL_MASS_IMPORT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_MASS_IMPORT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Loader from './Loader';\nimport { getOldDeals } from '../actions/dealActions';\n\nconst ViewOldStaffs = ({ history, consultantId, displayedDeal = '', onNavigate = () => ('') }) => {\n\n    const dispatch = useDispatch();\n\n    const dealOld = useSelector(state => state.dealOld);\n    const { loading, oldDeals } = dealOld;\n\n    /*const consultantAllStaffs = useSelector(state => state.consultantAllStaffs);\n    const { loading, staffings } = consultantAllStaffs;*/\n\n    useEffect(() => {\n        if (consultantId) {\n            dispatch(getOldDeals(consultantId));\n        }\n    }, [dispatch, consultantId]);\n\n    return (\n        <Row>\n            <Col>\n                {loading && <Loader />}\n                <Table responsive hover striped className='mt-3'>\n                    <thead>\n                        <tr className='table-light'>\n                            <th className='align-middle text-dark'>Company</th>\n                            <th className='align-middle text-dark'>Title</th>\n                            <th className='align-middle text-dark'>Practice</th>\n                            <th className='align-middle text-dark'>Probability</th>\n                            <th className='align-middle text-dark'>Start</th>\n                            <th className='align-middle text-dark'>Deal status</th>\n                            <th className='align-middle text-dark'>Request status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {oldDeals && oldDeals.map(deal => (\n                            <tr key={deal._id}>\n                                <td className='align-middle'>{deal.company}</td>\n                                <td className='align-middle'>{deal.title}</td>\n                                <td className='align-middle'>{deal.mainPractice}</td>\n                                <td className='align-middle'>{deal.probability} %</td>\n                                <td className='align-middle'>{deal.startDate.substring(0, 10)}</td>\n                                <td className='align-middle'>{deal.status}</td>\n                                <td className='align-middle'>{deal.staffingRequest.requestStatus}</td>\n                                <td className='align-middle'>\n                                        <Button\n                                            onClick={() => {\n                                                history.push(`/staffing/${deal._id}`);\n                                                onNavigate();\n                                            }}\n                                            variant='light'\n                                        ><i className=\"fas fa-edit\"></i></Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ViewOldStaffs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nconst Rating = ({ value, setValue, text, color, editable }) => {\n\n    const valueList = [...new Array(Math.floor(value)).fill(1)];\n    if (value % 1 >= 0.5) {\n        valueList.push(value % 1)\n    }\n    while (valueList.length < 5) {\n        valueList.push(0)\n    }\n\n    return (\n        \n            <Form.Group className='mb-0'>\n                <InputGroup>\n                    {valueList && valueList.map((x, val) => (\n                        <span key={val}>\n                            <Button\n                                className='mx-0 px-0'\n                                variant='ligth'\n                                onClick={() => { editable && (\n                                    x >= 1\n                                        ? setValue(val)\n                                        : x >= 0.5\n                                            ? setValue(val + 1)\n                                            : setValue(val + 0.5)\n                                )}}\n                            ><i style={{ color }}\n                                className={\n                                    x >= 1\n                                        ? 'fas fa-star'\n                                        : x >= 0.5\n                                            ? 'fas fa-star-half-alt'\n                                            : 'far fa-star'\n                                }>\n                                </i></Button>\n\n                        </span>\n                    ))}\n                    <span>{text && text}</span>\n                </InputGroup>\n            </Form.Group>\n\n        \n\n    )\n};\n\nRating.defaultProps = {\n    color: '#f8e825',\n    text: '',\n    editable: true,\n};\n\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n};\n\nexport default Rating;","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { consultantAddASkill, consultantDeleteSkill, consultantUpdateASkillLevel, getAllConsultantSkills, getConsultantSkills } from '../actions/consultantActions';\nimport Rating from './Rating';\nimport { CONSULTANT_UPDATE_SKILL_RESET } from '../constants/consultantConstants';\n\nconst SkillsDetails = ({consultantId, close=true, editable=true}) => {\n\n    const dispatch = useDispatch();\n\n    const [skillCategory, setSkillCategory] = useState('default');\n    const [skillId, setSkillId] = useState('default');\n    const [skillLevel, setSkillLevel] = useState(1);\n    const [skillCategoryList, setSkillCategoryList] = useState([]);\n\n    const [qualityOrdonned, setQualityOrdonned] = useState([]);\n\n    const [update, setUpdate] = useState(false);\n\n\n    const consultantAllSkills = useSelector(state => state.consultantAllSkills);\n    const { skills: skillsAll } = consultantAllSkills;\n\n    const consultantSkills = useSelector(state => state.consultantSkills);\n    const { loading, skills } = consultantSkills;\n\n    const consultantAddSkill = useSelector(state => state.consultantAddSkill);\n    const { loading: loadingConsultantAddSkill, success: successConsultantAddSkill, error: errorConsultantAddSkill } = consultantAddSkill;\n\n    /* const consultantUpdateSkill = useSelector(state => state.consultantUpdateSkill);\n    const { error: errorConsultantUpdateSkill } = consultantUpdateSkill;\n\n    const consultantDeleteSkillReducer = useSelector(state => state.consultantDeleteSkill);\n    const { success: successConsultantDeleteSkill } = consultantDeleteSkillReducer; */\n\n    useEffect(() => {\n        if (!skillsAll) {\n            dispatch(getAllConsultantSkills());\n        }\n    }, [dispatch, skillsAll]);\n\n    useEffect(() => {\n        dispatch(getConsultantSkills(consultantId));\n        //if(!skills) {\n        //}\n    }, [dispatch, consultantId]);\n\n    useEffect(() => {\n        if (skills) {\n            //setQuality(skills)\n            const ordonnedSkills = orderSkills(skills);\n            setQualityOrdonned(ordonnedSkills);\n        }\n    }, [dispatch, skills, consultantId]);\n\n    useEffect(() => {\n        if(update && !loading) {\n            dispatch(getConsultantSkills(consultantId));\n            setUpdate(false);\n        }\n    }, [dispatch, update, consultantId, loading])\n\n    useEffect(() => {\n        if (skillsAll) {\n            let categoryList = skillsAll.map(x => x.category);\n            categoryList = [...new Set(categoryList)];\n            setSkillCategoryList(categoryList);\n        }\n    }, [skillsAll]);\n\n    useEffect(() => {\n        //if ((successConsultantAddSkill || successConsultantDeleteSkill)) {\n        if (successConsultantAddSkill) {\n            setUpdate(true);\n        }\n    }, [\n        successConsultantAddSkill,\n        //successConsultantDeleteSkill,\n    ]);\n\n    const orderSkills = (skills) => {\n        const categoryList = [...new Set(skills.map(x => x.skill.category))]\n        const orderSkills = []\n        for (let incr = 0 ; incr < categoryList.length ; incr++) {\n            orderSkills.push({\n                category: categoryList[incr],\n                data: skills.filter( x => x.skill.category === categoryList[incr])\n            })\n        }\n        return orderSkills;\n    }\n\n    const handleAddSkill = (consultantId, skillId, skillLevel) => {\n        dispatch(consultantAddASkill(consultantId, skillId, skillLevel));\n    }\n\n    /* const handlerDeleteConsultantSkill = (consultantId, skillId) => {\n        dispatch(consultantDeleteSkill(consultantId, skillId));\n    }\n\n    const handleUpdateSkillLevel = (consultantId, skillId, level) => {\n        dispatch(consultantUpdateASkillLevel(consultantId, skillId, level));\n    } */\n\n    return (\n\n        <DropDownTitleContainer title='Skills' close={close}>\n\n            {editable && (\n                <ListGroup.Item>\n                    <h4>Add skills</h4>\n\n                    <Form.Row className='mt-3 align-items-end'>\n                        <Col xs={12} md={3}>\n                            <Form.Group controlId='skillCategory'>\n                                <Form.Label><strong>Category</strong></Form.Label>\n                                <Form.Control\n                                    as='select'\n                                    value={skillCategory ? skillCategory : 'default'}\n                                    onChange={(e) => setSkillCategory(e.target.value)}\n                                    required\n                                >\n                                    <option value='default'>Please Select</option>\n                                    {skillCategoryList && (\n                                        skillCategoryList.map((x, val) => (\n                                            <option\n                                                value={x}\n                                                key={val}\n                                            >{x}</option>\n                                        )))}\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} >\n                            <Form.Group controlId='skillName'>\n                                <Form.Label><strong>Skill</strong></Form.Label>\n                                <OverlayTrigger\n                                    placement=\"top\"\n                                    overlay={<Tooltip id=\"button-tooltip-2\">{skillId && skillsAll ? skillsAll.map(x => (x._id === skillId) && x.description) : 'no description'}</Tooltip>}\n                                >\n                                    <Form.Control\n                                        as='select'\n                                        value={skillId ? skillId : 'default'}\n                                        onChange={(e) => setSkillId(e.target.value)}\n                                        required\n                                    >\n                                        <option value='default'>Please Select</option>\n                                        {skillsAll && skillCategory && (\n                                            skillsAll.map((x, val) => (\n                                                x.category === skillCategory && (\n                                                    <option\n                                                        value={x._id}\n                                                        key={val}\n                                                    >{x.name}</option>\n                                                )\n                                            )))}\n\n                                    </Form.Control>\n                                </OverlayTrigger>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} >\n                            <Form.Group controlId='skillLevel'>\n                                <Form.Label><strong>Level</strong></Form.Label>\n                                <Form.Control\n                                    type='number'\n                                    min={0}\n                                    max={5}\n                                    step={0.5}\n                                    value={skillLevel ? skillLevel : 1}\n                                    onChange={(e) => setSkillLevel(e.target.value)}\n                                    required\n                                ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} className='align-items-bottom'>\n                            <Form.Group>\n                                <InputGroup>\n                                    <Button\n                                        block\n                                        onClick={() => handleAddSkill(consultantId, skillId, skillLevel)}\n                                    >{loadingConsultantAddSkill ? <Loader /> : 'Add'}</Button>\n                                </InputGroup>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {/*errorConsultantUpdateSkill && <Message variant='danger'>{errorConsultantUpdateSkill}</Message>*/}\n                    {errorConsultantAddSkill && <Message variant='danger'>{errorConsultantAddSkill}</Message>}\n\n                </ListGroup.Item>\n\n            )}\n            \n            \n            <ListGroup.Item>\n                {qualityOrdonned && qualityOrdonned.length ? (\n                    <ListGroup variant='flush'>\n                        {qualityOrdonned.map((categoryList,val) => (\n                            <ListGroup.Item key={val}>\n                                <h4>{categoryList.category}</h4>\n                                {categoryList.data.map( (x,val) => (\n                                    <SkillDisplayLine \n                                        consultantId={consultantId}\n                                        key={val}\n                                        skill={x}\n                                        val={val}\n                                        //handleUpdateSkillLevel={handleUpdateSkillLevel}\n                                        //handlerDeleteConsultantSkill={handlerDeleteConsultantSkill}\n                                        setUpdate={setUpdate}\n                                        editable={editable}\n                                    />\n                                ))}\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                ) : <p>Please add quality</p>}\n            </ListGroup.Item>\n\n        </DropDownTitleContainer>\n    )\n}\n\nconst SkillDisplayLine = ({ \n    consultantId, \n    skill, \n    val, \n    //handleUpdateSkillLevel, \n    //handlerDeleteConsultantSkill, \n    setUpdate,\n    editable=true}) => {\n\n    const dispatch = useDispatch();\n\n    const consultantUpdateSkill = useSelector(state => state.consultantUpdateSkill);\n    const { success: successConsultantUpdateSkill } = consultantUpdateSkill;\n\n    const consultantDeleteSkillReducer = useSelector(state => state.consultantDeleteSkill);\n    const { success: successConsultantDeleteSkill } = consultantDeleteSkillReducer;\n    \n    const [level, setLevel] = useState(skill.level);\n    const [waitingValidationLevel, setWaitingValidationLevel] = useState(skill.level);\n\n    useEffect(() => {\n        if (successConsultantDeleteSkill) {\n            setUpdate(true);\n        }\n    }, [\n        successConsultantDeleteSkill,\n        setUpdate\n    ]);\n\n    useEffect(() => {\n        if (successConsultantUpdateSkill) {\n            setLevel(waitingValidationLevel);\n            dispatch({type: CONSULTANT_UPDATE_SKILL_RESET})\n        }\n    },[dispatch, successConsultantUpdateSkill, waitingValidationLevel])\n\n\n    const updateLevel = (newLevel) => {\n        \n        dispatch(consultantUpdateASkillLevel(consultantId, skill.skill._id, newLevel));\n        setWaitingValidationLevel(newLevel);\n\n        //handleUpdateSkillLevel(consultantId, skill.skill._id, newLevel)\n    }\n\n\n    const handlerDeleteConsultantSkill = (consultantId, skillId) => {\n        dispatch(consultantDeleteSkill(consultantId, skillId));\n    }   \n\n\n    return (\n        <>\n            {/*errorConsultantUpdateSkill && <Message variant='danger'>{errorConsultantUpdateSkill}</Message>*/}\n            <Form.Row key={val}>\n                <Col xs={3}>\n                    <Form.Group controlId='skillName' className='mb-0'>\n                        <Form.Control\n                            plaintext\n                            readOnly\n                            value={skill.skill && skill.skill.name}\n                        ></Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Rating\n                        value={Number(level)}\n                        setValue={updateLevel}\n                        editable={editable}\n                    />\n                </Col>\n\n                <Col>\n                    {editable && (\n                        <Form.Group className='mb-0'>\n                            <InputGroup>\n                                <Button\n                                    //style={{color:'grey'}}\n                                    variant=\"secondary\"\n                                    size='sm'\n                                    onClick={() => handlerDeleteConsultantSkill(consultantId, skill.skill._id)}\n                                ><i className=\"fas fa-times-circle\"></i></Button>\n                            </InputGroup>\n                        </Form.Group>\n                    )}\n                </Col>\n            </Form.Row>\n        </>\n    )\n}\n\nexport default SkillsDetails\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PxxEditor from '../components/PxxEditor';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ConsultantsTab from '../components/ConsultantsTab';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport Loader from '../components/Loader';\nimport { getAllMyConsultants, updateComment, updateMyConsultant } from '../actions/consultantActions';\nimport { Container, FormControl, InputGroup } from 'react-bootstrap';\nimport { setConsultantFocus } from '../actions/consultantActions';\nimport ViewStaffs from '../components/ViewStaffs';\nimport ViewOldStaffs from '../components/ViewOldStaffs';\nimport SkillsDetails from '../components/SkillsDetails';\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst PxxEditScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const [commentText, setCommentText] = useState('');\n    const [trObjectives, setTrObjectives] = useState('');\n    const [availabilityComment, setAvailabilityComment] = useState('');\n    const [notProdComment, setNotProdComment] = useState('');\n    const [cvLink, setCvLink] = useState('');\n\n    const [editCv, setEditCv] = useState(false);\n\n    const [delegateOption, setDelegationOption] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantsMyList = useSelector(state => state.consultantsMyList);\n    const { loading: loadingConsultantsMyList, error: errorConsultantsMyList, consultantsMy, focus } = consultantsMyList;\n\n\n    const [searchDate, setSearchDate] = useState(new Date(Date.now()));\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n\n    useEffect(() => {\n        // Effect to start loading my consultants and then to update every time focus change\n        const option = delegateOption ? 'delegate' : '';\n        dispatch(getAllMyConsultants(option));\n    }, [dispatch, focus, delegateOption])\n\n    useEffect(() => {\n        if (consultantsMy) {\n            setCommentText(consultantsMy[focus].comment);\n            setTrObjectives(consultantsMy[focus].talentReviewObjectives);\n            setNotProdComment(consultantsMy[focus].notProdComment);\n            setAvailabilityComment(consultantsMy[focus].availabilityComment);\n            setCvLink(consultantsMy[focus].linkedCV);\n        }\n    }, [consultantsMy, focus]);\n\n    const navigationMonthHandler = (value) => {\n        const navigationDate = new Date(searchDate);\n        navigationDate.setMonth(navigationDate.getMonth() + value);\n        setSearchDate(navigationDate);\n    }\n\n    const navigationConsultantHandler = (value) => {\n\n        if (((focus + value) >= 0) && ((focus + value) < consultantsMy.length)) {\n            dispatch(setConsultantFocus(focus + value));\n        }\n    }\n\n    const updateCommentHandler = (consultantId, value) => {\n        dispatch(updateComment(consultantId, value));\n    }\n\n    return (\n\n        <Container>\n            <Meta />\n            {loadingConsultantsMyList ? <Loader /> :\n                errorConsultantsMyList ? <Message variant='danger'>{errorConsultantsMyList}</Message>\n                    : !consultantsMy || consultantsMy.length === 0 ?\n                        <Message variant='info'>You don't have consultant to edit yet</Message> : (\n                            <>\n                                <div className='border-bottom p-3'>\n                                    <Row>\n                                        <Col className=\"text-center\" xs={2}>\n                                            <Button\n                                                variant='primary'\n                                                size='sm'\n                                                onClick={() => navigationConsultantHandler(-1)}\n                                                disabled={focus === 0}\n                                            ><i className=\"fas fa-caret-left\"></i>\n                                            </Button>\n                                        </Col>\n                                        <Col className=\"text-center\" xs={8}>\n                                            <LinkContainer to={`/editconsultant/${consultantsMy[focus]._id}`}>\n                                                <Nav.Link>\n                                                    <h4>{consultantsMy[focus].name} <i>({consultantsMy[focus].matricule})</i></h4>\n                                                </Nav.Link>\n                                            </LinkContainer>\n                                        </Col>\n                                        <Col className=\"text-center\" xs={2}>\n                                            <Button\n                                                variant='primary'\n                                                size='sm'\n                                                onClick={() => navigationConsultantHandler(1)}\n                                                disabled={focus === consultantsMy.length - 1}\n                                            ><i className=\"fas fa-caret-right\"></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Row className='mt-3'>\n                                        <Col xs={12} md={4}>\n                                            <ListGroup>\n                                            <ListGroup.Item>\n                                                <Row className=\"my-3\">\n                                                    <Col className=\"text-left\"><b>Arrival:</b> {consultantsMy[focus].arrival && consultantsMy[focus].arrival.substring(0, 10)}</Col>\n                                                    <Col className=\"text-left\"><b>Valued:</b> {consultantsMy[focus].valued && consultantsMy[focus].valued.substring(0, 10)}</Col>\n                                                    <Col className=\"text-left\"><b>Leaving:</b> {consultantsMy[focus].leaving && consultantsMy[focus].leaving.substring(0, 10)}</Col>\n                                                </Row>\n                                                <Row className=\"my-3\">\n                                                    <Col><b>Seniority:</b> {((new Date(Date.now()) - new Date(consultantsMy[focus].arrival.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4)} years</Col>\n                                                </Row>\n\n                                                <Row className=\"my-3\">\n                                                    <Col>\n                                                        {!(consultantsMy[focus]._id === userInfo.consultantProfil._id) && (\n                                                            <>\n                                                                <label htmlFor=\"comment\"><strong>Staffing comment</strong></label>\n                                                                <InputGroup>\n                                                                    <FormControl\n                                                                        as='textarea'\n                                                                        size='sm'\n                                                                        rows={7}\n                                                                        id='comment'\n                                                                        value={commentText}\n                                                                        placeholder='Please enter a comment'\n                                                                        onChange={(e) => {\n                                                                            setCommentText(e.target.value);\n                                                                            updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                                        }}\n                                                                    ></FormControl>\n                                                                </InputGroup>\n                                                            </>\n                                                        )}\n\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            </ListGroup>\n                                        </Col>\n\n                                        <Col xs={12} md={8}>\n                                            <PxxEditor\n                                                consultantsMy={consultantsMy}\n                                                consultantFocus={focus}\n                                                searchDate={searchDate}\n                                                navigationMonthHandler={navigationMonthHandler}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                                <div className='border-bottom p-3'>\n                                    <Row>\n                                    <Col xs={12} md={4}>\n                                        <label htmlFor=\"annual-objectives\"><strong>Annual objectives</strong></label>\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    size='sm'\n                                                    rows={3}\n                                                    id='annual-objectives'\n                                                    value={trObjectives}\n                                                    placeholder='Please complete with your CDM'\n                                                    onChange={(e) => {\n                                                        setTrObjectives(e.target.value);\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            talentReviewObjectives: e.target.value,\n                                                            notProdComment: notProdComment,\n                                                            availabilityComment: availabilityComment,\n                                                            linkedCV: cvLink\n                                                        }))\n                                                        //updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                    }}\n                                                ></FormControl>\n                                            </InputGroup>\n                                        </Col>\n                                        <Col xs={12} md={4}>\n                                            <label htmlFor=\"not-prod-comment\"><strong>Not production justification</strong></label>\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    size='sm'\n                                                    rows={3}\n                                                    id='not-prod-comment'\n                                                    value={notProdComment}\n                                                    placeholder='Please justify not production time. For example:&#10;- 3d-june: inter-contrat&#10;- 1d/Week: business&#10;- etc.'\n                                                    onChange={(e) => {\n                                                        setNotProdComment(e.target.value);\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            talentReviewObjectives: trObjectives,\n                                                            notProdComment: e.target.value,\n                                                            availabilityComment: availabilityComment,\n                                                            linkedCV: cvLink\n                                                        }));\n                                                        //updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                    }}\n                                                ></FormControl>\n                                            </InputGroup>\n                                        </Col>\n                                        <Col xs={12} md={4}>\n                                            <label htmlFor=\"availability-comment\"><strong>Availability comment</strong></label>\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    size='sm'\n                                                    rows={3}\n                                                    id='availability-comment'\n                                                    value={availabilityComment}\n                                                    placeholder='Please share any information on your availability. For example: end of mission the 23th of October > 2d/5 available'\n                                                    onChange={(e) => {\n                                                        setAvailabilityComment(e.target.value);\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            talentReviewObjectives: trObjectives,\n                                                            notProdComment: notProdComment,\n                                                            availabilityComment: e.target.value,\n                                                            linkedCV: cvLink\n                                                        }));\n                                                    }}\n                                                ></FormControl>\n                                            </InputGroup>\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                                <div className='border-bottom p-3'>\n                                    <Row className='align-items-end'>\n                                        <Col xs={10}>\n                                            {editCv ? (\n                                                <div>\n                                                <label htmlFor=\"cv-link\"><strong>CV from Waveplace</strong></label>\n                                                <InputGroup>\n                                                    <FormControl\n                                                        type='text'\n                                                        id='cv-link'\n                                                        value={cvLink && cvLink}\n                                                        onChange={(e) => setCvLink(e.target.value)}\n                                                    ></FormControl>\n                                                </InputGroup>\n                                                </div>\n                                            ) : (\n                                                    <div>\n                                                        <label><strong>CV from Waveplace</strong></label><br />\n                                                        {cvLink ? <a href={cvLink} target=\"_blank\" rel=\"noreferrer\">{cvLink}</a> : <p>Please add the url to Waveplace</p>}\n                                                    </div>\n                                            )}\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Button block\n                                                onClick={() => {\n                                                    if (!editCv === false) {\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            talentReviewObjectives: trObjectives,\n                                                            notProdComment: notProdComment,\n                                                            availabilityComment: availabilityComment,\n                                                            linkedCV: cvLink\n                                                        }));\n                                                    }\n                                                    setEditCv(!editCv);\n\n                                                } }\n                                            >{editCv ? 'Save' : 'Edit'}</Button>\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewStaffings'>\n                                            <DropDownTitleContainer title='Staffings on track' close={false}>\n                                                <ViewStaffs\n                                                    history={history}\n                                                    consultantId={consultantsMy[focus]._id}\n                                                />\n                                            </DropDownTitleContainer>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col>\n                                        <DropDownTitleContainer title='Old staffings' close={true}>\n                                            <ViewOldStaffs\n                                                history={history}\n                                                consultantId={consultantsMy[focus]._id}\n                                            />\n                                        </DropDownTitleContainer>\n                                    </Col>\n                                </Row>\n                                \n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewSkills'>\n                                            <SkillsDetails consultantId={consultantsMy[focus]._id} />\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewOthersConsultants'>\n                                            <DropDownTitleContainer title='Others consultants' close={false}>\n                                                <Form.Group controlId='switch-only-available' className='mt-3'>\n                                                    <Form.Check\n                                                        type='switch'\n                                                        id='switch-delegation'\n                                                        label='View delegation'\n                                                        checked={delegateOption}\n                                                        onChange={(e) => { e.target.checked === true ? setDelegationOption(true) : setDelegationOption(false) }}\n                                                    ></Form.Check>\n                                                </Form.Group>\n                                                <ConsultantsTab\n                                                    consultantsMy={consultantsMy}\n                                                    history={history}\n                                                    focusActive={true}\n                                                />\n                                            </DropDownTitleContainer>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n        </Container>\n    )\n}\n\nexport default PxxEditScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport {\n    createConsultant,\n    getAllCDM,\n    getAllPractice,\n    getMyConsultant,\n    updateMyConsultant\n} from '../actions/consultantActions';\nimport {\n    CONSULTANT_CREATE_RESET,\n    CONSULTANT_GRADE,\n    CONSULTANT_MY_UPDATE_RESET\n} from '../constants/consultantConstants';\nimport SkillsDetails from '../components/SkillsDetails';\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst ConsultantEditScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [matricule, setMatricule] = useState('');\n    const [practice, setPractice] = useState('');\n    const [grade, setGrade] = useState('Analyst');\n\n    const [cdm, setCdm] = useState(null);\n    const [arrival, setArrival] = useState('');\n    const [valued, setValued] = useState('');\n    const [leaving, setLeaving] = useState('');\n    const [seniority, setSeniority] = useState('');\n    const [isCDM, setIsCDM] = useState(false);\n\n    const [partialTime, setPartialTime] = useState(false);\n    const [startPartialTime, setStartPartialTime] = useState('');\n    const [endPartialTime, setEndPartialTime] = useState('');\n    const [valueMonday, setValueMonday] = useState(1);\n    const [valueTuesday, setValueTuesday] = useState(1);\n    const [valueWednesday, setValueWednesday] = useState(1);\n    const [valueThursday, setValueThursday] = useState(1);\n    const [valueFriday, setValueFriday] = useState(1);\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const [update, setUpdate] = useState(false);\n\n    const valueEditType = match.params.id ? 'edit' : 'create';\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantMy = useSelector(state => state.consultantMy);\n    const { loading, error, consultant } = consultantMy;\n\n    const consultantMyUpdate = useSelector(state => state.consultantMyUpdate);\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = consultantMyUpdate;\n\n    const consultantCreate = useSelector(state => state.consultantCreate);\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, consultantCreated } = consultantCreate;\n\n    const consultantCDMList = useSelector(state => state.consultantCDMList);\n    const { error: errorCDM, cdmList } = consultantCDMList;\n\n    const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    const { error: errorPractice, practiceList } = consultantPracticeList;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (match.params.id) {\n            if (!consultant) {\n                dispatch(getMyConsultant(match.params.id));\n            } \n        }\n    }, [dispatch, match, consultant]);\n\n    useEffect(() => {\n        if (match.params.id) {\n\n            if (consultant && consultant._id !== match.params.id) {\n                dispatch(getMyConsultant(match.params.id));\n            }\n\n        }\n    }, [dispatch, match, consultant]);\n\n    useEffect(() => {\n        if (update) {\n            dispatch(getMyConsultant(match.params.id));\n            setUpdate(false);\n        }\n    }, [dispatch, update, match]);\n\n    useEffect(() => {\n        if ((match.params.id) && (successUpdate)) {\n            setUpdate(true);\n        }\n    }, [\n        match,\n        successUpdate\n    ]);\n\n    useEffect(() => {\n        // Only in admin Level 0 access we can modify consultant Practice\n        if (!practiceList) {\n            dispatch(getAllPractice());\n        }\n    }, [dispatch, userInfo, practiceList]);\n\n    useEffect(() => {\n        // Load default data for cdm in the current practice\n        if (practice) {\n            dispatch(getAllCDM(practice));\n        }\n    }, [dispatch, practice]);\n\n    useEffect(() => {\n        if ((match.params.id) && consultant) {\n            setName(consultant.name);\n            setEmail(consultant.email);\n            setMatricule(consultant.matricule);\n            setPractice(consultant.practice);\n            setGrade(consultant.grade);\n            //setQuality(consultant.quality || []);\n            setCdm(consultant.cdmId ? consultant.cdmId : ''); //'waiting affectation'\n            setArrival(consultant.arrival.substring(0, 10));\n            setValued(consultant.valued ? consultant.valued.substring(0, 10) : '');\n            setLeaving(consultant.leaving ? consultant.leaving.substring(0, 10) : '');\n            setSeniority(((new Date(Date.now()) - new Date(consultant.arrival.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4));\n            setIsCDM(consultant.isCDM || false);\n            setPartialTime(consultant.isPartialTime.value);\n            setStartPartialTime(consultant.isPartialTime.start.substring(0, 10) ? consultant.isPartialTime.start.substring(0, 10) : false)\n            setEndPartialTime(consultant.isPartialTime.end.substring(0, 10) ? consultant.isPartialTime.end.substring(0, 10) : false)\n            setValueMonday(consultant.isPartialTime.week.filter(x => x.num === 1)[0].worked)\n            setValueTuesday(consultant.isPartialTime.week.filter(x => x.num === 2)[0].worked)\n            setValueWednesday(consultant.isPartialTime.week.filter(x => x.num === 3)[0].worked)\n            setValueThursday(consultant.isPartialTime.week.filter(x => x.num === 4)[0].worked)\n            setValueFriday(consultant.isPartialTime.week.filter(x => x.num === 5)[0].worked)\n        }\n    }, [match, consultant, valueEditType]);\n\n    useEffect(() => {\n\n        // Charge default practice for admin Level 0 user\n        if (!practice && userInfo && practiceList) {\n            setPractice(practiceList[0]);\n        }\n\n    }, [\n        userInfo,\n        practice,\n        practiceList,\n        cdm,\n        cdmList\n    ]);\n\n    useEffect(() => {\n        if (errorUpdate) {\n            setErrorMessage({ message: errorUpdate, type: 'danger' });\n            dispatch({ type: CONSULTANT_MY_UPDATE_RESET })\n        }\n        if (successUpdate) {\n            setSuccessMessage({ message: 'Consultant updated', type: 'success' });\n            dispatch({ type: CONSULTANT_MY_UPDATE_RESET })\n        }\n        if (errorCreate) {\n            setErrorMessage({ message: errorCreate, type: 'danger' });\n            dispatch({ type: CONSULTANT_CREATE_RESET })\n        }\n        if (successCreate) {\n            setSuccessMessage({ message: 'Consultant created', type: 'success' });\n            history.push(`/editconsultant/${consultantCreated._id}`);\n            dispatch({ type: CONSULTANT_CREATE_RESET })\n        }\n    }, [dispatch, history, errorUpdate, successUpdate, successCreate, errorCreate, consultantCreated]);\n\n    const submitHandler = (e) => {\n\n        e.preventDefault();\n\n        if (valueEditType === 'edit') {\n\n            const updatedUser = {\n                ...consultant,\n                name: name,\n                matricule: matricule,\n                arrival: new Date(arrival),\n                valued: new Date(valued),\n                leaving: leaving ? new Date(leaving) : null,\n                isCDM: isCDM,\n                grade: grade,\n                cdmId: cdm,\n                isPartialTime: {\n                    value: partialTime,\n                    start: partialTime ? startPartialTime : '',\n                    end: partialTime ? endPartialTime : '',\n                    week: [\n                        { num: 1, worked: partialTime ? valueMonday : 1 },\n                        { num: 2, worked: partialTime ? valueTuesday : 1 },\n                        { num: 3, worked: partialTime ? valueWednesday : 1 },\n                        { num: 4, worked: partialTime ? valueThursday : 1 },\n                        { num: 5, worked: partialTime ? valueFriday : 1 }\n                    ]\n                }\n            }\n            dispatch(updateMyConsultant(updatedUser));\n        }\n\n        if (valueEditType === 'create') {\n            const consultant = {\n                name,\n                email,\n                matricule,\n                arrival,\n                valued,\n                leaving,\n                practice,\n                isCDM,\n                grade: grade,\n                cdmId: cdm,\n                isPartialTime: {\n                    value: partialTime,\n                    start: startPartialTime,\n                    end: endPartialTime,\n                    week: [\n                        { num: 1, worked: valueMonday },\n                        { num: 2, worked: valueTuesday },\n                        { num: 3, worked: valueWednesday },\n                        { num: 4, worked: valueThursday },\n                        { num: 5, worked: valueFriday },\n                    ]\n                }\n            }\n            dispatch(createConsultant(consultant));\n        }\n    }\n\n    const changeValueDateHandler = (e) => {\n        setValued(e.substring(0, 10));\n        setSeniority(((new Date(Date.now()) - new Date(e.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4));\n    }\n\n    const goBackHandler = () => {\n        history.go(-1);\n        setErrorMessage('');\n        setSuccessMessage('');\n    }\n\n    return (\n        <>\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorMessage && <Message variant='danger'>{errorMessage.message}</Message>}\n\n            {errorCDM && <Message variant='danger'>{errorCDM}</Message>}\n            {errorPractice && <Message variant='danger'>{errorPractice}</Message>}\n\n            {loading && <Loader />}\n\n            <Button className='mb-3' onClick={() => goBackHandler()}>\n                Go Back\n            </Button>\n            <DisplayChildren access='editConsultantProfil'>\n\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={8}>\n\n                            <Form onSubmit={submitHandler}>\n                                <h2>{name && name}</h2>\n\n                                <DropDownTitleContainer title='Personal' close={valueEditType !== 'create'}>\n                                    <ListGroup.Item>\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='name'>\n                                                    <Form.Label><b>Name</b></Form.Label>\n                                                    <Form.Control\n                                                        type='name'\n                                                        placeholder='Enter Name'\n                                                        value={name && name}\n                                                        onChange={(e) => setName(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='matricule'>\n                                                    <Form.Label><b>Matricule</b></Form.Label>\n                                                    <Form.Control\n                                                        type='text'\n                                                        placeholder='Enter Matricule'\n                                                        value={matricule && matricule}\n                                                        onChange={(e) => setMatricule(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group controlId='seniority'>\n                                                    <Form.Label><b>Seniority</b> <i>(years)</i></Form.Label>\n                                                    <Form.Control\n                                                        type='text'\n                                                        placeholder='-'\n                                                        value={seniority && seniority}\n                                                        readOnly\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='email'>\n                                                    <Form.Label><b>Email Address</b></Form.Label>\n                                                    <Form.Control\n                                                        type='email'\n                                                        placeholder='Enter email'\n                                                        value={email && email}\n                                                        onChange={(e) => setEmail(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                    </ListGroup.Item>\n                                </DropDownTitleContainer>\n\n                                {consultant && valueEditType !== 'create' && (\n                                    <SkillsDetails consultantId={consultant._id} />\n                                )}\n\n                                <DropDownTitleContainer title='Profil' close={false}>\n                                    <ListGroup.Item>\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='practice'>\n                                                    <Form.Label><b>Practice</b></Form.Label>\n                                                    <InputGroup>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={practice ? practice : userInfo ? userInfo.consultantProfil.practice : \"\"}\n                                                            //disabled={userInfo && !(userInfo.adminLevel === 0)}\n                                                            onChange={(e) => {\n                                                                setPractice(e.target.value)\n                                                            }}\n                                                            required\n                                                        >\n                                                            {!practiceList ? <option value={practice && practice}>{practice}</option>\n                                                                : errorPractice ? <Message variant='Danger'>No Practice found</Message>\n                                                                    : (\n                                                                        practiceList.map(x => (\n                                                                            <option\n                                                                                key={x}\n                                                                                value={x}\n                                                                                disabled={x === '-' ? true : false}\n                                                                            >{x}</option>\n                                                                        ))\n                                                                    )}\n                                                        </Form.Control>\n                                                    </InputGroup>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='grade'>\n                                                    <Form.Label><b>Grade</b></Form.Label>\n                                                    <Form.Control\n                                                        as='select'\n                                                        placeholder='Enter grade'\n                                                        value={grade && grade}\n                                                        onChange={(e) => setGrade(e.target.value)}\n                                                        required\n                                                    >\n                                                        {CONSULTANT_GRADE.map(x => (\n                                                            <option key={x} value={x}>{x}</option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='cdm'>\n                                                    <Form.Label><b>CDM</b></Form.Label>\n                                                    <Form.Control\n                                                        as='select'\n                                                        value={cdm ? cdm : 'default'}\n                                                        //disabled={userInfo && !(userInfo.adminLevel <= 2)}\n                                                        onChange={(e) => setCdm(e.target.value)}\n                                                        required\n                                                    >\n                                                        <option value='default'>Please Select</option>\n                                                        {!cdmList ? 'No cdm'\n                                                            : errorCDM ? <Message variant='danger'>No CDM found, please verify Practice</Message>\n                                                                : cdmList.length && (\n                                                                    cdmList.map((x,val) => (\n                                                                        <option\n                                                                            key={val}\n                                                                            value={x._id}\n                                                                        >{x.name}</option>\n                                                                    ))\n                                                                )}\n                                                    </Form.Control>\n\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId='valued'>\n                                                        <Form.Label><b>Valued date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={valued && valued}\n                                                            onChange={(e) => changeValueDateHandler(e.target.value)}\n                                                            required\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n\n                                                <Col>\n                                                    <Form.Group controlId='arrival'>\n                                                        <Form.Label><b>Arrival date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={arrival && arrival}\n                                                            min={valued}\n                                                            onChange={(e) => {\n                                                                setArrival(e.target.value);\n                                                            }}\n                                                            required\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n\n                                                <Col>\n                                                    <Form.Group controlId='leaving'>\n                                                        <Form.Label><b>Leaving date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={leaving && leaving}\n                                                            min={arrival}\n                                                            onChange={(e) => setLeaving(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Form.Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId=\"partialtime\">\n                                                        <Form.Check\n                                                            type=\"checkbox\"\n                                                            label=\"Partial time\"\n                                                            checked={partialTime ? true : false}\n                                                            onChange={(e) => {\n                                                                setPartialTime(e.target.checked)\n                                                            }} />\n                                                    </Form.Group>\n                                                </Col>\n                                                {partialTime && (\n                                                    <>\n                                                        <Col>\n                                                            <Form.Group controlId='startpartialtime'>\n                                                                <Form.Label>Start</Form.Label>\n                                                                <Form.Control\n                                                                    type=\"Date\"\n                                                                    min={arrival && arrival}\n                                                                    value={startPartialTime && startPartialTime}\n                                                                    onChange={(e) => {\n                                                                        setStartPartialTime(e.target.value.substring(0, 10));\n                                                                        !endPartialTime && setEndPartialTime(e.target.value.substring(0, 10));\n                                                                        (endPartialTime < e.target.value.substring(0, 10)) && setEndPartialTime(e.target.value.substring(0, 10));\n                                                                    }}\n                                                                    required\n                                                                ></Form.Control>\n                                                            </Form.Group>\n                                                        </Col>\n\n                                                        <Col>\n                                                            <Form.Group controlId='endpartialtime'>\n                                                                <Form.Label>End</Form.Label>\n                                                                <Form.Control\n                                                                    type=\"Date\"\n                                                                    value={endPartialTime && endPartialTime}\n                                                                    min={startPartialTime || ''}\n                                                                    onChange={(e) => {\n                                                                        setEndPartialTime(e.target.value.substring(0, 10))\n                                                                    }}\n                                                                    required\n                                                                ></Form.Control>\n                                                            </Form.Group>\n                                                        </Col>\n                                                    </>\n                                                )}\n                                            </Form.Row>\n\n                                            {partialTime && (\n                                                <Form.Row>\n                                                    <Col>\n                                                        <Form.Group controlId='monday'>\n                                                            <Form.Label><b>Monday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueMonday)}\n                                                                onChange={(e) => setValueMonday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='tuesday'>\n                                                            <Form.Label><b>Tuesday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueTuesday)}\n                                                                onChange={(e) => setValueTuesday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='wendnesday'>\n                                                            <Form.Label><b>Wendnesday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueWednesday)}\n                                                                onChange={(e) => setValueWednesday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='thursday'>\n                                                            <Form.Label><b>Thursday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueThursday)}\n                                                                onChange={(e) => setValueThursday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='friday'>\n                                                            <Form.Label><b>Friday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueFriday)}\n                                                                onChange={(e) => setValueFriday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Form.Row>\n                                            )}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId=\"iscdm\">\n                                                        <Form.Check\n                                                            type=\"checkbox\"\n                                                            label=\"Is CDM\"\n                                                            checked={isCDM ? true : false}\n                                                            onChange={(e) => {\n                                                                setIsCDM(e.target.checked);\n                                                            }} />\n                                                    </Form.Group>\n                                                </Col>\n                                            </Form.Row>\n                                        </ListGroup.Item>\n                                    </ListGroup.Item>\n                                </DropDownTitleContainer>\n\n                                <Form.Row className='pt-3'>\n                                    <Col>\n                                        <Button\n                                            type='submit'\n                                            variant='primary'\n                                            block\n                                            disabled={!name || !email || !matricule || !practice || !valued || !arrival}\n                                            //disabled={!name || !email || !matricule || !practice || !cdm || !valued || !arrival}\n                                        >{(loadingUpdate || loadingCreate) ? <Loader /> : valueEditType === 'create' ? \"Create\" : \"Update\"}\n                                        </Button>\n                                    </Col>\n                                </Form.Row>\n                                <Form.Row>\n                                    <Col>\n                                        {successMessage && <Message variant='success'><i className=\"fas fa-check-circle\">  Your information is correctly registered</i></Message>}\n                                    </Col>\n                                </Form.Row>\n\n                            </Form>\n\n\n                        </Col>\n                    </Row>\n                </Container>\n            </DisplayChildren>\n        </>\n    )\n}\n\nexport default ConsultantEditScreen;\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport * as XLSX from 'xlsx';\n\nconst ImportExcelFile = ({setImportData, sheets = 'all'}) => {\n\n    const [fileName, setFileName] = useState('');\n\n    const readFileHandler = async (e) => {\n\n        //const [importData, setImportData] = useState([]);\n\n        let file = e.target.files[0];\n\n        let reader = new FileReader();\n        reader.onload = function (e) {\n\n            let data = e.target.result;\n            let workBook = XLSX.read(data, { type: 'binary' });\n\n            const jsonData = []\n            for (let incr = 0; incr < workBook.SheetNames.length; incr++) {\n                const wsName = workBook.SheetNames[incr];\n                const ws = workBook.Sheets[wsName];\n                jsonData.push(XLSX.utils.sheet_to_json(ws)); //, status:'not imported'}\n            }\n            if (sheets === '1') {\n                setImportData(jsonData[0].map(x => ({...x, status:'not imported'})));\n            }\n            if (sheets === 'all'){\n                setImportData(jsonData);\n            }\n            setFileName(file.name);\n        };\n        reader.readAsBinaryString(file);\n    }\n\n    return (\n        <Form>\n            <Form.File\n                id=\"importData\"\n                custom\n            >\n                <Form.File.Label data-browse=\"Upload\">{fileName ? fileName : '  ...  '}</Form.File.Label>\n                <Form.File.Input onChange={(e) => readFileHandler(e)} />\n            </Form.File>\n        </Form>\n    )\n}\n\nexport default ImportExcelFile\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { uploadConsultantWk, updateConsultantWk } from '../actions/consultantActions';\nimport Form from 'react-bootstrap/Form';\n\nconst FlowImportWKConsultants = (props) => {\n\n    const dispatch = useDispatch();\n\n    const [step, setStep] = useState(0);\n    //const [selectedFile, setSelectedFile] = useState(null);\n\n    const consultantUploadWk = useSelector(state => state.consultantUploadWk);\n    const { loading: loadingUpload, error: errorUpload, path } = consultantUploadWk;\n\n    const consultantUpdateWk = useSelector(state => state.consultantUpdateWk);\n    const { loading: loadingUpdate, error: errorUpdate, message } = consultantUpdateWk;\n\n    const onChangeHandler = (e) => {\n        const data = new FormData();\n        data.append('file', e.target.files[0]);\n        dispatch(uploadConsultantWk(data));\n    };\n\n    const startImportData = () => {\n        if (path) {\n            dispatch(updateConsultantWk(path));\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Row className='align-items-center'>\n                    <Col className='text-center'>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Import consultants data from Wavekeeper\n                        </Modal.Title>\n                    </Col>\n                </Row>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Row className='mb-3'>\n                    <Col><Button className={step >= 0 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(0)} variant='ligth' disabled={step < 0}><strong>1-Guidelines</strong></Button></Col>\n                    <Col><Button className={step >= 1 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(1)} variant='ligth' disabled={step < 1}><strong>2-Upload in App</strong></Button></Col>\n                    <Col><Button className={step >= 2 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(2)} variant='ligth' disabled={step < 2}><strong>3-Start update</strong></Button></Col>\n                    <Col><Button className={step >= 3 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(3)} variant='ligth' disabled={step < 3}><strong>4-Result</strong></Button></Col>\n                </Row>\n\n                <Row className='align-items-center'>\n\n                    <Col>\n                        {step === 0 && (\n                            <Row>\n                                <Col>\n                                    <h4>Process to export from Wavekeeper <a href=\"https://wavekeeper.wavestone-app.com/web#action=534&model=hr.presence&view_type=list&cids=1&menu_id=92\" target=\"_blank\" rel=\"noopener noreferrer\">(link)</a></h4>\n                                    <p>Please connect to Wavekeeper</p>\n                                    <ul>\n                                        <li>Step 1: Go to collaborators</li>\n                                        <li>Step 2: Apply filter to keep only current consultants</li>\n                                        <li>Step 3: Select all lines and go to actions / export</li>\n                                        <li>Step 4: Select filter 'JPR_export_2'</li>\n                                        <li>Step 5: Save the Excel file on you desktop</li>\n                                    </ul>\n                                    <Image src=\"/images/WK_export_consultants_application_filtres.jpg\" rounded fluid />\n                                </Col>\n                            </Row>\n                        )}\n                        {step === 1 && (\n                            <Row className='align-items-center'>\n                                <Col className='text-center'>\n                                    <h4>Upload your file here</h4>\n                                    {loadingUpload ? <Loader /> : (\n                                        <input \n                                            className='my-3' \n                                            type='file' \n                                            name='hr.presence' \n                                            onChange={onChangeHandler} \n                                        />\n                                    )}\n                                    {errorUpload && <Message variant='danger'>{errorUpload}</Message>}\n                                </Col>\n                            </Row>\n                        )}\n                        {step === 2 && (\n                            path ? (\n                                <Row>\n                                    <Col className='text-center'>\n                                        <h4>Do you want to update your consultants ?</h4>\n                                        {loadingUpdate ? <Loader /> : (\n                                            <Button variant='primary' className='m-3' onClick={startImportData}>\n                                                Update\n                                            </Button>\n                                        )}\n                                        <p>Process could take a few minute</p>\n                                        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                                    </Col>\n                                </Row>\n                            ) : (\n                                <Row><Col>Something wrong retry step 2</Col></Row>\n                            )\n                        )}\n                        {step === 3 && (\n                            <Form.Control\n                                as='textarea'\n                                rows={10}\n                                value={message && message}\n                                readOnly\n                            //plaintext\n                            />\n                        )}\n                    </Col>\n                </Row>\n\n\n            </Modal.Body>\n            <Modal.Footer>\n                {step === 3 && (\n                    <Button onClick={props.onHide}>Close</Button>\n                )}\n                {step < 3 && (\n                    <Button\n                        variant='success'\n                        onClick={() => (step + 1 <= 3) && setStep(step + 1)}\n                        disabled={step === 3 || (step === 1 && !path) || (step === 2 && !message)}\n                    >Next</Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default FlowImportWKConsultants;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteConsultant, getAllMyAdminConsultants, consultantImportInMass } from '../actions/consultantActions';\nimport { CONSULTANT_DELETE_RESET } from '../constants/consultantConstants';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport ReactExport from \"react-export-excel\";\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FlowImportWKConsultants from '../components/FlowImportWKConsultants';\nimport DisplayChlidren from '../components/DisplayChildren';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ManageConsultantScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const [pageSize, setPageSize] = useState(10000);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n\n    const [exportExcel, setExportExcel] = useState('');\n\n    const [importData, setImportData] = useState([]);\n\n    //const [selectedFile, setSelectedFile] = useState(null);\n    //const [message, setMessage] = useState('');\n\n    const [showImportConsultant, setShowImportConsultant] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantsMyAdminList = useSelector(state => state.consultantsMyAdminList);\n    const { loading, error, consultantsMyAdmin, pages, page, count } = consultantsMyAdminList;\n\n    const consultantDelete = useSelector(state => state.consultantDelete);\n    const { success: successConsultantDelete } = consultantDelete;\n\n    const consultantsMassImport = useSelector(state => state.consultantsMassImport);\n    const { loading:loadingMassImport, error:errorMassImport, success:successMassImport } = consultantsMassImport;\n\n    /* const consultantUploadWk = useSelector(state => state.consultantUploadWk);\n    const { loading:loadingUpload, error:errorUpload, path } = consultantUploadWk;\n\n    const consultantUpdateWk = useSelector(state => state.consultantUpdateWk);\n    const { loading:loadingUpdate, error:errorUpdate, message } = consultantUpdateWk; */\n\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(getAllMyAdminConsultants(keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, pageNumber, pageSize, keyword, successMassImport]);\n\n    useEffect(() => {\n        if (consultantsMyAdmin) {\n            const exportExcelData = consultantsMyAdmin.map((consultant) => ({\n                'NAME': consultant.name,\n                'EMAIL': consultant.email,\n                'PRACTICE': consultant.practice,\n                'MATRICULE': consultant.matricule,\n                'VALUED': consultant.valued ? consultant.valued.substring(0,10) : '',\n                'ARRIVAL': consultant.arrival ? consultant.arrival.substring(0,10) : '',\n                'LEAVING': consultant.leaving ? consultant.leaving.substring(0,10) : '',\n                'PARTIAL_TIME': consultant.isPartialTime.value,\n                'GRADE': consultant.grade,\n                'IS_CDM': consultant.isCDM,\n                'CDM_MATRICULE': consultant.cdmId && consultant.cdmId.matricule,\n                'CDM_NAME': consultant.cdmId && consultant.cdmId.name,\n                'COMMENT': consultant.comment\n            }));\n            setExportExcel(exportExcelData);\n        }\n    },[consultantsMyAdmin])\n\n    useEffect(() => {\n        if (successConsultantDelete) {\n            dispatch(getAllMyAdminConsultants(keyword, pageNumber, pageSize));\n            dispatch({ type: CONSULTANT_DELETE_RESET });\n        }\n    // eslint-disable-next-line\n    }, [dispatch, successConsultantDelete]);\n\n\n    useEffect(() => {\n        if(importData.length > 0) {\n            dispatch(consultantImportInMass(importData));\n        }\n    },[dispatch, importData]);\n\n    const addConsultantHandler = () => {\n        history.push('/admin/consultant/add');\n    }\n\n    const onClickEditHandler = (consultantId) => {\n        history.push(`/editconsultant/${consultantId}`);\n    };\n\n    const onClickDeleteHandler = (consultant) => {\n        if (window.confirm(`Are you sure to delete user: ${consultant.name} ?`)) {\n            dispatch(deleteConsultant(consultant._id));\n        }\n    }\n\n    return (\n        <>\n            <Meta />\n            {errorMassImport && <Message variant='danger'>{errorMassImport}</Message>}\n\n            <FlowImportWKConsultants \n                show={showImportConsultant}\n                onHide={() => setShowImportConsultant(false)}\n            />\n\n            <DisplayChlidren access='updateConsultantsFromWK'>\n                <Button variant='primary' onClick={() => setShowImportConsultant(true)}>Import WK</Button>\n            </DisplayChlidren>\n\n            <DropDownTitleContainer title='Manage consultants' close={false}>\n                <ListGroup.Item>\n                    \n                    \n                    <Row>\n\n                        <Col xs={6} md={2}>\n                            <Button \n                                className=\"mb-3\" \n                                onClick={() => addConsultantHandler()}\n                            ><i className=\"fas fa-user-edit mr-2\"></i>Add\n                            </Button>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search name'\n                                    value={keyword && keyword}\n                                    onChange={(e) => setKeyword(e.target.value)}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} consultants found` : '0 consultant found'} />\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            {loadingMassImport ? (<Loader />) : (\n                                <ImportExcelFile setImportData={setImportData} />\n                            )}\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            {exportExcel && (\n                                <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                    <ExcelSheet data={exportExcel} name=\"consultantsSheet\">\n                                        <ExcelColumn label=\"NAME\" value=\"NAME\" />\n                                        <ExcelColumn label=\"EMAIL\" value=\"EMAIL\" />\n                                        <ExcelColumn label=\"PRACTICE\" value=\"PRACTICE\" />\n                                        <ExcelColumn label=\"MATRICULE\" value=\"MATRICULE\" />\n                                        <ExcelColumn label=\"VALUED\" value=\"VALUED\" />\n                                        <ExcelColumn label=\"ARRIVAL\" value=\"ARRIVAL\" />\n                                        <ExcelColumn label=\"LEAVING\" value=\"LEAVING\" />\n                                        <ExcelColumn label=\"PARTIAL_TIME\" value=\"PARTIAL_TIME\" />\n                                        <ExcelColumn label=\"GRADE\" value=\"GRADE\" />\n                                        <ExcelColumn label=\"IS_CDM\" value=\"IS_CDM\" />\n                                        <ExcelColumn label=\"CDM_MATRICULE\" value=\"CDM_MATRICULE\" />\n                                        <ExcelColumn label=\"CDM_NAME\" value=\"CDM_NAME\" />\n                                        <ExcelColumn label=\"COMMENT\" value=\"COMMENT\" />\n                                    </ExcelSheet>\n                                </ExcelFile>\n                            )}\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50, 10000].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x === 10000 ? 'All (export)' : `${x} / page`}</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    {consultantsMyAdmin && consultantsMyAdmin.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                        loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n\n                            <Table responsive hover striped>\n                                <thead>\n                                    <tr className='table-primary'>\n                                        <th className='align-middle text-light'>Consultant name</th>\n                                        <th className='align-middle text-light'>Matricule</th>\n                                        <th className='align-middle text-light'>Practice</th>\n                                        <th className='align-middle text-light'>Valued</th>\n                                        <th className='align-middle text-light'>Arrival</th>\n                                        <th className='align-middle text-light'>Leaving</th>\n                                        <th className='align-middle text-light'>Seniority</th>\n                                        <th className='align-middle text-light'></th>\n                                        <th className='align-middle text-light'></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {consultantsMyAdmin && consultantsMyAdmin.map((consultant) => (\n                                        <tr key={consultant._id}>\n                                            <td className='align-middle'>{consultant.name}</td>\n                                            <td className='align-middle'>{consultant.matricule}</td>\n                                            <td className='align-middle'>{consultant.practice}</td>\n                                            <td className='align-middle'>{consultant.valued ? consultant.valued.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{consultant.arrival ? consultant.arrival.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{consultant.leaving ? consultant.leaving.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{\n                                                consultant.valued ? ((new Date(Date.now()) - new Date(consultant.valued.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4) : 0\n                                            } years</td>\n                                            <td className='align-middle'>\n                                                <Button\n                                                    className='btn btn-primary p-1'\n                                                    onClick={() => onClickEditHandler(consultant._id)}\n                                                    size='sm'\n                                                ><i className=\"fas fa-user-edit\"></i>\n                                                </Button>\n                                            </td>\n                                            <td className='align-middle'>\n                                                <Button\n                                                    className='btn btn-danger p-1'\n                                                    onClick={() => onClickDeleteHandler(consultant)}\n                                                    size='sm'\n                                                ><i className=\"fas fa-user-times\"></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n\n                        )}\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(getAllMyAdminConsultants(keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageConsultantScreen;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst SelectComponent = ({ editRequest, label, id, value, onChange, required, options }) => {\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            {label && <Form.Label as='h5'>{label} {editRequest && required && '*'}</Form.Label>}\n            {editRequest ? (\n                <Form.Control\n                    as='select'\n                    className='custom-select border border-light border-top-0 border-right-0 border-left-0'\n                    value={value ? value : ''}\n                    onChange={(e) => onChange(e.target.value) }\n                    required={required}\n                >\n                    {options}\n                </Form.Control>\n            ) : (\n                <Form.Control\n                    type='text'\n                    className='pl-3 border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    plaintext\n                    value={value ? value : ''}\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default SelectComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Message from '../components/Message';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { deleteUser, listUsers } from '../actions/userActions';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport SelectComponent from '../components/SelectComponent';\n\nconst ManageUsersScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState({searchName:'', searchStatus:''});\n    \n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userList = useSelector(state => state.userList);\n    const { users, pages, page, count } = userList;\n\n    const userDelete = useSelector(state => state.userDelete);\n    const { error, success } = userDelete;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(listUsers(userInfo.consultantProfil.practice, keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, success, keyword, pageNumber, pageSize]);\n\n\n    const onClickEditHandler = (userId) => {\n        history.push(`/admin/edituser/${userId}`);\n    };\n\n    const onClickDeleteHandler = (user) => {\n        //console.log('delete user');\n        if (window.confirm(`Are you sure to delete user: ${user.name} ?`)) {\n            dispatch(deleteUser(user._id));\n        }\n    };\n\n    const getStatusDisplay =(status) => {\n        switch (status) {\n            case 'Waiting approval':\n                return(<i className=\"far fa-clock text-warning\"></i>);\n            case 'Validated':\n                return(<i className=\"fas fa-check-circle text-success\"></i>);\n            case 'Refused':\n                return(<i className=\"fas fa-times text-danger\"></i>);\n            case 'Blocked':\n                return(<i className=\"far fa-hand-paper text-danger\"></i>);\n            case 'Left':\n                return(<i className=\"fas fa-sign-out-alt text-secondary\"></i>);\n            default:\n                return(<p className='text-secondary'>Unknown</p>);\n        }\n    };\n\n    return (\n        <>\n            {error && (<Message variant='danger'>{error}</Message>)}\n\n            <Row><Col className='text-right'>\n                <Button onClick={() => history.push('/admin/add-users')}><i className=\"far fa-user\"></i>  Create users</Button>\n            </Col></Row>\n\n            <DropDownTitleContainer title='Manage users' close={false}>\n                <ListGroup.Item>\n                    <Row>\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search name'\n                                    value={keyword && keyword.searchName}\n                                    onChange={(e) => setKeyword({...keyword, searchName:e.target.value})}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} users found` : '0 users found'} />\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <SelectComponent \n                                editRequest={true}\n                                id='search-status'\n                                value={keyword && keyword.searchStatus}\n                                onChange={(val) => setKeyword({...keyword, searchStatus:val})}\n                                required={false}\n                                options={\n                                    <>\n                                        <option value=''>--All status--</option>\n                                        {['Waiting approval', 'Validated', 'Refused', 'Blocked', 'Left'].map((x, val) => (\n                                            <option key={val} value={x}>{x}</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x} / page</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    <Table responsive hover striped>\n                        <thead>\n                            <tr className='table-primary'>\n                                <th className='align-middle text-light'>User name</th>\n                                <th className='align-middle text-light'>Matricule</th>\n                                <th className='align-middle text-light text-center'>Practice</th>\n                                <th className='align-middle text-light text-center'>Created at</th>\n                                <th className='align-middle text-light text-center'>Last connection</th>\n                                <th className='align-middle text-light text-center'>Status</th>\n                                <th className='align-middle text-light text-center'>User Profil</th>\n                                <th className='align-middle text-light'></th>\n                                <th className='align-middle text-light'></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {users && users.map((user) => (\n                                <tr key={user._id}>\n                                    <td className='align-middle'><b>{user.name && user.name}</b></td>\n                                    <td className='align-middle'>{user.consultantProfil && user.consultantProfil.matricule}</td>\n                                    <td className='align-middle text-center'>{user.consultantProfil && user.consultantProfil.practice}</td>\n                                    <td className='align-middle text-center'>{user.createdAt && user.createdAt.toString().substring(0, 10)}</td>\n                                    <td className='align-middle text-center'>{user.lastConnexion && user.lastConnexion.toString().substring(0, 10)}</td>\n                                    <td className='align-middle text-center'>\n                                        {user.status && (\n                                            <OverlayTrigger\n                                                placement='top'\n                                                overlay={<Tooltip>{user.status}</Tooltip>}\n                                            >{getStatusDisplay(user.status)}</OverlayTrigger>\n                                        )}\n                                    </td>\n                                    <td className='align-middle text-center'>{user.profil && user.profil.profil && user.profil.profil}</td>\n                                    <td className='align-middle'>\n                                        <Button\n                                            className='btn btn-primary p-1'\n                                            onClick={() => onClickEditHandler(user._id)}\n                                            size='sm'\n                                        ><i className=\"fas fa-user-edit\"></i>\n                                        </Button>\n                                    </td>\n                                    <td className='align-middle'>\n                                        <Button\n                                            className='btn btn-danger p-1'\n                                            onClick={() => onClickDeleteHandler(user)}\n                                            size='sm'\n                                        ><i className=\"fas fa-user-times\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(listUsers(userInfo.consultantProfil.practice, keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageUsersScreen;\n","import axios from 'axios';\nimport { \n    ACCESS_LIST_FAIL, \n    ACCESS_LIST_REQUEST, \n    ACCESS_LIST_SUCCESS, \n    ACCESS_UPDATE_FRONTACCESS_FAIL, \n    ACCESS_UPDATE_FRONTACCESS_REQUEST,\n    ACCESS_UPDATE_FRONTACCESS_SUCCESS\n} from '../constants/accessConstants';\n\nexport const getAllAccess = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: ACCESS_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/access`, config);\n        dispatch({ type: ACCESS_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: ACCESS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateprofilFrontAcessRule = (rule) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: ACCESS_UPDATE_FRONTACCESS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/access`, rule, config);\n        dispatch({ type: ACCESS_UPDATE_FRONTACCESS_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: ACCESS_UPDATE_FRONTACCESS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { getAllMyAdminConsultants } from '../actions/consultantActions';\nimport { USER_STATUS, USER_UPDATE_RESET } from '../constants/userConstants';\nimport { getAllAccess } from '../actions/accessActions';\n\nconst UserEditScreen = ({ match, history }) => {\n\n    const userId = match.params.id;\n\n    const dispatch = useDispatch();\n    \n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [linkConsultant, setLinkConsultant] = useState('');\n    const [profil, setProfil] = useState('');\n    const [status, setStatus] = useState('');\n        \n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    \n    const userDetails = useSelector(state => state.userDetails);\n    const { error, loading, user } = userDetails;\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const { error: errorUpdate, success: successUpdate } = userUpdate;\n\n    const consultantsMyAdminList = useSelector(state => state.consultantsMyAdminList);\n    const { error:errorMyAdmin, consultantsMyAdmin } = consultantsMyAdminList;\n\n    const accessList = useSelector(state => state.accessList);\n    const { access } = accessList;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n\n        if (!loading && !error && (!user || user._id !== userId)) {\n            dispatch(getUserDetails(userId));\n        }\n\n    }, [dispatch, user, error, userId, loading]);\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setProfil(user.profil);\n            setStatus(user.status);\n            if (user.consultantProfil) {\n                setLinkConsultant(user.consultantProfil._id);\n            } else {\n                setLinkConsultant('');\n            }\n        }\n\n    }, [user]);\n\n    useEffect(() => {\n\n        if (user && user._id === userId) {\n            dispatch(getAllMyAdminConsultants('','',10000));\n        }\n\n    }, [dispatch, user, userId]);\n\n    useEffect(() => {\n        if (!access) {\n            dispatch(getAllAccess());\n        }\n    },[dispatch, access]);\n\n    const updateProfilHandler = (profil) => {\n        const newProfil = access.filter(x => x.profil === profil)[0];\n        setProfil(newProfil);\n    }\n\n    const goBackHandler = () => {\n        history.go(-1);\n        dispatch({type: USER_UPDATE_RESET});\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const updatedUser = {\n            ...user,\n            name: name,\n            email: email,\n            consultantProfil: linkConsultant,\n            profil: profil._id,\n            status: status\n        };\n        dispatch(updateUser(updatedUser));\n\n    };\n\n    return (\n        <>\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorMyAdmin && <Message variant='danger'>{errorMyAdmin}</Message>}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {successUpdate && <Message variant='success'>User updated with success</Message>}\n\n            <Button className='mb-3' onClick={() => goBackHandler()}>\n                Go Back\n            </Button>\n\n            <FormContainer>\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label><b>Name</b></Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            value={name && name}\n                            onChange={(e) => setName(e.target.value)}\n                            required\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label><b>Email address</b></Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter email'\n                            value={email && email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='consultantProfil'>\n                        <Form.Label><b>Linked Consultant Profil</b></Form.Label>\n                        <InputGroup>\n                            <Form.Control\n                                as='select'\n                                placeholder='Enter consultant to link'\n                                value={linkConsultant && linkConsultant}\n                                onChange={(e) => setLinkConsultant(e.target.value)}\n                                required\n                            >\n                                {consultantsMyAdmin && consultantsMyAdmin.map(\n                                    x => (\n                                        <option\n                                            key={x._id}\n                                            value={x._id}\n                                        >{x.name}</option>\n                                    )\n                                )}\n                            </Form.Control>\n                            <InputGroup.Append>\n                                <Button onClick={() => history.push(`/editconsultant/${linkConsultant}`)}>Edit consultant</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n\n                    </Form.Group>\n\n                    <Form.Group controlId='user-profil'>\n                        <Form.Label><b>User profil</b></Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={profil && profil.profil ? profil.profil : ''}\n                            onChange={(e) => updateProfilHandler(e.target.value)}\n                            required\n                        >\n                            <option value=''>--Select--</option>\n                            {access && access.map( x => (\n                                <option\n                                    key={x._id}\n                                    value={x.profil}\n                                >{x.profil}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='status'>\n                        <Form.Label><b>Account Status</b></Form.Label>\n                        <Form.Control\n                            as='select'\n                            placeholder='Select status for account'\n                            value={status && status}\n                            onChange={(e) => setStatus(e.target.value)}\n                            required\n                        >\n                            {USER_STATUS.map( x => (\n                                <option\n                                    key={x}\n                                    value={x}\n                                >{x}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n\n\n                </Form>\n            </FormContainer>\n\n        </>\n    )\n};\n\nexport default UserEditScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'; \nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect);\n            // If user is authenticate, there is no search and user is redirect to home page\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            // Dispatch Register\n            setMessage(null); // to reinitialize the message before testing\n            if (password !== confirmPassword) {\n                setMessage('Passwords do not match')\n            } else {\n                dispatch(register(name, email, password));\n            }\n        }\n    };\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Adress</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='confirm-password'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variat='primary'>\n                    Register\n                </Button>\n\n                <Row className='py-3'>\n                    <Col>\n                        Have an account ? \n                        <Link to={redirect ? \n                            `/login?reditect=${redirect}`\n                        : '/login'}>\n                            Login\n                        </Link>\n                    </Col>\n                </Row>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport ViewStaffs from '../components/ViewStaffs';\nimport ViewOldStaffs from '../components/ViewOldStaffs';\nimport SkillsDetails from './SkillsDetails';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport { getConsultantCdm } from '../actions/consultantActions';\nimport DisplayChildren from '../components/DisplayChildren';\n\n\nconst StaffAConsultant = ({ history, onHide, show, consultant, loadingData={}, mode, addStaffHandler }) => {\n\n    const dispatch = useDispatch();\n\n    const [sdResponsability, setSdResponsability] = useState(loadingData.responsability ? loadingData.responsability : '');\n    const [sdPriority, setSdPriority] = useState(loadingData.priority ? loadingData.priority : '');\n    const [sdInformation, setSdInformation] = useState(loadingData.information ? loadingData.information : '');\n\n    const consultantGetCdm = useSelector(state => state.consultantGetCdm);\n    const { cdm } = consultantGetCdm;\n\n    useEffect(() => {\n        if(show) {\n            dispatch(getConsultantCdm(consultant._id))\n        }\n    }, [dispatch, consultant, show])\n\n    return (\n\n        <Modal\n            show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            onHide={onHide}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    {consultant.name ? (\n                        <div>\n                            <a href={consultant.linkedCV} target=\"_blank\" rel=\"noreferrer\">{consultant.name}</a>{` - ${consultant.grade} (${cdm ? cdm.name : ''})`}\n                        </div>\n                        ) : (\n                            ''\n                        )\n                    }\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                {mode === 'staffing' && (\n                    <DisplayChildren access='editStaff'>\n                        <Row>\n                            <Col className='mt-3'>\n                                <label htmlFor='sd-responsability'><strong>Responsability *</strong></label>\n                                <InputGroup id='sd-responsability'>\n                                    <FormControl\n                                        as='select'\n                                        value={sdResponsability}\n                                        onChange={(e) => setSdResponsability(e.target.value)}\n                                    >\n                                        <option value=''>--Select--</option>\n                                        <option value={'Project director'}>Project director</option>\n                                        <option value={'Project manager'}>Project manager</option>\n                                        <option value={'Project leader'}>Project leader</option>\n                                        <option value={'X'}>X</option>\n                                        <option value={'Intern'}>Intern</option>\n\n                                    </FormControl>\n                                </InputGroup>\n                            </Col>\n\n                            <Col className='mt-3'>\n                                <label htmlFor='sd-priority'><strong>Priority *</strong></label>\n                                <InputGroup id='sd-priority'>\n                                    <FormControl\n                                        as='select'\n                                        value={sdPriority}\n                                        onChange={(e) => setSdPriority(e.target.value)}\n                                    >\n                                        <option value=''>--Select--</option>\n                                        <option value={'P1'}>P1</option>\n                                        <option value={'P2'}>P2</option>\n                                        <option value={'P3'}>P3</option>\n\n                                    </FormControl>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='mt-3'>\n                                <label><strong>Comment</strong></label>\n                                <InputGroup id='sd-information'>\n                                    <FormControl\n                                        as='textarea'\n                                        rows={3}\n                                        value={sdInformation}\n                                        onChange={(e) => setSdInformation(e.target.value)}\n                                    ></FormControl>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n                    </DisplayChildren>\n                )}\n\n                <DisplayChildren access='viewSkills'>\n                    <SkillsDetails\n                        consultantId={consultant._id}\n                        editable={false}\n                        close={(mode === 'consultation') ? false : true}\n                    />\n                </DisplayChildren>\n\n                <DisplayChildren access='viewStaffings'>\n                    <DropDownTitleContainer title='Others staffings' close={false}>\n                        <ViewStaffs\n                            history={history}\n                            consultantId={consultant._id}\n                            onNavigate={onHide}\n                        />\n                    </DropDownTitleContainer>\n                </DisplayChildren>\n\n                <DropDownTitleContainer title='Old staffings' close={true}>\n                    <ViewOldStaffs\n                        history={history}\n                        consultantId={consultant._id}\n                        onNavigate={onHide}\n                    />\n                </DropDownTitleContainer>\n                \n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button onClick={onHide} variant='secondary'>Cancel</Button>\n                <DisplayChildren access='editStaff'>\n                    {mode === 'staffing' && (\n                        <Button\n                            onClick={() => {\n                                addStaffHandler(consultant, sdResponsability, sdPriority, sdInformation);\n                                onHide();\n                            }}\n                            variant='primary'\n                            disabled={!(sdResponsability !== '' && sdPriority !== '')}\n                        >Staff</Button>\n                    )}\n                </DisplayChildren>\n            </Modal.Footer>\n\n        </Modal>\n    )\n}\n\nexport default StaffAConsultant;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({ options, value, setValue, disabled, multi }) => {\n\n    const handleChange = (e) => {\n        let valuesSelected = [];\n        if(multi) {\n            valuesSelected = e.map(x => ({id: x.value, value: x.label}));\n        } else {\n            valuesSelected = [{id: e.value, value: e.label}]\n        }\n        setValue(valuesSelected);\n    }\n\n    return (\n        <div>\n            <Select\n                closeMenuOnSelect={true}\n                placeholder='Select...'\n                value={value ? value : null}\n                isMulti={multi}\n                options={options ? options : []}\n                onChange={handleChange}\n                isDisabled={disabled}\n            />\n        </div>\n    )\n}\n\nexport default SelectInput;\n","import axios from 'axios';\nimport {\n    SKILL_LIST_REQUEST,\n    SKILL_LIST_SUCCESS,\n    SKILL_LIST_FAIL,\n    SKILL_DELETE_REQUEST,\n    SKILL_DELETE_FAIL,\n    SKILL_DELETE_SUCCESS,\n    SKILL_CREATE_REQUEST,\n    SKILL_CREATE_SUCCESS,\n    SKILL_CREATE_FAIL\n } from '../constants/skillsConstants';\n\nexport const getAllSkills = (category = '', name = '', pageNumber = '', pageSize = '15') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: SKILL_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/skills?category=${category}&name=${name}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        dispatch({ type: SKILL_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteSkill = (skillId) => async (dispatch, getState) => {\n    \n    // TO FINISH : if delete a skill, you need to delete on all consultant associated profils\n    \n    try {\n\n        dispatch({ type: SKILL_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/skills/${skillId}`, config);\n        dispatch({ type: SKILL_DELETE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const createSkills = (skill) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: SKILL_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/skills', skill, config);\n        dispatch({ type: SKILL_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { getAvailabilities } from '../actions/pxxActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport StaffAConsultant from './StaffAConsultant';\nimport DisplayChildren from '../components/DisplayChildren';\nimport SelectComponent from '../components/SelectComponent';\n\nimport SelectInput from '../components/SelectInput';\nimport { getAllSkills } from '../actions/skillActions';\n\nconst ConsoDispo = ({ \n    //practice, \n    start, end, mode, addStaffHandler, history }) => {\n\n    const dispatch = useDispatch();\n\n    const [focus, setFocus] = useState('');\n    const [searchExperienceStart, setSearchExperienceStart] = useState('');\n    const [searchExperienceEnd, setSearchExperienceEnd] = useState('');\n    const [practice, setPractice] = useState('');\n\n    const [searchSkillsList, setSearchSkillsList] = useState([]);\n\n    const [searchMode, setSearchMode] = useState('filterAvailable');\n\n    const [modalWindowShow, setModalWindowShow] = useState(false);\n    const [sdConsultant, setSdConsultant] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxAvailabilities = useSelector(state => state.pxxAvailabilities);\n    const { loading: loadingAvailabilities, error: errorAvailabilities, availabilities } = pxxAvailabilities;\n\n    const skillList = useSelector(state => state.skillList);\n    const { skills } = skillList;\n\n    useEffect(() => {\n        if(userInfo.consultantProfil.practice) {\n            setPractice(userInfo.consultantProfil.practice);\n        }\n    }, [userInfo.consultantProfil.practice]);\n\n    useEffect(() => {\n        if (practice) {\n            dispatch(getAvailabilities(practice, start, end, searchSkillsList.map(skill => skill.value).join(';'), searchExperienceStart, searchExperienceEnd, searchMode));\n        }\n    }, [dispatch, practice, start, end, searchMode, searchSkillsList, searchExperienceStart, searchExperienceEnd]);\n\n    useEffect(() => {\n        dispatch(getAllSkills('','',1,10000));\n    },[dispatch]);\n\n    const removeFilterAction = () => {\n        setSearchSkillsList([]);\n        setSearchExperienceStart('');\n        setSearchExperienceEnd('');\n    };\n\n    const handlerSkillsSubmit = (e) => {\n        e.preventDefault();\n        dispatch(getAvailabilities(practice, start, end, searchSkillsList.map(skill => skill.value).join(';'), searchExperienceStart, searchExperienceEnd, searchMode));\n    };\n\n    const moreConsultantDetails = (consultant) => {\n        setModalWindowShow(true);\n        setSdConsultant(consultant);\n    };\n\n    return (\n        <>\n            {modalWindowShow && (\n                <StaffAConsultant\n                    show={modalWindowShow}\n                    onHide={() => setModalWindowShow(false)}\n                    consultant={sdConsultant}\n                    mode={mode}\n                    addStaffHandler={addStaffHandler}\n                    history={history}\n                />\n            )}\n\n            <Row className='mt-5'>\n                <Col>\n                    <Form.Group controlId='switch-practices' className='my-0'>\n                        <Form.Check\n                            type='switch'\n                            id='switch-all-practices'\n                            label='All practices'\n                            checked={practice === 'all' ? true : false}\n                            onChange={(e) => { e.target.checked === true ? setPractice('all') : setPractice(userInfo.consultantProfil.practice) }}\n                        ></Form.Check>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Row className='mt-3'>\n                <Col md={12}>\n                    <Form onSubmit={handlerSkillsSubmit}>\n\n                        <Form.Row className='align-items-center mb-3'>\n                            <Col md={1}>\n                                {( searchExperienceStart || searchExperienceEnd) ? (\n                                    <Button \n                                        variant='secondary'\n                                        onClick={removeFilterAction}\n                                        block\n                                    ><i className=\"fas fa-minus-circle\"></i></Button>\n                                ) : (\n                                    <Button \n                                        variant='primary'\n                                        disabled\n                                        block\n                                    ><i className=\"fas fa-keyboard\"></i></Button>\n                                )}\n                            </Col>\n\n                            <Col md={4}>\n                                <Form.Group controlId='skill-search' className='my-0'>\n                                    <SelectInput\n                                        options={skills ? skills.map(skill => ({ value: skill._id, label: skill.name })) : []}\n                                        value={searchSkillsList.length ? searchSkillsList.map(skill => ({ value: skill._id, label: skill.value })) : []}\n                                        setValue={setSearchSkillsList}\n                                        multi={true}\n                                        disabled={false}\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='experience-search-start' className='my-0'>\n                                    <Form.Control\n                                        type='number'\n                                        min={0}\n                                        step={0.5}\n                                        placeholder='From (year)'\n                                        value={searchExperienceStart && searchExperienceStart}\n                                        onChange={(e) => setSearchExperienceStart(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='experience-search-end' className='my-0'>\n                                    <Form.Control\n                                        type='number'\n                                        step={0.5}\n                                        min={searchExperienceStart || 0}\n                                        placeholder='To (year)'\n                                        value={searchExperienceEnd && searchExperienceEnd}\n                                        onChange={(e) => setSearchExperienceEnd(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='switch-only-available'  className='my-0'>\n                                    <SelectComponent \n                                        editRequest={true}\n                                        label=''\n                                        id='select-filter'\n                                        value={searchMode}\n                                        onChange={setSearchMode}\n                                        required={true}\n                                        options={\n                                            <>\n                                                <option value='filterAvailable'>Is available</option>\n                                                <option value='notAvailable'>Is not available</option>\n                                                <option value='notProd'>Has not prod</option>\n                                            </>\n                                        }\n                                    />\n                                    {/* <Form.Check\n                                        type='switch'\n                                        id='switch-only-available'\n                                        label='Not available'\n                                        checked={searchMode === 'filterAvailable' ? false : true}\n                                        onChange={(e) => {e.target.checked === true ? setSearchMode('all') : setSearchMode('filterAvailable')}}\n                                    ></Form.Check> */}\n                                </Form.Group>\n\n                            </Col>\n\n                            <Col md={1}>\n                                <Button\n                                    type='submit'\n                                    variant='primary'\n                                    block\n                                >Search</Button>\n                            </Col>\n                        </Form.Row>\n                    </Form>\n\n                </Col>\n            </Row>\n\n            <Tabs defaultActiveKey=\"Analysts\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"Intern\" title=\"Intern\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col sm={12} md={4} key={xVal}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Intern']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Analysts\" title=\"Analysts\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Analyst']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Consultants\" title=\"Consultants\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Consultant']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Senior consultants\" title=\"Senior consultants\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Senior consultant']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Managers\" title=\"Managers and +\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Manager', 'Senior manager', 'Director', 'Partner']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n            </Tabs>\n        </>\n    )\n}\n\n\nconst ConsoDispoUnit = ({monthData, grades, mode, addStaff, focus, setFocus}) => {\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    \n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    const calculateExperience = (date) => {\n\n        if (date) {\n            return ((Date.now() - new Date(date)) / (1000 * 24 * 3600 * 365.25)).toString().substring(0, 4)\n        } else {\n            return '-';\n        }\n    }\n\n    return (\n        <Card className='my-1 rounded' >\n            <Card.Header as=\"h5\">{monthData.month.firstDay.toString().substring(0, 7)}</Card.Header>\n            <Card.Body>\n                {monthData.availabilities.map((consultantData, yVal) => (\n                    grades.includes(consultantData.grade) && (\n                        <Row key={yVal} className='align-items-middle'>\n                            {(mode === 'staffing' || mode === 'consultation') && (\n                                <Col sm={1}>\n                                    <Button\n                                        size='sm'\n                                        variant='ligth'\n                                        className='mx-0 px-0'\n                                        onClick={() => addStaff(consultantData)}\n                                    ><i className=\"fas fa-search\"></i></Button>\n                                </Col>\n                            )}\n                            <Col sm={10}>\n\n                                <OverlayTrigger\n                                    overlay={\n                                        <Tooltip id=\"tooltip-disabled\" html=\"true\">\n                                            <DisplayChildren access='viewComment'>\n                                                {userInfo && userInfo.consultantProfil._id !== consultantData._id ? (\n                                                    (\n                                                        <div>\n                                                            <div><p className='m-0 p-0 text-left'><strong>Information</strong></p>{consultantData.comment && consultantData.comment.split('\\n').map((x, val) => (<p key={val} className='m-0 p-0 text-left'>{x}</p>))}</div>\n                                                            <div><p className='m-0 mt-3 p-0 text-left'><strong>Availability comment</strong></p>{consultantData.availabilityComment && consultantData.availabilityComment.split('\\n').map((x, val) => (<p key={val} className='m-0 p-0 text-left'>{x}</p>))}</div>\n                                                            <div><p className='m-0 mt-3 p-0 text-left'><strong>Not Prod comment</strong></p>{consultantData.notProdComment && consultantData.notProdComment.split('\\n').map((x, val) => (<p key={val} className='m-0 p-0 text-left'>{x}</p>))}</div>\n                                                        </div>\n                                                    )\n                                                ) : 'No access to this data'}\n                                            </DisplayChildren>\n                                        </Tooltip>\n                                    }>\n                                    <Form.Control\n                                        plaintext\n                                        readOnly\n                                        id={consultantData.email}\n                                        value={consultantData.availableDay.toString() + ' days : ' + formatName(consultantData.name) + ' (' + calculateExperience(consultantData.valued) + ' years)'}\n                                        style={(consultantData.email === focus) ? { background: '#464277', color: 'white' } : { color: 'black' }}\n                                        onFocus={(e) => {\n                                            setFocus(e.target.id)\n                                        }}\n                                    />\n                                </OverlayTrigger>\n\n                            </Col>\n                        </Row>\n                    )\n                ))}\n            </Card.Body>\n        </Card>\n    )\n}\n\n\nexport default ConsoDispo\n","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport DisplayChildren from '../components/DisplayChildren';\nimport { createTaceData } from '../actions/taceActions';\n\n\nconst Tace = ({ tace, practice }) => {\n\n    const dispatch = useDispatch();\n\n    const [target, setTarget] = useState(tace.target);\n    const [bid, setBid] = useState(tace.bid);\n    const [editRequest, setEditRequest] = useState(false);\n    const [update, setUpdate] = useState(false);\n\n    const [missingFTEToBid, setMissingFTEToBid] = useState('');\n    const [missingFTEToTarget, setMissingFTEToTarget] = useState('');\n\n    const createTace = useSelector(state => state.createTace);\n\n    useEffect(() => {\n        if(update) {\n            dispatch(createTaceData({\n                month:tace.month._id,\n                practice: practice,\n                target: target,\n                bid: bid,\n            }))\n            setUpdate(false);\n        }\n    }, [dispatch, createTace, update, practice, tace, target, bid]);\n\n    useEffect(() => {\n        \n        const prodDay = Number(tace.totalProdDay);\n        const totalProdDayToBid = Number(bid) / 100 * (Number(tace.totalProdDay) + Number(tace.totalNotProdDay) + Number(tace.totalAvailableDay));\n        const totalProdDayToTarget = Number(target) / 100 * (Number(tace.totalProdDay) + Number(tace.totalNotProdDay) + Number(tace.totalAvailableDay));\n    \n        //console.log('firstDay', tace.month.firstDay);\n        const today = new Date(Math.max(new Date(Date.now()), new Date(tace.month.firstDay)));\n        //console.log(today);\n        const lastMonthDay = new Date(Math.max(new Date(Date.now()), new Date(tace.month.firstDay)));\n        //console.log(lastMonthDay);\n        lastMonthDay.setUTCMonth(lastMonthDay.getUTCMonth() + 1);\n        lastMonthDay.setUTCDate(1);\n\n        const todayToEnd = (lastMonthDay - today) / (3600 * 24 * 1000);\n\n        if(bid) {\n            const missingFTEToBidCalculated = (prodDay - totalProdDayToBid) / todayToEnd;\n            setMissingFTEToBid(missingFTEToBidCalculated);\n        }\n        if(target){\n            const missingFTEToTargetCalculated = (prodDay - totalProdDayToTarget) / todayToEnd;\n            setMissingFTEToTarget(missingFTEToTargetCalculated);\n        }\n\n    },[tace, bid, target]);\n\n\n    return (\n\n        <Col sm={12} md={4}>\n            <Card className='my-3 p-3 rounded'>\n                <Card.Header as=\"h5\">{tace.month.firstDay.toString().substring(0, 7)}</Card.Header>\n                <Card.Body className='p-1 mt-3'>\n                    <Card.Text as='h4'>Tace <DisplayChildren access='editTace'><Button \n                                                size='sm' \n                                                variant='ligth'\n                                                onClick={() => {\n                                                    if(editRequest) {\n                                                        setUpdate(true)\n                                                    }\n                                                    setEditRequest(!editRequest)}\n                                                }\n                                                ><i className=\"fas fa-edit\"></i></Button></DisplayChildren>\n                    </Card.Text>\n\n                    <ListGroup>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col className='text-center' xs={4}><strong>Current</strong></Col>\n                                <Col className='text-center' xs={4}><strong>Target</strong></Col>\n                                <Col className='text-center' xs={4}><strong>Bid</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row className='align-items-center'>\n                                <Col className='text-center' xs={4}>{(Number(tace.totalTACE) * 100).toFixed(1)} %</Col>\n                                \n                                <Col className='text-center' xs={4}>\n                                    <Form.Group controlId='tace-target' className='mb-0'>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='Number'\n                                                className='text-center'\n                                                min={0}\n                                                max={100}\n                                                step={0.1}\n                                                value={target}\n                                                onChange={(e) => setTarget(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Row className='align-items-center'>\n                                                    <Col className='m-0 p-0'>\n                                                        <Form.Control\n                                                            type='text'\n                                                            className='text-right'\n                                                            plaintext\n                                                            value={target}\n                                                            readOnly\n                                                        ></Form.Control>\n                                                    </Col>\n                                                    <Col className='m-0 p-0 text-left'>&nbsp;%</Col>\n                                                </Row>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n\n                                <Col className='text-center' xs={4}>\n                                    <Form.Group controlId='title' className='mb-0'>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='Number'\n                                                className='text-center'\n                                                min={0}\n                                                max={100}\n                                                step={0.1}\n                                                value={bid}\n                                                onChange={(e) => setBid(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Row className='align-items-center'>\n                                                    <Col className='m-0 p-0'>\n                                                        <Form.Control\n                                                            type='text'\n                                                            className='text-right'\n                                                            plaintext\n                                                            value={bid}\n                                                            readOnly\n                                                        ></Form.Control>\n                                                    </Col>\n                                                    <Col className='m-0 p-0 text-left'>&nbsp;%</Col>\n                                                </Row>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col xs={4}>&Delta; FTE</Col>\n                                <Col xs={4} className='text-center'>{missingFTEToTarget && missingFTEToTarget.toFixed(2)}</Col>\n                                <Col xs={4} className='text-center'>{missingFTEToBid && missingFTEToBid.toFixed(2)}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup className='mt-3'>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col><strong>Leaving</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col className='text-right'>{(Number(tace.totalLeaving) * 100).toFixed(2)} %</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup className='mt-3'>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col><strong>FTE</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col className='text-right'>{tace.totalETP && tace.totalETP.toFixed(2)}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>  \n                </Card.Body>\n                <Card.Footer className='mt-3'>\n                    <DisplayChildren access='tace'>\n                        <Link to={`/pxxdetails/${tace.month._id}`}>View details</Link>\n                    </DisplayChildren>\n                </Card.Footer>\n            </Card>\n        </Col>\n\n    )\n}\n\nexport default Tace;\n","import axios from 'axios';\nimport { \n    TACE_CREATE_FAIL,\n    TACE_CREATE_REQUEST, \n    TACE_CREATE_SUCCESS, \n} from '../constants/taceConstants';\n\nexport const createTaceData = (taceData) => async(dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: TACE_CREATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/tace', taceData, config);\n\n        dispatch({\n            type: TACE_CREATE_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: TACE_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { getTace } from '../actions/pxxActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport ConsoDispo from '../components/ConsoDispo';\nimport Tace from '../components/Tace';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer'\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst DashboardScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // initialization of default constants\n    const duration = 3;\n    let startDefault = new Date(Date.now());\n    startDefault.setUTCDate(1);\n    startDefault.setUTCMonth(startDefault.getUTCMonth());\n    startDefault = startDefault.toISOString().substring(0, 10);\n\n    let endDefault = new Date(Date.now());\n    endDefault.setUTCDate(1);\n    endDefault.setUTCMonth(endDefault.getUTCMonth() + duration - 1);\n    endDefault = endDefault.toISOString().substring(0, 10);\n\n    const [start, setStart] = useState(startDefault);\n    const [end, setEnd] = useState(endDefault);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxTACE = useSelector(state => state.pxxTACE);\n    const { loading: loadingTACE, error: errorTACE, tace } = pxxTACE;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } \n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (userInfo && !loadingTACE) {\n            dispatch(getTace(userInfo.consultantProfil.practice, start, end));\n        }\n        // eslint-disable-next-line\n    }, [ dispatch, start, end, userInfo.consultantProfil.practice ]);\n    \n    const navigationMonthHandler = (val) => {\n        const startDate = new Date(start);\n        const endDate = new Date(end);\n        startDate.setUTCMonth(startDate.getUTCMonth() + val);\n        endDate.setUTCMonth(endDate.getUTCMonth() + val);\n\n        setStart(startDate.toISOString().substring(0, 10));\n        setEnd(endDate.toISOString().substring(0, 10));\n    }\n\n    return (\n        <>\n            <Meta />\n\n            <Row>\n\n                <Col className=\"text-center\" xs={2}>\n                    <Button\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                    ><i className=\"fas fa-caret-left\"></i>\n                    </Button>\n                </Col>\n\n                <Col>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            id='start-date'\n                            className='form-control-lg mb-3 text-right'\n                            plaintext\n                            value={start && `From: ${start.substring(0, 7).replace('-', '/')}`}\n                            readOnly\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            id='date-end'\n                            className='form-control-lg mb-3 text-left'\n                            plaintext\n                            value={end && `To: ${end.substring(0, 7).replace('-', '/')}`}\n                            readOnly\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col className=\"text-center\" xs={2}>\n                    <Button\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                    ><i className=\"fas fa-caret-right\"></i>\n                    </Button>\n                </Col>\n            </Row>\n            \n            <DisplayChildren access={'tace'}>\n                <DropDownTitleContainer title='TACE' close={false}>\n                    <Row className='mt-3'>\n                        <Col>\n                            <h4>TACE ({userInfo && userInfo.consultantProfil.practice})</h4>\n                        </Col>\n                    </Row>\n\n                    <Row className='mt-1'>\n                        {loadingTACE ? <Loader /> : errorTACE ? <Message variant='danger'>{errorTACE}</Message> : (\n                            tace && tace.map((x, val) => (\n                                <Tace key={val} tace={x} practice={userInfo && userInfo.consultantProfil.practice} />\n                            ))\n                        )}\n                    </Row>\n                </DropDownTitleContainer>\n            </DisplayChildren>\n\n            <DisplayChildren access={'consoDispo'}>\n                <DropDownTitleContainer title='Availabilities' close={true}>\n                    <Row>\n                        <Col>\n                            <ConsoDispo\n                                //practice={practice}\n                                start={start}\n                                end={end}\n                                mode='consultation'\n                                history={history}\n                            />\n                        </Col>\n                    </Row>\n                </DropDownTitleContainer>\n            </DisplayChildren>\n        </>\n    )\n}\n\nexport default DashboardScreen;\n","import axios from 'axios';\nimport { \n    CLIENT_ALL_FAIL, \n    CLIENT_ALL_REQUEST, \n    CLIENT_ALL_SUCCESS, \n    CLIENT_CREATE_FAIL, \n    CLIENT_CREATE_REQUEST,\n    CLIENT_CREATE_SUCCESS,\n    CLIENT_DELETE_FAIL,\n    CLIENT_DELETE_REQUEST,\n    CLIENT_DELETE_SUCCESS,\n    CLIENT_UPDATE_FAIL,\n    CLIENT_UPDATE_REQUEST,\n    CLIENT_UPDATE_SUCCESS\n} from '../constants/clientConstants';\n\nexport const getAllClients = (name='', pageNumber='', pageSize='') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_ALL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/clients?clientName=${name}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        dispatch({ type: CLIENT_ALL_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_ALL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const createAClient = (clients) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/clients`, clients, config);\n        dispatch({ type: CLIENT_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateAClient = (clients) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/clients`, clients, config);\n        dispatch({ type: CLIENT_UPDATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteAClient = (clientsId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.delete(`/api/clients/${clientsId}`, config);\n        dispatch({ type: CLIENT_DELETE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { createAClient, getAllClients } from '../actions/clientActions';\n\nimport CreatableSelect from 'react-select/creatable';\n\nconst SelectCompany = ({ company, setCompany, editRequest }) => {\n\n    const dispatch = useDispatch();\n\n    const clientAll = useSelector(state => state.clientAll);\n    const { clients: companies } = clientAll;\n\n    const clientCreate = useSelector(state => state.clientCreate);\n    const { success } = clientCreate;\n\n    useEffect(() => {\n        //dispatch(getAllClients(searchCompany));\n        dispatch(getAllClients(''));\n    }, [dispatch, success]);\n\n    const handleChange = (e) => {\n        //console.log('e', e);\n        if (e) {\n            const currentCompaniesId = companies.map(x => x._id);\n            //console.log('currentCompaniesId', currentCompaniesId);\n            if (currentCompaniesId.includes(e.value)) {\n                setCompany(e.label);\n            } else {\n                //console.log('create a compay');\n                dispatch(createAClient([{name:e.label, commercialTeam:[]}]));\n                setCompany(e.label);\n            }\n        } else {\n            setCompany('');\n        }\n    }\n\n    return (\n        <Row className='align-items-end'>\n            <Col>\n                <CreatableSelect\n                    placeholder='Select a company'\n                    isClearable\n                    onChange={handleChange}\n                    value={(company && company.label !=='') ? company : null}\n                    options={companies && companies.map(company => ({ value: company._id, label: company.name }))}\n                    isDisabled={!editRequest}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nexport default SelectCompany\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst DateComponent = ({ label, id, placeholder, value, onChange, required, editMode }) => {\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            <Form.Label>{label} {editMode && required && '*'}</Form.Label>\n            {editMode ? (\n                <Form.Control\n                    className='border border-light border-top-0 border-right-0 border-left-0'\n                    type='date'\n                    placeholder={placeholder}\n                    value={value ? value : ''}\n                    onChange={(e) => onChange(e.target.value)}\n                    required={required}\n                ></Form.Control>\n            ) : (\n                <Form.Control\n                    className='border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    type='date'\n                    value={value ? value : ''}\n                    plaintext\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default DateComponent\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst NumberComponent = ({ label, placeholder, id, min, max, step, value, onChange, required, editRequest  }) => {\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            <Form.Label>{label} {editRequest && required && '*'}</Form.Label>\n            {editRequest ? (\n                <Form.Control\n                    className='border border-light border-top-0 border-right-0 border-left-0'\n                    type='number'\n                    placeholder={placeholder}\n                    min={Number(min)}\n                    step={Number(step)}\n                    value={value ? Number(value) : 0}\n                    onChange={(e) => onChange(e.target.value)}\n                    required={required}\n                ></Form.Control>\n            ) : (\n                <Form.Control\n                    type='number'\n                    className='border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    value={value ? value : 0}\n                    plaintext\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n};\n\nexport default NumberComponent;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst TextComponent = ({ label, id, placeholder, value, onChange, required, editRequest, formInline }) => {\n    return (\n        <Form.Group controlId={id} className={formInline ? 'mb-0 form-inline' : 'mb-0 '}>\n            <Form.Label as='h5'>{label} {editRequest && required && '*'}</Form.Label>\n            {editRequest ? (\n                <Form.Control\n                    type='text'\n                    className='border border-light border-top-0 border-right-0 border-left-0'\n                    placeholder={placeholder}\n                    value={value ? value : ''}\n                    onChange={(e) => onChange(e.target.value)}\n                    required={required}\n                ></Form.Control>\n            ) : (\n                <Form.Control\n                    type='text'\n                    className='pl-3 border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    plaintext\n                    value={value ? value : ''}\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default TextComponent;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst SelectMultipleComponent = ({ label, id, editRequest, required, value, onChange, options }) => {\n\n    const updateOthersPractices = () => {\n        const selectedList = [];\n        const selectBox = document.getElementById(id);\n        for (let i = 0; i < selectBox.options.length; i++) {\n            if (selectBox.options[i].selected) {\n                selectedList.push(selectBox.options[i].value);\n            }\n        }\n        onChange(selectedList);\n    }\n\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            <Form.Label as='h5'>{label} {editRequest && required && '*'}</Form.Label>\n            {editRequest ? (\n                <Form.Control\n                    as='select'\n                    className='custom-select border border-light border-top-0 border-right-0 border-left-0'\n                    multiple\n                    value={value ? value : []}\n                    onChange={(e) => updateOthersPractices()}\n                >\n                    {options}\n                </Form.Control>\n            ) : (\n                <Form.Control\n                    type='text'\n                    className='pl-3 border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    value={value ? value.join(', ') : ''}\n                    plaintext\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default SelectMultipleComponent;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst TextAreaComponent = ({ label, id, editRequest, required, placeholder, value, onChange, rows}) => {\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            <Form.Label as='h5'>{label} {editRequest && required && '*'}</Form.Label>\n            {editRequest ? (\n                <Form.Control\n                    as='textarea'\n                    rows={rows}\n                    className='custom-select border border-light border-top-0 border-right-0 border-left-0'\n                    placeholder={placeholder}\n                    value={value ? value : ''}\n                    onChange={(e) => onChange(e.target.value)}\n                    required={required}\n                ></Form.Control>\n            ) : (\n                <Form.Control\n                    as='textarea'\n                    className='pl-3 border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    rows={rows}\n                    value={value ? value : ''}\n                    plaintext\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default TextAreaComponent;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport { createDeal, getDealToEdit, updateDeal } from '../actions/dealActions';\nimport { getAllLeaders, getAllPractice } from '../actions/consultantActions';\nimport { DEAL_CREATE_RESET, DEAL_PROBABILITY, DEAL_STATUS, DEAL_UPDATE_RESET, TYPE_BUSINESS } from '../constants/dealConstants';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ConsoDispo from '../components/ConsoDispo';\nimport ViewStaffs from '../components/ViewStaffs';\nimport SelectCompany from '../components/SelectCompany';\nimport { REQUEST_STATUS } from '../constants/dealConstants';\nimport StaffAConsultant from '../components/StaffAConsultant';\nimport DisplayChildren from '../components/DisplayChildren';\nimport SelectInput from '../components/SelectInput';\nimport DateComponent from '../components/DateComponent';\nimport NumberComponent from '../components/NumberComponent';\nimport TextComponent from '../components/TextComponent';\nimport SelectComponent from '../components/SelectComponent';\nimport SelectMultipleComponent from '../components/SelectMultipleComponent';\nimport TextAreaComponent from '../components/TextAreaComponent';\n\nconst StaffingEditScreen = ({ match, history }) => {\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealCreate = useSelector(state => state.dealCreate);\n    const { loading, error, success, createId } = dealCreate;\n\n    const dealUpdate = useSelector(state => state.dealUpdate);\n    const { loading: loadingUpdate, error: errorUpdate } = dealUpdate;\n\n    const dealEdit = useSelector(state => state.dealEdit);\n    const { success: successEdit, deal: dealToEdit } = dealEdit;\n\n    const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    const { practiceList } = consultantPracticeList;\n\n    const consultantsAllLeaders = useSelector(state => state.consultantsAllLeaders);\n    const { leaderslist } = consultantsAllLeaders;\n\n    const [title, setTitle] = useState('');\n    const [company, setCompany] = useState('');\n    const [client, setClient] = useState('');\n    const [type, setType] = useState('');\n    const [status, setStatus] = useState('');\n    const [probability, setProbability] = useState('');\n    const [description, setDescription] = useState('');\n    const [proposalDate, setProposalDate] = useState('');\n    const [presentationDate, setPresentationDate] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [mainPractice, setMainPractice] = useState('');\n    const [othersPractices, setOthersPractices] = useState([]);\n    const [location, setLocation] = useState('');\n    const [srInstruction, setSrInstruction] = useState('');\n    const [srStatus, setSrStatus] = useState('');\n    const [srRessources, setSrRessources] = useState([]);\n    const [comments, setComments] = useState([]);\n    const [duration, setDuration] = useState('');\n    const [othersContacts, setOthersContacts] = useState('');\n\n    const [newComment, setNewComment] = useState('');\n\n    const [sdInstructions] = useState('');\n    const [sdStatus, setSdStatus] = useState('');\n    const [sdStaff, setSdStaff] = useState([]);\n\n    const [wonDate, setWonDate] = useState('');\n\n    const [modalWindowShow, setModalWindowShow] = useState(false);\n    const [sdConsultant, setSdConsultant] = useState('');\n    const [loadingSdConsultantData, setLoadingSdConsultantData] = useState({})\n\n    const [editRequest, setEditRequest] = useState(match.params.id ? false : true);\n\n    const [dealChange, setDealChange] = useState(false);\n\n    const [leader, setLeader] = useState([]);\n\n    const [coLeaders, setCoLeaders] = useState([]);\n\n\n    const [companyMessage, setCompanyMessage] = useState(null);\n\n    //ConsoDispo\n    const analyseTime = 3;\n    let startDefault = new Date(Date.now());\n    startDefault.setUTCDate(1);\n    startDefault.setUTCMonth(startDefault.getUTCMonth());\n    startDefault = startDefault.toISOString().substring(0, 10);\n\n    let endDefault = new Date(Date.now());\n    endDefault.setUTCDate(1);\n    endDefault.setUTCMonth(endDefault.getUTCMonth() + analyseTime - 1);\n    endDefault = endDefault.toISOString().substring(0, 10);\n\n    const [start] = useState(startDefault);\n    const [end] = useState(endDefault);\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (!practiceList) {\n            dispatch(getAllPractice());\n        }\n    }, [dispatch, practiceList]);\n\n    useEffect(() => {\n        if (match.params.id) {\n            dispatch(getDealToEdit(match.params.id));\n        }\n    }, [dispatch, match])\n\n\n    useEffect(() => {\n        dispatch(getAllLeaders());\n\n    }, [dispatch]);\n\n\n    useEffect(() => {\n        if (match.params.id && successEdit) {\n            setTitle(dealToEdit.title);\n            setCompany(dealToEdit.company);\n            setClient(dealToEdit.client);\n            setStatus(dealToEdit.status);\n            setType(dealToEdit.type);\n            setProbability(dealToEdit.probability);\n            setDescription(dealToEdit.description);\n            setProposalDate(dealToEdit.proposalDate ? dealToEdit.proposalDate.substring(0, 10) : \"\");\n            setPresentationDate(dealToEdit.presentationDate ? dealToEdit.presentationDate.substring(0, 10) : \"\");\n            setStartDate(dealToEdit.startDate ? dealToEdit.startDate.substring(0, 10) : \"\");\n            setMainPractice(dealToEdit.mainPractice);\n            setOthersPractices(dealToEdit.othersPractices ? dealToEdit.othersPractices : []);\n            setLocation(dealToEdit.location);\n            setSrInstruction(dealToEdit.staffingRequest.instructions);\n            setSrStatus(dealToEdit.staffingRequest.requestStatus);\n            setSrRessources(dealToEdit.staffingRequest.ressources ? dealToEdit.staffingRequest.ressources : []);\n            setSdStatus(dealToEdit.staffingDecision.staffingStatus ? dealToEdit.staffingDecision.staffingStatus : '');\n            setSdStatus(dealToEdit.staffingDecision.instructions ? dealToEdit.staffingDecision.instructions : '');\n            setSdStaff(dealToEdit.staffingDecision.staff ? dealToEdit.staffingDecision.staff : []);\n            setLeader(dealToEdit.contacts.primary ?\n                [{ id: dealToEdit.contacts.primary._id, value: dealToEdit.contacts.primary.name }] : ['']);\n            setCoLeaders(dealToEdit.contacts.secondary ?\n                dealToEdit.contacts.secondary.map(coLeader => ({ id: coLeader._id, value: coLeader.name })) : []);\n            setComments(dealToEdit.comments ? dealToEdit.comments : []);\n            setDuration(dealToEdit.duration ? dealToEdit.duration : '');\n            setOthersContacts(dealToEdit.othersContacts ? dealToEdit.othersContacts : '');\n        }\n    }, [successEdit, dealToEdit, userInfo, match])\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/staffing/${createId}`);\n            dispatch({ type: DEAL_CREATE_RESET });\n        }\n    }, [dispatch, history, success, createId]);\n\n    useEffect(() => {\n        if (match.params.id && dealChange) {\n            if (!company) {\n                setCompanyMessage('Please select a company');\n                setEditRequest(true);\n                return\n            } else {\n                setCompanyMessage('')\n            }\n            const deal = {\n                company: company,\n                client: client,\n                title: title,\n                type: type,\n                status: status,\n                contacts: {\n                    primary: leader.length ? leader[0].id : null,\n                    secondary: coLeaders.length ? coLeaders.map(x => x.id) : [],\n                },\n                probability: probability,\n                description: description,\n                proposalDate: proposalDate,\n                presentationDate: presentationDate,\n                wonDate: wonDate,\n                startDate: startDate,\n                duration: duration,\n                mainPractice: mainPractice,\n                othersPractices: othersPractices,\n                location: location,\n                staffingRequest: {\n                    instructions: srInstruction,\n                    requestStatus: srStatus,\n                    ressources: srRessources\n                },\n                staffingDecision: {\n                    instructions: sdInstructions,\n                    staffingStatus: sdStatus,\n                    staff: sdStaff.map(staff => ({\n                        responsability: staff.responsability,\n                        idConsultant: staff.idConsultant._id,\n                        priority: staff.priority,\n                        information: staff.information\n                    }))\n                },\n                comments: comments,\n                othersContacts: othersContacts\n            }\n            dispatch(updateDeal(match.params.id, deal));\n            setDealChange(false);\n            setNewComment('');\n        }\n\n    }, [match, dispatch, userInfo, dealChange, company, type, client, title, status, probability, description, proposalDate, presentationDate,\n        wonDate, startDate, duration, mainPractice, othersPractices, location, srInstruction, srStatus, srRessources, sdInstructions,\n        sdStatus, sdStaff, leader, coLeaders, comments, othersContacts\n    ]);\n\n    const removeStaffHandler = (id) => {\n        let tampon = new Array(...sdStaff);\n        tampon = tampon.filter(consultant => consultant.idConsultant._id !== id);\n        setSdStaff(tampon);\n        setDealChange(true);\n    }\n\n    const addStaffHandler = (consultant, responsability, priority, information) => {\n\n        let tampon = new Array(...sdStaff);\n\n        // Rule if consultant already added in staff\n        if (sdStaff.map(x => x.idConsultant._id).includes(consultant._id)) {\n            tampon = tampon.filter(x => x.idConsultant._id !== consultant._id);\n        }\n\n        tampon.push({\n            idConsultant: {\n                _id: consultant._id,\n                name: consultant.name,\n            },\n            responsability: responsability,\n            priority: priority,\n            information: information\n        });\n\n        //tampon.sort((a,b) => a.priority - b.priority)\n\n        setSdStaff(tampon);\n        setDealChange(true);\n    }\n\n    const prepareDeal = () => {\n        return {\n            company: company,\n            client: client,\n            title: title,\n            contacts: {\n                primary: leader.length ? leader[0].id : null,\n                secondary: coLeaders.length ? coLeaders.map(x => x.id) : [],\n            },\n            type: type,\n            status: status,\n            probability: probability,\n            description: description,\n            proposalDate: proposalDate,\n            presentationDate: presentationDate,\n            wonDate: wonDate,\n            startDate: startDate,\n            duration: duration,\n            mainPractice: mainPractice,\n            othersPractices: othersPractices,\n            location: location,\n            staffingRequest: {\n                instructions: srInstruction,\n                requestStatus: srStatus,\n                ressources: srRessources\n            },\n            staffingDecision: {\n                instructions: sdInstructions,\n                staffingStatus: sdStatus,\n                staff: sdStaff.map(staff => ({\n                    responsability: staff.responsability,\n                    idConsultant: staff.idConsultant._id,\n                    priority: staff.priority,\n                    information: staff.information\n                }))\n            },\n            comments: comments,\n            othersContacts: othersContacts\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!company) {\n            setCompanyMessage('Please select a company');\n            return;\n        } else {\n            setCompanyMessage(null)\n        }\n        const deal = prepareDeal();\n\n        if (match.params.id) {\n            dispatch(updateDeal(match.params.id, deal));\n        } else {\n            dispatch(createDeal(deal));\n        }\n    };\n\n    const addCommentHandler = () => {\n        const newComments = comments.slice();\n        newComments.push({\n            message: newComment,\n            sender: {\n                _id: userInfo._id,\n                name: userInfo.name\n            },\n            date: new Date(Date.now()).toISOString()\n        });\n        newComments.sort((a, b) => (Date.parse(b.date) - Date.parse(a.date)));\n        setComments(newComments);\n        setDealChange(true);\n    };\n\n    const deleteCommentHandler = (value) => {\n        let newComments = comments.slice();\n        newComments = newComments.filter(x => x.date !== value);\n        setComments(newComments);\n        setDealChange(true);\n    };\n\n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    const updateStatusHandler = (value) => {\n        if (value === 'Won') {\n            setWonDate(new Date(Date.now()));\n        }\n        else {\n            setWonDate('');\n        }\n        setStatus(value);\n    };\n\n    const srStatusHandler = (value) => {\n        setSrStatus(value);\n        setDealChange(true);\n    };\n\n    return (\n        <>\n            <Meta />\n            {modalWindowShow && (\n                <StaffAConsultant\n                    show={modalWindowShow}\n                    onHide={() => setModalWindowShow(false)}\n                    consultant={sdConsultant}\n                    loadingData={loadingSdConsultantData}\n                    mode='staffing'\n                    addStaffHandler={addStaffHandler}\n                    history={history}\n                />\n            )}\n\n            <h1>Staffing request</h1>\n            <Form onSubmit={submitHandler}>\n                <Row className='mt-3'>\n                    <Col xs={6} md={2}>\n                        {match.params.id && (\n                            <Button\n                                type='button'\n                                variant='primary'\n                                onClick={() => {\n                                    history.go(-1);\n                                    dispatch({ type: DEAL_UPDATE_RESET })\n                                }}\n                                block\n                            >Go Back</Button>\n                        )}\n                    </Col>\n                    <Col xs={0} md={8}></Col>\n                    <Col xs={6} md={2}>\n                        {match.params.id && loadingUpdate && <Loader />}\n                        {match.params.id && !loadingUpdate && (\n                            <>\n                                <Button\n                                    onClick={() => {\n                                        setEditRequest(!editRequest);\n                                        editRequest && setDealChange(true);\n                                    }}\n                                    variant={editRequest ? 'warning' : 'light'}\n                                    block\n                                >{editRequest ? (\n                                    <><span>Save  </span><i className=\"far fa-check-circle\"></i></>\n                                    ) : (\n                                    <><span>Edit  </span><i className=\"far fa-edit\"></i></>\n                                )}\n                                </Button>\n                                {errorUpdate && (<Message variant='danger'>{errorUpdate}</Message>)}\n                            </>\n                        )}\n                    </Col>\n                </Row>\n                {error && (<Row><Col><Message variant='danger'>{error}</Message></Col></Row>)}\n\n                <Row className='mt-2'>\n\n                    <Col xs={12} md={4}>\n\n                        <ListGroup.Item>\n                            <TextComponent\n                                label='Title'\n                                id=\"title\"\n                                placeholder='Staffing request object'\n                                value={title}\n                                onChange={setTitle}\n                                required={true}\n                                editRequest={editRequest}\n                                formInline={false}\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n\n                            <Form.Group controlId='select-company' className='mb-0'>\n                                <Form.Label as='h5'>Company *</Form.Label>\n                                <SelectCompany\n                                    company={{ value: company, label: company }}\n                                    setCompany={setCompany}\n                                    editRequest={editRequest}\n                                />\n                            </Form.Group>\n\n                            {companyMessage && <Message variant='danger'>{companyMessage}</Message>}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <TextComponent\n                                label='Client contact'\n                                id=\"contact-client\"\n                                placeholder='Client contact'\n                                value={client}\n                                onChange={setClient}\n                                required={false}\n                                editRequest={editRequest}\n                                formInline={false}\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectComponent\n                                editRequest={editRequest}\n                                id=\"business-type\"\n                                label='Type of business'\n                                value={type}\n                                onChange={setType}\n                                required={true}\n                                options={\n                                    <>\n                                        <option value=''>--Select--</option>\n                                        {TYPE_BUSINESS.map(type => (\n                                            <option\n                                                key={type.name}\n                                                value={type.name}\n                                            >{type.name}</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectComponent\n                                editRequest={editRequest}\n                                id=\"deal-status\"\n                                label='Status'\n                                value={status}\n                                onChange={updateStatusHandler}\n                                required={true}\n                                options={\n                                    <>\n                                        <option value=''>--Select--</option>\n                                        {DEAL_STATUS.map(status => (\n                                            <option\n                                                key={status.name}\n                                                value={status.name}\n                                            >{status.name}</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectComponent\n                                editRequest={editRequest}\n                                id=\"probability\"\n                                label='Probability (%)'\n                                value={probability}\n                                onChange={setProbability}\n                                required={true}\n                                options={\n                                    <>\n                                        <option value=''>--Select--</option>\n                                        {DEAL_PROBABILITY.map(prob => (\n                                            <option\n                                                key={prob.name}\n                                                value={prob.name}\n                                            >{prob.name} %</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <TextComponent\n                                label='Location'\n                                id=\"location\"\n                                placeholder='Location'\n                                value={location}\n                                onChange={setLocation}\n                                required={false}\n                                editRequest={editRequest}\n                                formInline={false}\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectComponent\n                                editRequest={editRequest}\n                                id=\"main-practice\"\n                                label='Main practice'\n                                value={mainPractice}\n                                onChange={setMainPractice}\n                                required={true}\n                                options={\n                                    <>\n                                        <option value=''>--Select--</option>\n                                        {practiceList && practiceList.map((practice, val) => (\n                                            <option\n                                                value={practice}\n                                                key={val}\n                                            >{practice}</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectMultipleComponent\n                                label=\"Others Practices\"\n                                id=\"'others-practices'\"\n                                editRequest={editRequest}\n                                required={false}\n                                value={othersPractices}\n                                onChange={setOthersPractices}\n                                options={\n                                    practiceList && practiceList.map((practice, val) => (\n                                        (practice !== mainPractice) && (\n                                            <option\n                                                value={practice}\n                                                key={val}\n                                            >{practice}</option>\n                                        )\n                                    ))\n                                }\n                            />\n                        </ListGroup.Item>\n\n                    </Col>\n\n                    <Col xs={12} md={8}>\n\n                        <ListGroup.Item>\n                            <Row className='align-items-start'>\n                                <Col xs={12} md={4}>\n\n                                    <Form.Group controlId='select-leader' className='mb-0'>\n                                        <Form.Label as='h5'>Leader</Form.Label>\n                                        <SelectInput\n                                            options={leaderslist ? leaderslist.map(consultant => ({ value: consultant._id, label: consultant.name })) : []}\n                                            value={leader.length ? { value: leader[0].id, label: leader[0].value } : {}}\n                                            setValue={setLeader}\n                                            multi={false}\n                                            disabled={!editRequest}\n                                        />\n                                    </Form.Group>\n\n                                </Col>\n\n                                <Col xs={12} md={4}>\n\n                                    <Form.Group controlId='others' className='mb-0'>\n                                        <Form.Label as='h5'>Co-Leader(s)</Form.Label>\n                                        <SelectInput\n                                            options={leaderslist ? leaderslist.map(consultant => ({ value: consultant._id, label: consultant.name })) : []}\n                                            value={coLeaders ? coLeaders.map(x => ({ value: x.id, label: x.value })) : []}\n                                            setValue={setCoLeaders}\n                                            multi={true}\n                                            disabled={!editRequest}\n                                        />\n                                    </Form.Group>\n                                </Col>\n\n                                <Col xs={12} md={4}>\n\n                                    <TextComponent\n                                        label=\"Others contacts\"\n                                        id=\"others-contacts\"\n                                        placeholder=\"email1@mail.com;email2@mail.com\"\n                                        value={othersContacts}\n                                        onChange={setOthersContacts}\n                                        required={false}\n                                        editRequest={editRequest}\n                                        formInline={false}\n                                    />\n                                </Col>\n\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <TextAreaComponent\n                                label=\"Description\"\n                                id='staffing-description'\n                                editRequest={editRequest}\n                                required={true}\n                                placeholder=\"Please describe the mission context\"\n                                value={description}\n                                onChange={setDescription}\n                                rows={3}\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h5>Sheduling</h5>\n                            <Row className='align-items-end'>\n                                <Col>\n                                    <DateComponent\n                                        label='Proposal'\n                                        id=\"proposal-date\"\n                                        placeholder='proposal date'\n                                        value={proposalDate}\n                                        onChange={setProposalDate}\n                                        required={true}\n                                        editMode={editRequest}\n                                    />\n                                </Col>\n\n                                <Col>\n                                    <DateComponent\n                                        label='Presentation'\n                                        id=\"presentation-date\"\n                                        placeholder='presentation date'\n                                        value={presentationDate}\n                                        onChange={setPresentationDate}\n                                        required={true}\n                                        editMode={editRequest}\n                                    />\n                                </Col>\n\n                                <Col>\n                                    <DateComponent\n                                        label='Start'\n                                        id=\"start-date\"\n                                        placeholder='start date'\n                                        value={startDate}\n                                        onChange={setStartDate}\n                                        required={true}\n                                        editMode={editRequest}\n                                    />\n                                </Col>\n\n                                <Col>\n                                    <NumberComponent\n                                        label='duration (month)'\n                                        placeholder='duration'\n                                        min={0}\n                                        step={0.5}\n                                        value={duration}\n                                        onChange={setDuration}\n                                        required={true}\n                                        editRequest={editRequest}\n                                    />\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col xs={12} md={8}>\n                                    <TextAreaComponent\n                                        label=\"Staffing instructions\"\n                                        id='staffing-instructions'\n                                        editRequest={editRequest}\n                                        required={true}\n                                        placeholder=\"Please describe your staffing request\"\n                                        value={srInstruction}\n                                        onChange={setSrInstruction}\n                                        rows={3}\n                                    />\n                                </Col>\n\n                                <Col xs={12} md={4}>\n                                    <SelectComponent\n                                        editRequest={true}\n                                        label=\"Status\"\n                                        id=\"sr-status\"\n                                        value={srStatus}\n                                        onChange={srStatusHandler}\n                                        required={true}\n                                        options={\n                                            <>\n                                                <option value=''>--Select--</option>\n                                                {REQUEST_STATUS.map(({ name }) => (\n                                                    <option\n                                                        key={name}\n                                                        value={name}\n                                                    >{name}</option>\n                                                ))}\n                                            </>\n                                        }\n                                    />\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        {match.params.id && (\n                            <ListGroup.Item>\n                                <h5>Staffing decision</h5>\n                                {sdStaff && [...new Set(sdStaff.map(x => x.priority))].sort().map(priority => (\n                                    <ListGroup.Item key={priority}>\n                                        <Row key={priority}>\n                                            <Col sm={1}>\n                                                <Row className='my-1'><Col>{priority}</Col></Row>\n                                            </Col>\n                                            <Col sm={11}>\n                                                {sdStaff.filter(x => x.priority === priority).map(staff => (\n                                                    <Row key={staff.idConsultant._id} className='my-1'>\n                                                        <Col sm={10}>\n                                                            <OverlayTrigger\n                                                                placement=\"top\"\n                                                                trigger='click'\n                                                                overlay={\n                                                                    <Popover\n                                                                        id='popover-others-staffs'\n                                                                        style={{ 'maxWidth': '40%' }}\n                                                                    >\n                                                                        <Popover.Title id=\"contained-modal-title-vcenter\">\n                                                                            Others staffs\n                                                                        </Popover.Title>\n\n                                                                        <Popover.Content>\n                                                                            <ViewStaffs\n                                                                                history={history}\n                                                                                consultantId={staff.idConsultant._id}\n                                                                                onNavigate={() => ('')}\n                                                                                displayedDeal={match.params.id}\n                                                                            />\n                                                                        </Popover.Content>\n                                                                    </Popover>\n                                                                }\n                                                            >\n                                                                <div><strong>{`${staff.responsability}: `}</strong>{`${formatName(staff.idConsultant.name)}`}<i>{` (${staff.information})`}</i></div>\n                                                            </OverlayTrigger>\n                                                        </Col>\n                                                        <Col sm={2} className='px-0'>\n                                                            <DisplayChildren access='editStaff'>\n                                                                <Button\n                                                                    onClick={() => {\n                                                                        setSdConsultant(staff.idConsultant)\n                                                                        setLoadingSdConsultantData({\n                                                                            information: staff.information,\n                                                                            priority: staff.priority,\n                                                                            responsability: staff.responsability\n                                                                        })\n                                                                        setModalWindowShow(true)\n                                                                    }}\n                                                                    variant='secondary'\n                                                                    className='text-center mx-1'\n                                                                    size='sm'\n                                                                ><i className=\"fas fa-edit\"></i></Button>\n                                                            </DisplayChildren>\n                                                            <DisplayChildren access='editStaff'>\n                                                                <Button\n                                                                    onClick={() => removeStaffHandler(staff.idConsultant._id)}\n                                                                    variant='danger'\n                                                                    className='text-center mx-1'\n                                                                    size='sm'\n                                                                ><i className=\"fas fa-times\"></i></Button>\n                                                            </DisplayChildren>\n                                                        </Col>\n                                                    </Row>\n                                                ))}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup.Item>\n                        )}\n\n                        {!match.params.id && (\n                            <Row className='mt-3'>\n                                <Col className='text-right'>\n                                    <Button\n                                        type='submit'\n                                        variant='primary'\n                                    >{(loading) ? <Loader /> : 'Submit staffing'}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        )}\n\n                        {dealToEdit && match.params.id && (\n                            <ListGroup.Item>\n                                <Row className='my-1'>\n                                    <Col>\n                                        <strong>Last update at: </strong>{dealToEdit.updatedAt.substring(0, 19).replace('T', ' ')}\n                                        <Row className='align-items-center my-3'>\n                                            <Col xs={11} >\n                                                <Form.Group controlId='comment' className='mb-0'>\n                                                    <Form.Control\n                                                        type='text'\n                                                        placeholder='Add a comment'\n                                                        value={newComment ? newComment : ''}\n                                                        onChange={(e) => setNewComment(e.target.value)}\n                                                        onKeyUp={(e) => (e.key === 'Enter') && addCommentHandler()}\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={1}>\n                                                <Button\n                                                    variant='primary'\n                                                    onClick={() => addCommentHandler()}\n                                                    size='sm'\n                                                ><i className=\"fas fa-plus\"></i></Button>\n                                            </Col>\n                                        </Row>\n                                        <ListGroup className='py-3'>\n                                            {comments && comments.map((comment, index) => (\n                                                <ListGroup.Item\n                                                    key={index}\n                                                    className='mb-0 py-2'\n                                                >\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                value={comment.message}\n                                                                readOnly\n                                                            />\n                                                            {/*comment.message*/}</Col>\n                                                    </Row>\n                                                    <p style={{ textAlign: 'right', marginBottom: '0' }}><i>By {comment.sender.name} the {comment.date.substring(0, 19).replace('T', ' at ')}  {comment.sender._id === userInfo._id && (\n                                                        <Button\n                                                            size='sm'\n                                                            variant='ligth'\n                                                            className='text-danger mx-0'\n                                                            //style={{ color: 'red' }}\n                                                            onClick={() => deleteCommentHandler(comment.date)}\n                                                        >--delete--</Button>\n                                                    )}</i></p>\n                                                </ListGroup.Item>\n                                            ))}\n                                        </ListGroup>\n                                        <strong>Created at: </strong>{dealToEdit.createdAt.substring(0, 19).replace('T', ' ')} <br />\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        )}\n\n                    </Col>\n                </Row>\n            </Form>\n\n            {match.params.id && (\n                <DropDownTitleContainer title='Availabilities' close={false}>\n                    <ConsoDispo\n                        start={start}\n                        end={end}\n                        mode='staffing'\n                        addStaffHandler={addStaffHandler}\n                        history={history}\n                    />\n                </DropDownTitleContainer>\n            )}\n        </>\n    )\n}\n\nexport default StaffingEditScreen;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { createSkills, deleteSkill, getAllSkills } from '../actions/skillActions';\nimport { getAllConsultantSkills } from '../actions/consultantActions';\n\nconst ManageSkillsScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const category = ''; // to implement if you want to search on specific category\n    const [name, setName] = useState('');\n\n    // local states to add a category\n    const [skillCategoryList, setSkillCategoryList] = useState([]);\n    const [skillCategory, setSkillCategory] = useState('default');\n    const [skillName, setSkillName] = useState('');\n    const [skillDescription, setSkillDescription] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const skillList = useSelector(state => state.skillList);\n    const { loading, skills, pages, page, count } = skillList;\n\n    const skillDelete = useSelector(state => state.skillDelete);\n    const { error, success } = skillDelete;\n\n    const skillCreate = useSelector(state => state.skillCreate);\n    const { loading: loadingCreateSkill, error: errorCreateSkill, success: successCreateSkill } = skillCreate;\n\n    const consultantAllSkills = useSelector(state => state.consultantAllSkills);\n    const { loading: loadingSkills, skills: skillsList } = consultantAllSkills;\n\n    useEffect(() => {\n        if (!userInfo || !['admin', 'coordinator'].includes(userInfo.profil.profil)) {\n            history.push('/login');\n        } else {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    }, [dispatch, history, userInfo, category, name, pageNumber, pageSize]);\n\n    useEffect(() => {\n        if (success) {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    // eslint-disable-next-line\n    }, [dispatch, success]);\n\n    useEffect(() => {\n        if (successCreateSkill) {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    // eslint-disable-next-line\n    }, [dispatch, successCreateSkill]);\n\n    useEffect(() => {\n        if (!skillsList) {\n            if (!loadingSkills) {\n                dispatch(getAllConsultantSkills());\n            }\n        } else {\n            let categoryList = skillsList.map(x => x.category);\n            categoryList = [...new Set(categoryList)];\n            setSkillCategoryList(categoryList);\n        }\n    }, [dispatch, skillsList, loadingSkills]);\n\n\n    const handlerAddSkill = (e) => {\n        e.preventDefault();\n        const skillToCreate = {\n            category: skillCategory,\n            name: skillName,\n            description: skillDescription\n        };\n        dispatch(createSkills(skillToCreate));\n    };\n\n    const onClickDeleteHandler = (skill) => {\n        if (window.confirm(`Are you sure to delete skill: ${skill.name} ?`)) {\n            dispatch(deleteSkill(skill._id));\n        }\n    }\n\n    return (\n        <>\n            <DropDownTitleContainer title='Create Skills' close={true}>\n                <ListGroup.Item>\n                <Row className='mt-3'>\n                    <Col>\n                        <Form onSubmit={handlerAddSkill}>\n                            <Form.Row>\n                                <Col md={3}>\n                                    <Form.Group controlId='skillCategory'>\n                                        <Form.Control\n                                            as='select'\n                                            value={skillCategory ? skillCategory : 'default'}\n                                            onChange={(e) => setSkillCategory(e.target.value)}\n                                            required\n                                        >\n                                            <option value='default'>Please Select</option>\n                                            {skillCategoryList && (\n                                                skillCategoryList.map((x, val) => (\n                                                    <option\n                                                        value={x}\n                                                        key={val}\n                                                        onChange={(e) => { setSkillCategory(e.target.value) }}\n                                                    >{x}</option>\n                                                )))}\n\n\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={3}>\n                                    <Form.Group controlId='name-skill'>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Skill'\n                                            value={skillName && skillName}\n                                            onChange={(e) => setSkillName(e.target.value)}\n                                            disabled={skillCategory === 'default'}\n                                            required\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group controlId='description-skill'>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Skill description'\n                                            value={skillDescription && skillDescription}\n                                            onChange={(e) => setSkillDescription(e.target.value)}\n                                            disabled={skillCategory === 'default'}\n                                            required\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col className='text-right'>\n                                    <Button type='submit' variant='primary' block>\n                                        {loadingCreateSkill ? <Loader /> : 'Add'}\n                                    </Button>\n                                </Col>\n                            </Form.Row>\n                            {errorCreateSkill && <Message variant='danger'>{errorCreateSkill}</Message>}\n                        </Form>\n\n                    </Col>\n                </Row>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n            \n            <DropDownTitleContainer title='Search Skills' close={false}>\n                <ListGroup.Item>\n                <Row className='mt-3'>\n\n                    <Col xs={6} md={2}>\n                        <InputGroup>\n                            <FormControl\n                                type='text'\n                                className=\"mb-3\"\n                                placeholder='Search skill'\n                                value={name && name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></FormControl>\n                        </InputGroup>\n                    </Col>\n\n                    <Col xs={6} md={8}>\n                        <Form.Control\n                            plaintext\n                            readOnly\n                            value={count ? `${count} skills found` : '0 skills found'} />\n                    </Col>\n\n                    <Col xs={6} md={2}>\n                        <InputGroup>\n                            <FormControl\n                                as='select'\n                                id='number-c'\n                                className=\"mb-3\"\n                                value={pageSize && pageSize}\n                                onChange={(e) => setPageSize(e.target.value)}\n                            >\n                                {[5, 10, 15, 20, 50].map(x => (\n                                    <option\n                                        key={x}\n                                        value={x}\n                                    >{x} / page</option>\n                                ))}\n                            </FormControl>\n                        </InputGroup>\n                    </Col>\n\n                </Row>\n\n                {skills && skills.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                    loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n\n                        <Table responsive hover striped>\n                            <thead>\n                                <tr className='table-primary'>\n                                    <th className='align-middle text-light'>Category</th>\n                                    <th className='align-middle text-light'>Skill</th>\n                                    <th className='align-middle text-light'>Description</th>\n                                    <th className='align-middle text-light'></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {skills && skills.map((skill) => (\n                                    <tr key={skill._id}>\n                                        <td className='align-middle'>{skill.category}</td>\n                                        <td className='align-middle'>{skill.name}</td>\n                                        <td className='align-middle'>{skill.description}</td>\n                                        <td className='align-middle'>\n                                            <Button \n                                                variant='danger' \n                                                onClick={() => onClickDeleteHandler(skill)}\n                                                size='sm'\n                                            ><i className=\"fas fa-times\"></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n\n                    )}\n\n                <Pagination>\n                    <Pagination.Prev\n                        onClick={() => setPageNumber(page - 1)}\n                        disabled={page === 1}\n                    />\n                    {[...Array(pages).keys()].map(x => (\n                        [0, 1, pages - 2, pages - 1].includes(x) ? (\n                        <Pagination.Item\n                            key={x + 1}\n                            active={x + 1 === page}\n                            onClick={() => {\n                                dispatch(getAllSkills(category, name, x + 1, pageSize));\n                                setPageNumber(x + 1);\n                            }}\n                        >{x + 1}</Pagination.Item>\n                        ) : (pages > 4 && x === 2) && (\n                            <Pagination.Ellipsis key={x + 1} />\n                        )\n                    ))}\n                    <Pagination.Next\n                        onClick={() => setPageNumber(page + 1)}\n                        disabled={page === pages}\n                    />\n                </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageSkillsScreen\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Form from 'react-bootstrap/Form';\nimport { pxxUploadFiles, updatePxxFiles } from '../actions/pxxActions';\n\nconst FlowImportPxx = (props) => {\n\n    const dispatch = useDispatch();\n\n    const [step, setStep] = useState(0);\n\n    const pxxUploadFile = useSelector(state => state.pxxUploadFile);\n    const { loading:loadingUpload, error:errorUpload, path } = pxxUploadFile;\n\n    const updatePxx = useSelector(state => state.updatePxx);\n    const { loading: loadingUpdate, error: errorUpdate, message } = updatePxx;\n\n    const onChangeHandler = (e) => {\n        //const data = new FormData();\n        const files = [];\n        for (let incr = 0; incr < e.target.files.length; incr++) {\n            const file = e.target.files[incr];\n            if(file.name.match(/^p[A-Za-z]+-[0-9]{2}.xlsb|^p[A-Za-z]+-arrivees.xlsb/)) {\n                const data = new FormData();\n                data.append('file', file);\n                files.push(data);\n            }\n        }\n        dispatch(pxxUploadFiles(files));\n    }\n\n    const startImportData = () => {\n        if(path) {\n            //dispatch(updatePxxFiles(path));\n            dispatch(updatePxxFiles(path));\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            //style={{'minHeight': '80vh'}}\n        >\n            <Modal.Header closeButton>\n                <Row className='align-items-center'>\n                    <Col className='text-center'>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Import Pxx from Pxx directory\n                        </Modal.Title>\n                    </Col>\n                </Row>\n            </Modal.Header>\n            \n            <Modal.Body>\n                <Row className='mb-3'>\n                    <Col><Button className={step >= 0 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(0)} variant='ligth' disabled={step <0}><strong>1-Guidelines</strong></Button></Col>\n                    <Col><Button className={step >= 1 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(1)} variant='ligth' disabled={step <1}><strong>2-Upload in App</strong></Button></Col>\n                    <Col><Button className={step >= 2 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(2)} variant='ligth' disabled={step <2}><strong>3-Start update</strong></Button></Col>\n                    <Col><Button className={step >= 3 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(3)} variant='ligth' disabled={step <3}><strong>4-Result</strong></Button></Col>\n                </Row>\n                \n                <Row className='align-items-center'>\n                    \n                    <Col>\n                    {step === 0 && (\n                        <Row>\n                            <Col>\n                                <h4>Process to upload pxx and update availabilities</h4>\n                                    <p>In the next steps you will be invit to</p>\n                                    <ul>\n                                            <li>Select your Pxx storage directory</li>\n                                            <li>Wait untill all Pxx files are uploaded</li>\n                                            <li>Start the backend calculation to update availabilities</li>\n                                            <li>Check the results and if asked proceed to corrections</li>\n                                        </ul>  \n                            </Col>\n                        </Row>\n                    )}\n                    {step === 1 && (\n                        <Row className='align-items-center'>\n                            <Col className='text-center'>\n                                <h4>Upload your file here</h4>\n                                {loadingUpload ? <Loader /> : (\n                                    <input \n                                        className='my-3' \n                                        type='file' \n                                        name='file' \n                                        onChange={onChangeHandler} \n                                        webkitdirectory='true'\n                                        directory='true'\n                                        multiple\n                                    />\n                                )}\n                                {errorUpload && <Message variant='danger'>{errorUpload}</Message>}\n                            </Col>\n                        </Row>\n                    )}\n                    {step === 2 && (\n                        path ? (\n                            <Row>\n                                <Col className='text-center'>\n                                    <h4>Do you want to update availabilities ?</h4>\n                                    {loadingUpdate ? <Loader />  : (\n                                        <Button variant='primary' className='m-3' onClick={startImportData}>\n                                            Update\n                                        </Button>\n                                    )}\n                                    <p>Process could take a few minute</p>\n                                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                                </Col>\n                            </Row>\n                        ) : (\n                            <Row><Col>Something wrong retry step 2</Col></Row>\n                        )\n                    )}\n                    {step === 3 && ( \n                        <Form.Control\n                            as='textarea' \n                            rows={10}\n                            value={message && message}\n                            readOnly\n                            //plaintext\n                        />\n                    )}\n                    </Col>\n                </Row>\n                \n                    \n            </Modal.Body>\n            <Modal.Footer>\n                {step === 3 && (\n                    <Button onClick={props.onHide}>Close</Button>\n                )}\n                {step < 3 && (\n                    <Button\n                        variant='success'\n                        onClick={() => (step + 1 <= 3) && setStep(step + 1)}\n                        disabled={step === 3 || (step === 1 && !path) || (step === 2 && !message)}\n                    >Next</Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default FlowImportPxx;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message';\nimport DisplayChildren from '../components/DisplayChildren';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport { getAllPxx, pxxUpdateALine } from '../actions/pxxActions';\nimport ReactExport from \"react-export-excel\";\nimport FlowImportPxx from '../components/FlowImportPxx';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst PxxDetailsScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const monthId = match.params.id ;\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n    const [exportExcel, setExportExcel] = useState('');\n\n    const [importData, setImportData] = useState([]);\n\n    const [progress, setProgress] = useState(0);\n    const [massImport, setMassImport] = useState(false);\n    const [errorImportMessage, setErrorImportMessage] = useState([]);\n    const [messsagesImportSuccess, setMessagesImportSuccess] = useState(0);\n    const [messsagesImportError, setMessagesImportError] = useState(0);\n    const [totalToImport, setTotalToImport] = useState(0);\n\n    const [showImportPxx, setShowImportPxx] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxAllList = useSelector(state  => state.pxxAllList);\n    const {loading, pxxs, pages, page, count} = pxxAllList;\n\n    const pxxImportLine = useSelector(state  => state.pxxImportLine);\n    const {loading: loadingImportLine, error: errorImportLine, success: successImportLine, updatedLine} = pxxImportLine;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            if (!massImport) {\n                dispatch(getAllPxx(userInfo.consultantProfil.practice, monthId, keyword, pageSize, pageNumber));\n            }\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, monthId, keyword, pageNumber, pageSize, massImport]);\n\n    useEffect(() => {\n        if (pxxs) {\n            const exportExcelData = pxxs.map((pxx) => ({\n                'CONSULTANT': pxx.name.name,\n                'MATRICULE': pxx.name.matricule,\n                'PRACTICE': pxx.name.practice,\n                'CDM_MATRICULE': pxx.name.cdmId && pxx.name.cdmId.matricule,\n                'CDM_NAME': pxx.name.cdmId && pxx.name.cdmId.name,\n                'VALUED': pxx.name.valued ? pxx.name.valued.substring(0,10) : '',\n                'ARRIVAL': pxx.name.arrival ? pxx.name.arrival.substring(0,10) : '',\n                'LEAVING': pxx.name.leaving ? pxx.name.leaving.substring(0,10) : '',\n                'MONTH': pxx.month.name,\n                'PROD': pxx.prodDay,\n                'NOT_PROD': pxx.notProdDay,\n                'HOLIDAYS': pxx.leavingDay,\n                'AVAILABLE': pxx.availableDay\n            }));\n            setExportExcel(exportExcelData);\n        }\n    }, [pxxs, setExportExcel]);\n\n\n    const handlerImportAllPxx = () => {\n        setProgress(0);\n        setMassImport(true);\n    };\n    \n    const handlerImportData = (lineToImport) => {\n        const newImportData = importData.slice();\n        for (let incr = 0 ; incr < newImportData.length; incr++){\n            if(newImportData[incr].MATRICULE === lineToImport.MATRICULE){\n                newImportData[incr].status = 'loading'\n            }\n        }\n        setImportData(newImportData);\n        dispatch(pxxUpdateALine(lineToImport));\n    }\n\n    useEffect(() => {\n        if(massImport) {\n            if(importData.length > 0 && importData[progress].status !== 'imported') {\n                //sleep(1000);\n                handlerImportData(importData[progress]);\n            } else {\n                if(progress < importData.length - 1){\n                    setProgress(progress+1);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    },[massImport, progress]);\n\n    useEffect(() => {\n        if(successImportLine) {\n            const newImportData = importData.slice();\n            for (let incr = 0; incr < newImportData.length; incr++) {\n                if (newImportData[incr].MATRICULE === updatedLine.updatedMatricule) {\n                    newImportData[incr].status = 'imported'\n                }\n            }\n            setImportData(newImportData);\n\n            if (massImport){\n                if (progress < importData.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassImport(false);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [successImportLine]);\n\n    useEffect(() => {\n        if(errorImportLine) {\n            const newImportData = importData.slice();\n            for (let incr = 0; incr < newImportData.length; incr++) {\n                if (newImportData[incr].MATRICULE === errorImportLine.message.matricule) {\n                    newImportData[incr].status = 'error';\n                }\n            }\n            setImportData(newImportData);\n            const newErrorMessage = errorImportMessage.slice();\n            newErrorMessage.push({message: errorImportLine.message.display});\n            //console.log(errorImportLine.message.display);\n            setErrorImportMessage(newErrorMessage);\n\n            if (massImport){\n                if (progress < importData.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassImport(false);\n                    setProgress(0);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [errorImportLine]);\n\n    useEffect(() => {\n        setMessagesImportSuccess(importData.filter(x => x.status === 'imported').length);\n        setMessagesImportError(importData.filter(x => x.status === 'error').length);\n        setTotalToImport(importData.length);\n    },[importData, errorImportLine, successImportLine]);\n    \n    return (\n        <>\n            <Meta />\n\n            <FlowImportPxx \n                show={showImportPxx}\n                onHide={() => setShowImportPxx(false)}\n            />\n\n            <Row>\n                <Col className='text-left'>\n                    <Button className='mb-3' onClick={() => history.go(-1)}>Go Back</Button>\n                </Col>\n                <Col className='text-right'>\n                    <DisplayChildren access='updatePxxFromPxx'>\n                        <Button variant='primary' onClick={() => setShowImportPxx(true)}>Update from Pxx folder</Button>\n                    </DisplayChildren>\n                </Col>\n\n            </Row>\n\n\n\n\n            <Row className='align-items-center pt-3'>\n                <Col md={5}>\n                    {`${messsagesImportSuccess} Pxx line imported / ${totalToImport} - ${messsagesImportError} lines with error`}\n                </Col>\n\n                <Col ws={6} md={2} className='text-right'>\n                    {exportExcel && (\n                        <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                            <ExcelSheet data={exportExcel} name=\"pxxsheet\">\n                                <ExcelColumn label=\"MATRICULE\" value=\"MATRICULE\" />\n                                <ExcelColumn label=\"(PRACTICE)\" value=\"PRACTICE\" />\n                                {/* <ExcelColumn label=\"VALUED\" value=\"VALUED\" />\n                                <ExcelColumn label=\"ARRIVAL\" value=\"ARRIVAL\" />\n                                <ExcelColumn label=\"LEAVING\" value=\"LEAVING\" /> */}\n                                <ExcelColumn label=\"MONTH\" value=\"MONTH\" />\n                                <ExcelColumn label=\"PROD\" value=\"PROD\" />\n                                <ExcelColumn label=\"NOT_PROD\" value=\"NOT_PROD\" />\n                                <ExcelColumn label=\"HOLIDAYS\" value=\"HOLIDAYS\" />\n                                <ExcelColumn label=\"(AVAILABLE)\" value=\"AVAILABLE\" />\n                                <ExcelColumn label=\"(CDM_MATRICULE)\" value=\"CDM_MATRICULE\" />\n                                <ExcelColumn label=\"(CDM_NAME)\" value=\"CDM_NAME\" />\n                            </ExcelSheet>\n                        </ExcelFile>\n                    )}\n                </Col>\n\n                <Col md={3} >\n                    <DisplayChildren access='uploadPxx'>\n                        {loadingImportLine ? (\n                            <Loader />\n                        ) : (\n                                <ImportExcelFile setImportData={setImportData} sheets='1' />\n                            )}\n                    </DisplayChildren>\n                </Col>\n\n                \n                <Col md={2} className='text-right'>\n                    <Button\n                        variant='primary'\n                        //className='text-primary'\n                        onClick={() => handlerImportAllPxx()}\n                        disabled={!importData.length > 0}\n                    ><i className=\"fas fa-upload\"></i> {massImport ? <Loader /> : 'Import All Pxx'}</Button>\n                </Col>\n            </Row>\n            <Row className='pt-3'>\n                <Col>\n                    <ProgressBar>\n                        <ProgressBar animated={massImport} now={100* messsagesImportSuccess / totalToImport} variant='primary' />\n                        <ProgressBar animated={massImport} now={100* messsagesImportError / totalToImport} variant='danger' />\n                    </ProgressBar>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    {errorImportMessage && errorImportMessage.map((x, incr) => (\n                        <Message key={incr} variant='warning'>{x.message}</Message>\n                    ))}\n                </Col>\n            </Row>\n\n            <Row className='mt-3'>\n                <Col xs={6} md={4}>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            className=\"mb-3\"\n                            placeholder='Search name'\n                            value={keyword && keyword}\n                            onChange={(e) => setKeyword(e.target.value)}\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col xs={6} md={4}>\n                    <Form.Control\n                        plaintext\n                        readOnly\n                        value={count ? `${count} consultants found` : '0 consultant found'} />\n                </Col>     \n\n                <Col xs={6} md={4}>\n                    <InputGroup>\n                        <FormControl\n                            as='select'\n                            id='number-c'\n                            className=\"mb-3\"\n                            value={pageSize && pageSize}\n                            onChange={(e) => setPageSize(e.target.value)}\n                        >\n                            {['All', 5, 10, 15, 20, 50].map(x => (\n                                <option\n                                    key={x}\n                                    value={(x === 'All' ? 10000 : x)}\n                                >{(x === 'All' ? 'All (export)' : `${x} / page`)}</option>\n                            ))}\n                        </FormControl>\n                    </InputGroup>\n                </Col>\n\n            </Row>\n\n            {loading && <Loader />}\n\n            <Table responsive hover striped>\n                <thead>\n                    <tr className='table-primary'>\n                        <th className='align-middle text-light'>User name</th>\n                        <th className='align-middle text-light'>Matricule</th>\n                        <th className='align-middle text-light text-center'>Practice</th>\n                        <th className='align-middle text-light text-center'>CDM</th>\n                        <th className='align-middle text-light text-center'>Month</th>\n                        <th className='align-middle text-light text-center'>Arrival</th>\n                        <th className='align-middle text-light text-center'>Leaving</th>\n                        <th className='align-middle text-light text-center'>PROD</th>\n                        <th className='align-middle text-light text-center'>NOT PROD</th>\n                        <th className='align-middle text-light text-center'>HOLIDAYS</th>\n                        <th className='align-middle text-light text-center'>AVAILABLE</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {pxxs && pxxs.map((pxx) => (\n                        <tr key={pxx._id}>\n                            <td className='align-middle'><b>{pxx.name.name && pxx.name.name}</b></td>\n                            <td className='align-middle'><b>{pxx.name.matricule && pxx.name.matricule}</b></td>\n                            <td className='align-middle'>{pxx.name.practice && pxx.name.practice}</td>\n                            <td className='align-middle'><b>{pxx.name.cdmId && pxx.name.cdmId.name}</b></td>\n                            <td className='align-middle text-center'>{pxx.month.name && pxx.month.name}</td>\n                            <td className='align-middle text-center'>{pxx.name.arrival && pxx.name.arrival.toString().substring(0,10)}</td>\n                            <td className='align-middle text-center'>{pxx.name.leaving ? pxx.name.leaving.toString().substring(0,10) : '-'}</td>\n                            <td className='align-middle text-center'>{pxx.prodDay && pxx.prodDay}</td>\n                            <td className='align-middle text-center'>{pxx.notProdDay && pxx.notProdDay}</td>\n                            <td className='align-middle text-center'>{pxx.leavingDay && pxx.leavingDay}</td>\n                            <td className='align-middle text-center'>{pxx.availableDay && pxx.availableDay}</td>\n                            \n                        </tr>\n                    ))} \n                </tbody>\n            </Table>\n\n            <Pagination>\n                <Pagination.Prev\n                    onClick={() => setPageNumber(page - 1)}\n                    disabled={page === 1}\n                />\n                {[...Array(pages).keys()].map(x => (\n                    [0, 1, pages - 2, pages - 1].includes(x) ? (\n                        <Pagination.Item\n                            key={x + 1}\n                            active={x + 1 === page}\n                            onClick={() => {\n                                dispatch(getAllPxx(userInfo.consultantProfil.practice, monthId, keyword, pageSize, x + 1));\n                                setPageNumber(x + 1);\n                            }}\n                        >{x + 1}</Pagination.Item>\n                    ) : (pages > 4 && x === 2) && (\n                        <Pagination.Ellipsis key={x + 1} />\n                    )\n\n                ))}\n                <Pagination.Next\n                    onClick={() => setPageNumber(page + 1)}\n                    disabled={page === pages}\n                />\n            </Pagination>\n\n        </>\n    )\n}\n\nexport default PxxDetailsScreen;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Form from 'react-bootstrap/Form'\nimport { deleteDeal } from '../actions/dealActions';\nimport { DEAL_STATUS, REQUEST_STATUS } from '../constants/dealConstants';\n\nconst DealList = ({ history, data = [], filter }) => {\n\n    const dispatch = useDispatch();\n\n    const onClickDeleteHandler = (deal) => {\n        if (window.confirm(`Are you sure to delete deal: ${deal.title} ?`)) {\n            dispatch(deleteDeal(deal._id));\n        }\n    }\n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    return (\n        <Table responsive hover striped className='mt-3'>\n            <thead>\n                <tr className='table-primary'>\n                    <th className='align-middle text-light'>Title</th>\n                    <th className='align-middle text-light'>Practice</th>\n                    <th className='align-middle text-light'>Contacts</th>\n                    <th className='align-middle text-light'>Company</th>\n                    <th className='align-middle text-light'>Status</th>\n                    <th className='align-middle text-light'>Probability</th>\n                    <th className='align-middle text-light'>Request</th>\n                    <th className='align-middle text-light'>Staff</th>\n                    <th className='align-middle text-light'>Start</th>\n                    <th className='align-middle text-light'></th>\n                    <th className='align-middle text-light'></th>\n                </tr>\n                <tr className='table-ligth'>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-title' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search title'\n                                value={filter.searchTitle && filter.searchTitle}\n                                onChange={(e) => { filter.setSearchTitle(e.target.value) }}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-practice' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search practice'\n                                disabled={true}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-contact' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search contact'\n                                value={filter.searchContact && filter.searchContact}\n                                onChange={(e) => filter.setSearchContact(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-company' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search company'\n                                value={filter.searchCompany && filter.searchCompany}\n                                onChange={(e) => filter.setSearchCompany(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-status' className='mb-0'>\n                            <Form.Control\n                                as='select'\n                                value={filter.searchDealStatus && filter.searchDealStatus}\n                                onChange={(e) => {\n                                    filter.setSearchDealStatus(e.target.value)\n                                    //setUpdate(true)\n                                }}\n                            >\n                                <option value=''>--Select--</option>\n                                {DEAL_STATUS.map(x => (\n                                    <option key={x.name} value={x.name}>{x.name}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-probability' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search probability'\n                                disabled={true}\n                            //value={filter.searchContact && filter.searchContact}\n                            //onChange={(e) => filter.setSearchContact(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-request' className='mb-0'>\n                            <Form.Control\n                                as='select'\n                                value={filter.searchRequestStatus && filter.searchRequestStatus}\n                                onChange={(e) => {\n                                    filter.setSearchRequestStatus(e.target.value)\n                                    //setUpdate(true)\n                                }}\n                            >\n                                <option value=''>--Select--</option>\n                                {REQUEST_STATUS.map(x => (\n                                    <option key={x.name} value={x.name}>{x.name}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-staff' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search staff'\n                                value={filter.searchStaff && filter.searchStaff}\n                                onChange={(e) => filter.setSearchStaff(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-start' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search start'\n                                disabled={true}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark' colSpan={2}>\n                        <Button\n                            variant='ligth'\n                            style={{color: 'grey'}}\n                            onClick={() => {\n                                filter.setSearchTitle('');\n                                filter.setSearchCompany('');\n                                filter.setSearchContact('');\n                                filter.setSearchDealStatus('');\n                                filter.setSearchRequestStatus('');\n                                filter.setSearchStaff('');\n                            }}\n                        ><i className=\"fas fa-minus-circle\"></i>  Reset</Button>\n                    </th>\n                </tr>\n\n            </thead>\n\n            <tbody>\n                {data && data.deals.map((deal) => (\n                    <tr key={deal._id}>\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.description\n                            }</Tooltip>}\n                        >\n                            <td className='align-middle'>{deal.title}</td>\n                        </OverlayTrigger>\n                        <td className='align-middle text-center'>{deal.mainPractice} {deal.othersPractices && deal.othersPractices.length ? (`(${deal.othersPractices.join(', ')})`) : ''}</td>\n                        <td className='align-middle text-center'>{deal.contacts.primary ? formatName(deal.contacts.primary.name) : '-'} {deal.contacts && deal.contacts.secondary && deal.contacts.secondary.length ? ('/ (' + deal.contacts.secondary.map(x => formatName(x.name.toString())).join(', ') + ')') : ''}</td>\n                        <td className='align-middle text-center'>{deal.company}</td>\n                        <td className='align-middle text-center'>{deal.status}</td>\n                        <td className='align-middle text-center'>{deal.probability} %</td>\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.staffingRequest.instructions\n                            }</Tooltip>}\n                        >\n                            <td className='align-middle text-center'>{deal.staffingRequest.requestStatus}</td>\n                        </OverlayTrigger>\n\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.staffingDecision.staff.length > 0 ? (\n                                    deal.staffingDecision.staff.map(x => ({ name: formatName(x.idConsultant.name), responsability: x.responsability, priority: x.priority })).map((x, index) => <div className='text-left' key={index}>{`${x.responsability}: ${x.name} (${x.priority})`}</div>)\n                                ) : ('-')}</Tooltip>\n                            }\n                        >\n                            <td className='align-middle'>{deal.staffingDecision.staff.length > 0 ? 'See' : '-'}</td>\n                        </OverlayTrigger>\n\n                        <td className='align-middle text-center'>{deal.startDate.substring(0, 10)}</td>\n                        <td className='align-middle text-center'>\n                            <Button\n                                variant='ligth'\n                                style={{color:'gray'}}\n                                onClick={() => history.push(`/staffing/${deal._id}`)}\n                                size='md'\n                            ><i className=\"fas fa-edit\"></i>\n                            </Button>\n                        </td>\n                        <td className='align-middle'>\n                            <Button\n                                variant='ligth'\n                                style={{color: 'red'}}\n                                onClick={() => onClickDeleteHandler(deal)}\n                                size='md'\n                            ><i className=\"fas fa-times\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default DealList;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport DealList from '../components/DealList';\nimport DisplayChildren from '../components/DisplayChildren';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { dealsImportInMass, getAllDeals } from '../actions/dealActions';\nimport { FormControl, InputGroup } from 'react-bootstrap';\nimport { DEAL_STATUS, REQUEST_STATUS } from '../constants/dealConstants';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ManageDealsScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n    const [pageSize] = useState('');\n    const [pageNumber] = useState('');\n\n    // search configuration\n    const [searchTitle, setSearchTitle] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).title ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).title : '');\n    const [searchCompany, setSearchCompany] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).company ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).company : '');\n    const [searchContact, setSearchContact] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).contact ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).contact : '');\n    const [searchDealStatus, setSearchDealStatus] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).dealStatus ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).dealStatus : '');\n    const [searchRequestStatus, setSearchRequestStatus] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).requestStatus ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).requestStatus : '');\n    const [searchMyDeals, setSearchMyDeals] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).myDeals ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).myDeals : '');\n    const [searchStaff, setSearchStaff] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).searchStaff ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).searchStaff : '');\n\n    const [updateFilter, setUpdateFilter] = useState(7);\n    const [notUpdateFilter, setNotUpdateFilter] = useState(30);\n    const [newDealFilter, setNewDealFilter] = useState(7);\n    const [wonDealFilter, setWonDealFilter] = useState(7);\n\n    const [changePeriod, setChangePeriod] = useState(false);\n\n    const [tabsFilter] = useState(['Waiting staffing', `Updated (${updateFilter}d)`, `Not updated (${notUpdateFilter}d)`, `New deal (${newDealFilter}d)`, `Won (${wonDealFilter}d)`, 'All']);\n\n    const [defaultTabs, setDefaultTabs] = useState(localStorage.getItem('ManageDealsScreen.defaultTab') ? localStorage.getItem('ManageDealsScreen.defaultTab') : tabsFilter[0])\n\n    const [dataFiltered, setDataFiltered] = useState([]);\n\n    const [update, setUpdate] = useState(true);\n\n    const [exportExcel, setExportExcel] = useState('');\n    const [importData, setImportData] = useState([]);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { error, loading, deals } = dealAllList;\n\n    const dealDelete = useSelector(state => state.dealDelete);\n    const { error: errorDelete, success: successDelete } = dealDelete;\n\n    const dealsImportMass = useSelector(state  => state.dealsImportMass);\n    const {loading: loadingImportMass, success: successImportData} = dealsImportMass;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            const keyword = {\n                title: searchTitle,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: searchMyDeals\n            }\n\n            dispatch(getAllDeals(keyword, pageNumber, pageSize, 'active'));\n            localStorage.setItem('ManageDealsScreen.filter', JSON.stringify({\n                title: searchTitle,\n                company: searchCompany,\n                contact: searchContact,\n                dealStatus: searchDealStatus,\n                requestStatus: searchRequestStatus,\n                searchStaff: searchStaff,\n                myDeals: searchMyDeals,\n            }));\n            setUpdate(false);\n\n        } else {\n            history.push('/login');\n        }\n\n    }, [\n        dispatch, \n        history, \n        userInfo, \n        searchTitle, \n        searchCompany, \n        searchContact, \n        searchDealStatus, \n        searchRequestStatus,\n        searchStaff,\n        pageNumber, \n        pageSize,\n        update,\n        searchMyDeals,\n        successImportData\n    ]);\n\n    useEffect(() => {\n\n        if (deals) {\n\n            const updateTime = new Date(Date.now());\n            updateTime.setUTCDate(updateTime.getUTCDate() - updateFilter);\n\n            const notUpdateTime = new Date(Date.now());\n            notUpdateTime.setUTCDate(notUpdateTime.getUTCDate() - notUpdateFilter);\n\n            const newDealTime = new Date(Date.now());\n            newDealTime.setUTCDate(newDealTime.getUTCDate() - newDealFilter);\n\n            const wonDealTime = new Date(Date.now());\n            wonDealTime.setUTCDate(wonDealTime.getUTCDate() - wonDealFilter);\n\n\n            const filteredData = [];\n\n            for (let incr = 0; incr < tabsFilter.length; incr++) {\n                let dealsFiltered = [];\n\n                switch (tabsFilter[incr]) {\n                    case tabsFilter[0]: // Deals waiting a staff\n                        const needStaff = REQUEST_STATUS.filter(x => x.staff === true);\n                        const toDisplay = DEAL_STATUS.filter(x => x.display === 'onTrack' || x.display === 'win');\n                        //console.log('toDisplay', toDisplay)\n                        dealsFiltered = {\n                            deals: deals.filter(deal => (needStaff.map(x => x.name).includes(deal.staffingRequest.requestStatus) && toDisplay.map(x => x.name).includes(deal.status))),\n                            param: null,\n                            setParam: null\n                        };\n                        break;\n                    case tabsFilter[1]: // Update\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.updatedAt) >= updateTime),\n                            param: updateFilter,\n                            setParam: setUpdateFilter\n                        }\n                        break;\n                    case tabsFilter[2]: // Not Update\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.updatedAt) <= notUpdateTime),\n                            param: notUpdateFilter,\n                            setParam: setNotUpdateFilter\n                        }\n                        break;\n                    case tabsFilter[3]: // newDeal\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.createdAt) >= newDealTime),\n                            param: newDealFilter,\n                            setParam: setNewDealFilter\n                        }\n                        break;\n                    case tabsFilter[4]: // Won\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.wonDate) >= wonDealTime),\n                            param: wonDealFilter,\n                            setParam: setWonDealFilter\n                        }\n                        break;\n                    case tabsFilter[5]: // All >>> mettre une redirection\n                        dealsFiltered = {\n                            deals: deals,\n                            param: null,\n                            setParam: null\n                        }\n                        break;\n                    default:\n                        dealsFiltered = [];\n                }\n                filteredData.push({ filter: tabsFilter[incr], data: dealsFiltered, count: dealsFiltered.deals.length });\n            }\n            setDataFiltered(filteredData);\n        }\n    }, [deals, tabsFilter, newDealFilter, notUpdateFilter, updateFilter, wonDealFilter]);\n\n    useEffect(() => {\n        if (deals) {\n            const exportExcelData = deals.map((deal) => ({\n                'TITLE': deal.title,\n                'COMPANY': deal.company,\n                'PRACTICE': deal.mainPractice,\n                'LEADER': deal.contacts && deal.contacts.primary && deal.contacts.primary.name,\n                'CO-LEADER': deal.contacts && deal.contacts.secondary && deal.contacts.secondary.map(x => x.name).join(''),\n                'OTHERS_PRACTICES': deal.othersPractices && deal.othersPractices.join(','),\n                'STATUS': deal.status,\n                'DESCRIPTION': deal.description,\n                'START': deal.startDate.substring(0,10),\n                'DURATION': deal.duration,\n                'REQUEST_STATUS': deal.staffingRequest.requestStatus,\n                'REQUEST_DETAILS': deal.staffingRequest.instructions,\n                'DECISION': deal.staffingDecision.staff && deal.staffingDecision.staff.map(x => `${x.responsability}: ${x.idConsultant.name} (${x.priority})}`).join('\\n'),\n            }));\n            setExportExcel(exportExcelData);\n        }\n    }, [deals, setExportExcel]);\n\n    useEffect(() => {\n        if(importData.length > 0) {\n            //console.log(importData);\n            dispatch(dealsImportInMass(importData));\n        }\n    },[dispatch, importData]);\n\n    useEffect(() => {\n\n        if (successDelete) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: searchMyDeals\n            }\n            dispatch(getAllDeals(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete]);\n\n    return (\n        <>\n            <Meta />\n\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <DropDownTitleContainer\n                title='Manage Deals'\n                close={false}>\n                \n                <Row className='mt-3'>\n                    <Col xs={0} md={7}></Col>\n                    <Col xs={6} md={3}>\n                        <DisplayChildren access='uploadDeals'>\n                            {loadingImportMass ? (\n                                <Loader />\n                            ) : (\n                                    <ImportExcelFile setImportData={setImportData} />\n                                )}\n                        </DisplayChildren>\n                    </Col>\n\n                    <Col ws={6} md={2}>\n                        {exportExcel && (\n                            <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                <ExcelSheet data={exportExcel} name=\"dealsSheet\">\n                                    <ExcelColumn label=\"TITLE\" value=\"TITLE\" />\n                                    <ExcelColumn label=\"COMPANY\" value=\"COMPANY\" />\n                                    <ExcelColumn label=\"PRACTICE\" value=\"PRACTICE\" />\n                                    <ExcelColumn label=\"LEADER\" value=\"LEADER\" />\n                                    <ExcelColumn label=\"CO-LEADER\" value=\"CO-LEADER\" />\n                                    <ExcelColumn label=\"OTHERS_PRACTICES\" value=\"OTHERS_PRACTICES\" />\n                                    <ExcelColumn label=\"STATUS\" value=\"STATUS\" />\n                                    <ExcelColumn label=\"DESCRIPTION\" value=\"DESCRIPTION\" />\n                                    <ExcelColumn label=\"START\" value=\"START\" />\n                                    <ExcelColumn label=\"DURATION\" value=\"DURATION\" />\n                                    <ExcelColumn label=\"REQUEST_STATUS\" value=\"REQUEST_STATUS\" />\n                                    <ExcelColumn label=\"REQUEST_DETAILS\" value=\"REQUEST_DETAILS\" />\n                                    <ExcelColumn label=\"DECISION\" value=\"DECISION\" />\n                                </ExcelSheet>\n                            </ExcelFile>\n                        )}\n                    </Col>\n                </Row>\n\n                <ListGroup.Item className='p-0 mt-3'>\n                    <Tabs \n                        id=\"uncontrolled-tab-example\" \n                        variant='pills'\n                        activeKey={defaultTabs}\n                        onSelect={(k) => {\n                            setDefaultTabs(k)\n                            localStorage.setItem('ManageDealsScreen.defaultTab', k)\n                        }}\n                    >\n                        {dataFiltered.length > 0 && dataFiltered.map((data, val) => (\n                            <Tab\n                                key={val}\n                                className='mx-3'\n                                eventKey={`${data.filter}`}\n                                \n                                title={\n                                    <Row className='align-text-middle'>\n                                        <span className='ml-3 align-middle'>{data.filter.split(/[0-9]+/i)[0]}</span>\n                                        {changePeriod ? (\n                                            <span>{data.data.param && (\n                                                <InputGroup>\n                                                    <FormControl\n                                                        as='select'\n                                                        value={data.data.param}\n                                                        onChange={(e) => data.data.setParam(e.target.value)}\n                                                    >\n                                                        {[...new Array(30).keys()].map(x => (\n                                                            <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                        ))}\n                                                    </FormControl>\n                                                </InputGroup>\n                                            )}\n                                            </span>) : data.data.param}\n                                        <span>{(data.filter.split(/[0-9]+/i)[1] && data.filter.split(/[0-9]+/i)[1])}</span>\n                                        <span className='mr-3'>{' > ' + data.count}</span>\n                                    </Row>\n                                }\n                            >\n                                <Row className='mt-3'>\n                                    <Col className='text-left'>\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => setChangePeriod(!changePeriod)}\n                                        ><i className=\"fas fa-edit\"></i>  Configure tabs</Button>\n\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => history.push('/admin/deals/history')}\n                                        ><i className=\"fas fa-history\"></i>  History</Button>\n\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => {\n                                                setSearchMyDeals(!searchMyDeals)\n                                                setUpdate(true)\n                                            }}\n                                        >{searchMyDeals ? (\n                                            <div><i className=\"fas fa-backspace\"></i>  Get all deals</div>\n                                        ) : (\n                                                <div><i className=\"fas fa-filter\"></i>  Filter my deals</div>\n                                            )}\n                                        </Button>\n\n                                        <Button \n                                            variant='ligth'\n                                            onClick={() => window.confirm('Soon available')}\n                                        ><i className=\"fas fa-project-diagram\"></i>  Business flows\n                                        </Button>\n\n                                        <DisplayChildren access='sendStaffingDecision'>\n                                            <Button\n                                                variant='ligth'\n                                                className='text-black align-right'\n                                                onClick={() => history.push('/admin/send')}\n                                            ><i className=\"fas fa-envelope\"></i>  Send staffing decisions</Button>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <DealList\n                                    history={history}\n                                    data={data.data}\n                                    filter={{\n                                        searchTitle: searchTitle,\n                                        setSearchTitle: setSearchTitle,\n                                        searchCompany: searchCompany, \n                                        setSearchCompany: setSearchCompany,\n                                        searchContact: searchContact,\n                                        setSearchContact: setSearchContact,\n                                        searchDealStatus: searchDealStatus,\n                                        setSearchDealStatus: setSearchDealStatus,\n                                        searchRequestStatus: searchRequestStatus,\n                                        setSearchRequestStatus: setSearchRequestStatus,\n                                        searchStaff: searchStaff,\n                                        setSearchStaff: setSearchStaff\n                                    }}\n                                />\n                            </Tab>\n                        ))}\n                    </Tabs>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageDealsScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport DealList from '../components/DealList';\nimport Meta from '../components/Meta';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { getAllDeals } from '../actions/dealActions';\nimport ReactExport from \"react-export-excel\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\nconst DealsHistoryScreen = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n    const [pageSize] = useState('');\n    const [pageNumber] = useState('');\n\n    // search configuration\n    const [searchTitle, setSearchTitle] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).title ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).title : '' );\n    const [searchCompany, setSearchCompany] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).company ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).company : '');\n    const [searchContact, setSearchContact] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).contact ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).contact : '');\n    const [searchDealStatus, setSearchDealStatus] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).dealStatus ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).dealStatus : '');\n    const [searchRequestStatus, setSearchRequestStatus] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).requestStatus ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).requestStatus : '');\n    const [searchStaff, setSearchStaff] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).searchStaff ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).searchStaff : '');\n    //const [searchMyDeals, setSearchMyDeals] = useState(localStorage.getItem('DealsHistoryScreen.filter') ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).myDeals : '');\n\n    const [tabsFilter] = useState([...new Array(5).keys()].map(x => new Date(Date.now()).getFullYear() - x));\n\n    const [defaultTabs, setDefaultTabs] = useState(localStorage.getItem('DealsHistoryScreen.defaultTab') ? localStorage.getItem('DealsHistoryScreen.defaultTab') : tabsFilter[0])\n\n    const [dataFiltered, setDataFiltered] = useState([]);\n\n    const [update, setUpdate] = useState(true);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { error, loading, deals } = dealAllList;\n\n    const dealDelete = useSelector(state => state.dealDelete);\n    const { error: errorDelete, success: successDelete } = dealDelete;\n\n    useEffect(() => {\n        if (userInfo) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: false\n            }\n\n            dispatch(getAllDeals(keyword, pageNumber, pageSize, 'all'));\n            localStorage.setItem('DealsHistoryScreen.filter', JSON.stringify({\n                title: searchTitle,\n                company: searchCompany,\n                contact: searchContact,\n                dealStatus: searchDealStatus,\n                requestStatus: searchRequestStatus,\n                searchStaff: searchStaff,\n                //myDeals: searchMyDeals,\n            }));\n            setUpdate(false);\n\n        } else {\n            history.push('/login');\n        }\n\n    }, [\n        dispatch, \n        history, \n        userInfo, \n        searchTitle, \n        searchCompany, \n        searchContact, \n        searchDealStatus, \n        searchRequestStatus, \n        searchStaff,\n        //searchMyDeals,\n        pageNumber, \n        pageSize,\n        update\n    ]);\n\n    useEffect(() => {\n        if (deals) {\n\n            const filteredData = [];\n\n            for (let incr = 0; incr < tabsFilter.length; incr++) {\n                let dealsFiltered = deals.filter( deal => deal.updatedAt.substring(0,4) === tabsFilter[incr].toString());\n                dealsFiltered = {\n                    deals: dealsFiltered,\n                    param: null,\n                    setParam: null,\n                    exportExcel: dealsFiltered.map((deal) => ({\n                        'TITLE': deal.title,\n                        'MAIN_PRACTICE': deal.mainPractice,\n                        'OTHERS_PRACTICES': deal.othersPractices.join(', '),\n                        'LEADER': deal.contacts.primary ? (deal.contacts.primary.name + ' (' + deal.contacts.primary.matricule + ')') : '',\n                        'CO-LEADERS': deal.contacts.secondary ? deal.contacts.secondary.map(x => x.name + ' (' + x.matricule + ')').join(', ')  : '',\n                        'COMPANY': deal.company,\n                        'STATUS': deal.status,\n                        'TYPE': deal.type,\n                        'DESCRIPTION': deal.description,\n                        'PROPOSAL DATE': deal.proposalDate ? deal.proposalDate.substring(0,10) : '',\n                        'PRESENTATION DATE': deal.presentationDate ? deal.presentationDate.substring(0,10) : '',\n                        'START DATE': deal.startDate ? deal.startDate.substring(0,10) : '',\n                        'WON DATE': deal.wonDate ? deal.wonDate.substring(0,10) : '',\n                        'STAFF': deal.staffingDecision.staff ? deal.staffingDecision.staff.map(x => x.responsability + ': ' + x.idConsultant.name + ' (' + x.idConsultant.matricule + ')').join(', ') : '',\n                    }))\n                \n\n                }\n                filteredData.push({ filter: tabsFilter[incr], data: dealsFiltered, count: dealsFiltered.deals.length });\n            }\n            setDataFiltered(filteredData);\n        }\n    }, [deals, tabsFilter]);\n\n    useEffect(() => {\n\n        if (successDelete) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy:false\n            }\n            dispatch(getAllDeals(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete])\n\n    return (\n        <>\n            <Meta />\n\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <DropDownTitleContainer\n                title='Manage Deals'\n                close={false}>\n                <ListGroup.Item className='p-0 mt-3'>\n                    <Tabs \n                        //defaultActiveKey={tabsFilter[0]} \n                        id=\"uncontrolled-tab-example\" \n                        variant='pills'\n                        activeKey={defaultTabs}\n                        onSelect={(k) => {\n                            setDefaultTabs(k)\n                            localStorage.setItem('DealsHistoryScreen.defaultTab', k)\n                        }}\n                    >\n                        {dataFiltered.length > 0 && dataFiltered.map((data, val) => (\n                            <Tab\n                                key={val}\n                                className='mx-3'\n                                eventKey={`${data.filter}`}\n                                title={data.filter + ' (' + data.data.deals.length + ')'}\n                            >\n                                {data.data.deals && (\n                                    <ExcelFile element={<Button variant='ligth' className='mt-3'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                        <ExcelSheet data={data.data.exportExcel} name=\"dealsSheet\">\n                                            <ExcelColumn label=\"TITLE\" value=\"TITLE\" />\n                                            <ExcelColumn label=\"MAIN_PRACTICE\" value=\"MAIN_PRACTICE\" />\n                                            <ExcelColumn label=\"OTHERS_PRACTICES\" value=\"OTHERS_PRACTICES\" />\n                                            <ExcelColumn label=\"LEADER\" value=\"LEADER\" />\n                                            <ExcelColumn label=\"CO-LEADERS\" value=\"CO-LEADERS\" />\n                                            <ExcelColumn label=\"COMPANY\" value=\"COMPANY\" />\n                                            <ExcelColumn label=\"STATUS\" value=\"STATUS\" />\n                                            <ExcelColumn label=\"TYPE\" value=\"TYPE\" />\n                                            <ExcelColumn label=\"DESCRIPTION\" value=\"DESCRIPTION\" />\n                                            <ExcelColumn label=\"PROPOSAL DATE\" value=\"PROPOSAL DATE\" />\n                                            <ExcelColumn label=\"PRESENTATION DATE\" value=\"PRESENTATION DATE\" />\n                                            <ExcelColumn label=\"START DATE\" value=\"START DATE\" />\n                                            <ExcelColumn label=\"WON DATE\" value=\"WON DATE\" />\n                                            <ExcelColumn label=\"STAFF\" value=\"STAFF\" />\n                                        </ExcelSheet>\n                                    </ExcelFile>\n                                )}\n\n                                <DealList\n                                    history={history}\n                                    data={data.data}\n                                    filter={{\n                                        searchTitle: searchTitle,\n                                        setSearchTitle: setSearchTitle,\n                                        searchCompany: searchCompany,\n                                        setSearchCompany: setSearchCompany,\n                                        searchContact: searchContact,\n                                        setSearchContact: setSearchContact,\n                                        searchDealStatus: searchDealStatus,\n                                        setSearchDealStatus: setSearchDealStatus,\n                                        searchRequestStatus: searchRequestStatus,\n                                        setSearchRequestStatus: setSearchRequestStatus,\n                                        searchStaff: searchStaff,\n                                        setSearchStaff: setSearchStaff\n                                    }}\n                                />\n                            </Tab>\n                        ))}\n                    </Tabs>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default DealsHistoryScreen\n","import React, { useState, useEffect } from 'react';\nimport { Form, ListGroup, Col, Row, Tabs, Tab, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ACCESS_DATAS, ACCESS_MODES } from '../constants/accessConstants';\nimport DisplayChildren from '../components/DisplayChildren';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getAllAccess, updateprofilFrontAcessRule } from '../actions/accessActions';\n\nconst AccessEditScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const accessList = useSelector(state => state.accessList);\n    const { loading, error, access } = accessList;\n\n    const accessFrontUpdate = useSelector(state => state.accessFrontUpdate);\n    const { error: errorFrontUpdate } = accessFrontUpdate;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (!access) {\n            dispatch(getAllAccess());\n        }\n    }, [dispatch, access]);\n    \n\n    return (\n        <DisplayChildren access='manageProfils'>\n            {loading && <Loader />}\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorFrontUpdate && <Message variant='danger'>{errorFrontUpdate}</Message>}\n\n            <h1>Manage user profils screen</h1>\n            <Tabs defaultActiveKey={access && access[0].profil} id=\"uncontrolled-tab-example\">\n                {access && access.map((x, incr) => (\n                    <Tab key={incr} eventKey={x.profil} title={x.profil}>\n                        <ProfilDescription data={x} />\n                    </Tab>\n                ))}\n            </Tabs>\n        </DisplayChildren>\n    )\n}\n\nconst ProfilDescription = ({data}) => {\n\n    const categorizeFrontAccess = (frontAccess) => {\n        \n        const categories = [...new Set(frontAccess.map(x => x.category))];\n\n        const categorizedFrontAccess = [];\n        for (let incr = 0; incr < categories.length; incr++) {\n            const filterdData = frontAccess.filter(x => x.category === categories[incr]);\n            categorizedFrontAccess.push({\n                frontAccessRules: filterdData,\n                category: categories[incr],\n            });\n        }\n        return [categorizedFrontAccess, categories]\n    }\n    \n    const [categorizedFrontAccess, categories] = categorizeFrontAccess(data.frontAccess);\n\n\n    return (\n        <ListGroup>\n            {categorizedFrontAccess && categorizedFrontAccess.map((categoryRules, incr) => (\n                <ListGroup.Item key={incr} className='pt-3'>\n                    <CategoryAccess\n                        accessRules={categoryRules.frontAccessRules}\n                        category={categoryRules.category}\n                        categories={categories}\n                        profilId={data._id}\n                    />\n                </ListGroup.Item>\n            ))}\n        </ListGroup>\n    )\n};\n\nconst CategoryAccess = ({ accessRules, category, categories, profilId }) => {\n\n    const params = {\n        categories: categories,\n        modes: ACCESS_MODES,\n        datas: ACCESS_DATAS\n    }\n\n    return (\n        <>\n            <h4>{category && category}</h4>\n            <ListGroup variant='flush'>\n                <ListGroup.Item>\n                    <Row className='py-1 border-bottom bg-primary'>\n                        <Col className='text-white' xs={3}><strong>TECHNICAL ID</strong></Col>\n                        <Col className='text-white' xs={4}><strong>LABEL</strong></Col>\n                        <Col className='text-white' xs={2}><strong>MODE</strong></Col>\n                        <Col className='text-white' xs={2}><strong>ACCESS</strong></Col>\n                        <Col xs={1}><strong></strong></Col>\n                    </Row>\n                </ListGroup.Item>\n            </ListGroup>\n            {accessRules && accessRules.map((item, incr) => (\n                <ListGroup key={incr} variant='flush' className='border-bottom'>\n                    <ListGroup.Item>\n                        <AccessLineEdit\n                            frontAccessItem={item}\n                            params={params}\n                            profilId={profilId}\n                        />\n                    </ListGroup.Item>\n                </ListGroup>\n            ))}\n        </>\n    )\n}\n\nconst AccessLineEdit = ({ frontAccessItem, params, profilId }) => {\n\n    const dispatch = useDispatch()\n\n    const [id] = useState(frontAccessItem.id);\n    const [label, setLabel] = useState(frontAccessItem.label);\n    const [mode, setMode] = useState(frontAccessItem.mode);\n    const [data, setData] = useState(frontAccessItem.data);\n\n    const [loadingState, setLoadingState] = useState(false);\n\n    const accessFrontUpdate = useSelector(state => state.accessFrontUpdate);\n    const { error, success } = accessFrontUpdate;\n\n    useEffect(() => {\n        if(success) {\n            setLoadingState(false)\n        } \n    },[success]);\n\n    useEffect(() => {\n        if(error) {\n            setLoadingState(false)\n        } \n    },[error]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setLoadingState(true);\n        const rule = {\n            id: id,\n            label: label,\n            mode: mode,\n            data: data,\n            profilId: profilId\n        }\n        dispatch(updateprofilFrontAcessRule(rule))\n        console.log('update to implement')\n    }\n\n    return (\n        <Form onSubmit={submitHandler}>\n            <Form.Row>\n                <Col xs={3}>\n                    <Form.Control\n                        type='text'\n                        value={id && id}\n                        plaintext\n                        readOnly\n                    ></Form.Control>\n                </Col>\n\n                <Col xs={4}>\n                    <Form.Control\n                        type='text'\n                        value={label && label}\n                        onChange={(e) => setLabel(e.target.value)}\n                    ></Form.Control>\n                </Col>\n\n                <Col xs={2}>\n                    <Form.Control\n                        as='select'\n                        value={mode && mode}\n                        onChange={(e) => setMode(e.target.value)}\n                    >\n                        <option value=''>--Select--</option>\n                        {params.modes.map((x, incr) => (\n                            <option key={incr} value={x}>{x}</option>\n                        ))}\n                    </Form.Control>\n                </Col>\n\n                <Col xs={2}>\n                    <Form.Control\n                        as='select'\n                        value={data && data}\n                        onChange={(e) => setData(e.target.value)}\n                    >\n                        <option value=''>--Select--</option>\n                        {params.datas.map((x, incr) => (\n                            <option key={incr} value={x}>{x}</option>\n                        ))}\n                    </Form.Control>\n                </Col>\n\n                <Col xs={1}>\n                    <Button variant='ligth' className='text-secondary' type='submit'>\n                        {loadingState ? <Loader /> : <i className=\"fas fa-download\"></i>}\n                    </Button>\n                </Col>\n\n            </Form.Row>\n        </Form>\n    )\n}\n\nexport default AccessEditScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DisplayChildren from '../components/DisplayChildren';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { createAClient, deleteAClient, getAllClients, updateAClient } from '../actions/clientActions';\n\nconst ManageCompaniesScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n\n    const [showAddContact, setShowAddContact] = useState({state:false, companyId:'', companyName:\"\"});\n    const [contactName, setContactName] = useState('');\n    const [contactEmail, setContactEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    const [showModifyName, setShowModifyName] = useState({state:false, companyId:'', companyName:''});\n    const [newCompanyName, setNewCompanyName] = useState('');\n\n    const [showCreateCompany, setShowCreateCompany] = useState({state:false});\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const clientAll = useSelector(state => state.clientAll);\n    const { error, loading, clients: companies, count, page, pages } = clientAll;\n\n    const clientUpdate = useSelector(state => state.clientUpdate);\n    const { error: errorUpdate, success:successUpdate } = clientUpdate;\n\n    const clientDelete = useSelector(state => state.clientDelete);\n    const { error: errorDelete, success:successDelete } = clientDelete;\n\n    const clientCreate = useSelector(state => state.clientCreate);\n    const { error: errorCreate, success:successCreate } = clientCreate;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, pageNumber, pageSize, keyword]);\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successUpdate]);\n\n    useEffect(() => {\n        if (successDelete) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete]);\n\n    useEffect(() => {\n        if (successCreate) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successCreate]);\n\n\n    const addCompanyHandler = (e, newCompanyName, contactName, contactEmail) => {\n        // Add company function\n        e.preventDefault();\n        dispatch(createAClient([{name:newCompanyName, commercialTeam:[{contactName: contactName, contactEmail: contactEmail}]}]));\n        setShowCreateCompany({state:false});\n        setContactEmail('');\n        setContactName('');\n        setNewCompanyName('');\n\n    }\n\n    const modifyCompanyNameHandler = (e, companyId, newCompanyName) => {\n        e.preventDefault();\n        let clientToUpdate = companies.filter(x => x._id === companyId)[0];\n        clientToUpdate.name = newCompanyName;\n        dispatch(updateAClient(clientToUpdate));\n        setShowModifyName({ state: false, companyId: '', companyName: '' });\n    }\n\n    const onClickDeleteHandler = (company) => {\n        if (window.confirm(`Are you sure to delete company: ${company.name} ?`)) {\n            dispatch(deleteAClient(company._id));\n        }\n    }\n\n    const addContactHandler = (e, contactName, contactEmail, companyId) => {\n        e.preventDefault();\n\n        let contactNameConform = false;\n        let contactEmailConform = false;\n        let message = []\n\n        if (contactName) {\n            contactNameConform = true\n        } else {\n            message.push('Thanks to enter a correct Name')\n        }\n\n        const regexEmail = /^(([^<>()[]\\.,;:s@]+(.[^<>()[]\\.,;:s@]+)*)|(.+))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))$/;\n        if (regexEmail.test(contactEmail)) {\n            contactEmailConform = true\n        } else {\n            message.push('Thanks to enter a correct Email address')\n        }\n\n        setMessage(message);\n\n        if (contactEmailConform && contactNameConform) {\n\n            let clientToUpdate = companies.filter(x => x._id === companyId)[0];\n            clientToUpdate.commercialTeam = clientToUpdate.commercialTeam.map(x => ({contactName: x.contactName, contactEmail:x.contactEmail}));\n            clientToUpdate.commercialTeam.push({contactName:contactName, contactEmail:contactEmail});\n\n            dispatch(updateAClient(clientToUpdate));\n\n            setShowAddContact({state:false, companyId:'', companyName:''});\n            setMessage('');\n        }\n    }\n\n    const deleteContactHandler = (contactEmail, companyId) => {\n        if (window.confirm(`Are you sure to delete contact: ${contactEmail} ?`)) {\n            let clientToUpdate = companies.filter(x => (x._id === companyId))[0];\n            clientToUpdate.commercialTeam = clientToUpdate.commercialTeam.map(x => ({contactName: x.contactName, contactEmail:x.contactEmail}));\n            const newContacts = clientToUpdate.commercialTeam.filter(x => x.contactEmail !== contactEmail);\n            clientToUpdate.commercialTeam = newContacts;\n\n            dispatch(updateAClient(clientToUpdate));\n        }\n\n    }\n\n    return (\n        <DisplayChildren access='manageCompanies'>\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            <DropDownTitleContainer title='Manage companies' close={false}>\n                <ListGroup.Item>\n                    <Row>\n\n                        <Col xs={6} md={4}>\n                            <Button className=\"mb-3\" onClick={() => setShowCreateCompany({state:true})}>\n                                <i className=\"fas fa-plus mr-2\"></i>Add\n                            </Button>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search company'\n                                    value={keyword && keyword}\n                                    onChange={(e) => setKeyword(e.target.value)}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={4}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} companies found` : '0 company found'} />\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x} / page</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    {companies && companies.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                        loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n                            <Table responsive hover striped>\n                                <thead>\n                                    <tr className='table-primary'>\n                                        <th className='align-middle text-light'>Company name</th>\n                                        <th className='align-middle text-light'>Commercial contacts</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {companies && companies.map((company) => (\n                                        <tr key={company._id}>\n                                            <td className='align-middle'>\n                                                <Row><Col>{company.name}</Col></Row>\n                                                <Row><Col>\n                                                    <Button\n                                                        variant='ligth'\n                                                        className=\"m-0 p-1 text-primary\"\n                                                        onClick={() => setShowModifyName({ state: true, companyId: company._id, companyName: company.name })}\n                                                    ><i className=\"fas fa-minus\"></i><i>  modify</i>\n                                                    </Button>\n                                                    <Button\n                                                        variant='ligth'\n                                                        className='m-0 p-1 btn text-danger'\n                                                        onClick={() => onClickDeleteHandler(company)}\n                                                    ><i className=\"fas fa-times\"></i><i>  Delete</i>\n                                                    </Button>\n                                                </Col></Row>\n                                            </td>\n                                            <td className='align-middle'>\n                                                <DisplayContact\n                                                    company={company}\n                                                    setShowAddContact={setShowAddContact}\n                                                    deleteContactHandler={deleteContactHandler}\n                                                />\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n\n                        )}\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(getAllClients(keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n\n            <Modal show={showAddContact.state} onHide={() => setShowAddContact({state:false, companyId:'', companyName:\"\"})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`New contact for: ${showAddContact.companyName}`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={contactName && contactName}\n                                onChange={(e) => setContactName(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Email *</Form.Label>\n                            <Form.Control\n                                type='email'\n                                value={contactEmail && contactEmail}\n                                onChange={(e) => setContactEmail(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button type='submit' variant=\"primary\" onClick={(e) => addContactHandler(e, contactName, contactEmail, showAddContact.companyId)} disabled={!contactEmail || !contactName}>Create</Button>\n                    </Form>\n                    {message && <Message variant='danger'>{message}</Message>}\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowAddContact({state:false, companyId:'', companyName:\"\"})}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showModifyName.state} onHide={() => setShowModifyName({state:false, companyId:'', companyName:\"\"})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`Original name: ${showModifyName.companyName}`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>New company name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={newCompanyName ? newCompanyName : showModifyName.companyName}\n                                onChange={(e) => setNewCompanyName(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button \n                            type='submit' \n                            variant=\"primary\" \n                            onClick={(e) => modifyCompanyNameHandler(e, showModifyName.companyId, newCompanyName)} \n                            disabled={!(newCompanyName && (newCompanyName !== showModifyName.companyName))}>Modify</Button>\n                    </Form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        setShowModifyName({ state: false, companyId: '', companyName: \"\" });\n                        setNewCompanyName('')\n                    }}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showCreateCompany.state} onHide={() => setShowCreateCompany({state:false})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`Create a company:`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>New company name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={newCompanyName ? newCompanyName : showModifyName.companyName}\n                                onChange={(e) => setNewCompanyName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>First contact name</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={contactName ? contactName : ''}\n                                placeholder='Contact name'\n                                onChange={(e) => setContactName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>First contact email</Form.Label>\n                            <Form.Control\n                                type='email'\n                                value={contactEmail ? contactEmail : ''}\n                                placeholder='Contact email'\n                                onChange={(e) => setContactEmail(e.target.value)}\n                            />\n                        </Form.Group>\n                        \n                        <Button \n                            type='submit' \n                            variant=\"primary\" \n                            onClick={(e) => addCompanyHandler(e, newCompanyName, contactName, contactEmail)} \n                            disabled={!(newCompanyName )}>Create</Button>\n                    </Form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        setShowModifyName({ state: false, companyId: '', companyName: \"\" });\n                        setNewCompanyName('')\n                    }}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </DisplayChildren>\n    )\n}\n\nconst DisplayContact = ({ company, setShowAddContact, deleteContactHandler }) => {\n\n    const [contacts] = useState(company.commercialTeam || []);\n\n    return (\n        <div>\n            {contacts.map((contact, incr) => (\n                <Row key={incr}>\n                    <Col>\n                        {`${contact.contactName} (${contact.contactEmail})`}\n                        <Button\n                            variant='ligth'\n                            className='ml-3 px-1 text-danger'\n                            onClick={() => deleteContactHandler(contact.contactEmail, company._id)}\n                        ><i className=\"fas fa-times\"></i></Button>\n                    </Col>\n                </Row>\n            ))}\n            <Row><Col className='text-left'>\n                <Button\n                    className='m-0 p-1 text-primary'\n                    variant='ligth'\n                    onClick={() => setShowAddContact({state:true, companyId:company._id, companyName:company.name})}\n                ><i className=\"fas fa-plus\"></i><i>  add a contact</i></Button>\n            </Col></Row>\n\n        </div>\n    )\n}\n\nexport default ManageCompaniesScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n//import Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport { getContactsList, sendDecisionEmail } from '../actions/emailActions';\nimport Loader from '../components/Loader';\nimport { EMAIL_SEND_DECISION_RESET } from '../constants/emailConstants';\n\nconst EnvoyerMailsScreen = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    const [contactList, setContactList] = useState([]);\n    const [messsagesSendSuccess, setMessagesSendSuccess] = useState(0);\n    const [messsagesSendError, setMessagesSendError] = useState(0);\n    const [totalToSend, setTotalToSend] = useState(0);\n    \n    const [massSending, setMassSending] = useState(false);\n    const [progress, setProgress] = useState(0);\n\n    // const userLogin = useSelector(state => state.userLogin);\n    // const { userInfo } = userLogin;\n\n    const contactsList = useSelector(state => state.contactsList);\n    const { loading, contacts } = contactsList;\n\n    const sendOneEmail = useSelector(state => state.sendOneEmail);\n    const { success, error, email } = sendOneEmail;\n\n    // const sleep = (milliseconds) => {\n    //     const date = Date.now();\n    //     let currentDate = null;\n    //     do {\n    //         currentDate = Date.now();\n    //     } while (currentDate - date < milliseconds);\n    // }\n\n    const handlerSendADecision = (email, name) => {\n        const newContactsInfo = contactList.slice();\n        for (let incr = 0 ; incr < newContactsInfo.length; incr++){\n            if(newContactsInfo[incr].email === email){\n                newContactsInfo[incr].status = 'loading'\n            }\n        }\n        setContactList(newContactsInfo);\n        dispatch(sendDecisionEmail(email, name))\n    }\n\n    const handlerSendAllDecisions = () => {\n        dispatch({ type: EMAIL_SEND_DECISION_RESET });\n        setProgress(0);\n        setMassSending(true);\n    }\n\n    useEffect(() => {\n        dispatch(getContactsList());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (contacts) {\n            setContactList(contacts.map(x => ({ ...x, status: 'not sent' })));\n            setTotalToSend(contacts.length);\n        }\n    }, [contacts]);\n\n    useEffect(() => {\n        if(massSending) {\n            if(contactList[progress].status !== 'send') {\n                //sleep(1000);\n                handlerSendADecision(contactList[progress].email, contactList[progress].name);\n            } else {\n                if(progress < contactList.length - 1){\n                    setProgress(progress+1);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    },[massSending, progress]);\n\n    useEffect(() => {\n        if(success) {\n            const successEmail = email;\n            const newContactsInfo = contactList.slice();\n            for (let incr = 0; incr < newContactsInfo.length; incr++) {\n                if (newContactsInfo[incr].email === successEmail) {\n                    newContactsInfo[incr].status = 'send'\n                }\n            }\n            setContactList(newContactsInfo);\n\n            if (massSending){\n                if (progress < contactList.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassSending(false);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [success]);\n\n    useEffect(() => {\n        if(error) {\n            //console.log('error', error);\n            const errorEmail = error;\n            const newContactsInfo = contactList.slice();\n            for (let incr = 0; incr < newContactsInfo.length; incr++) {\n                if (newContactsInfo[incr].email === errorEmail) {\n                    newContactsInfo[incr].status = 'error';\n                }\n            }\n            setContactList(newContactsInfo);\n\n            if (massSending){\n                if (progress < contactList.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassSending(false);\n                    setProgress(0);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [error]);\n\n    useEffect(() => {\n        setMessagesSendSuccess(contactList.filter(x => x.status === 'send').length);\n        setMessagesSendError(contactList.filter(x => x.status === 'error').length);\n        setTotalToSend(contactList.length);\n    },[contactList, error, success]);\n\n    return (\n        <div>\n            <Meta />\n            {loading && <Loader />}\n            <Button\n                variant='primary'\n                onClick={() => history.go(-1)}\n            >Go Back</Button>\n            <Row className='align-items-center pt-3'>\n                <Col>\n                    {`${messsagesSendSuccess} messages send / ${totalToSend} - ${messsagesSendError} messages with error`}\n                </Col>\n                <Col className='text-right'>\n                    <Button\n                        variant='ligth'\n                        className='text-primary'\n                        onClick={() => handlerSendAllDecisions()}\n                    ><i className=\"fas fa-envelope\"></i> {massSending ? <Loader /> : 'Send all messages'}</Button>\n                </Col>\n            </Row>\n            <Row className='pt-3'>\n                <Col>\n                    <ProgressBar>\n                        <ProgressBar animated={massSending} now={100* messsagesSendSuccess / totalToSend} variant='primary' />\n                        <ProgressBar animated={massSending} now={100* messsagesSendError / totalToSend} variant='danger' />\n                    </ProgressBar>\n                </Col>\n            </Row>\n\n            <Row className='pt-3'>\n                <Col>\n                    <Table responsive hover striped className='mt-3'>\n                        <thead>\n                            <tr className='table-primary'>\n                                <th className='align-middle text-light text-center col-md-5'>Name</th>\n                                <th className='align-middle text-light text-center col-md-5'>Email</th>\n                                <th className='align-middle text-light text-center col-md-2'>status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {contactList && contactList.map((contact, incr) => (\n                                <tr key={incr}>\n                                    <td className='align-middle text-center'>{contact.name ? contact.name : \"Unknown\"}</td>\n                                    <td className='align-middle text-center'>{contact.email}</td>\n                                    <td className='align-middle text-center'>\n                                        <Button\n                                            variant='ligth'\n                                            className={contact.status === 'error' ? 'text-danger' \n                                                        : contact.status === 'send' ? 'text-success'\n                                                        : 'text-primary'}\n                                            size='sm'\n                                            onClick={() => handlerSendADecision(contact.email, contact.name)}\n                                            disabled={contact.status === 'send' || massSending === true}\n                                        ><i className=\"fas fa-envelope\"></i>  \n                                            {contact.status === 'not sent' && '  send'}\n                                            {contact.status === 'loading' && <Loader />}\n                                            {contact.status === 'error' && '  Error send again'}\n                                            {contact.status === 'send' && '  sent'}\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default EnvoyerMailsScreen;\n","import axios from 'axios';\nimport { \n    EMAIL_CONTACTS_LIST_FAIL, \n    EMAIL_CONTACTS_LIST_REQUEST, \n    EMAIL_CONTACTS_LIST_SUCCESS, \n    EMAIL_SEND_DECISION_FAIL, \n    EMAIL_SEND_DECISION_REQUEST, \n    EMAIL_SEND_DECISION_SUCCESS\n} from '../constants/emailConstants';\n\nexport const getContactsList = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: EMAIL_CONTACTS_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/emails/contacts`, config);\n\n        dispatch({ type: EMAIL_CONTACTS_LIST_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: EMAIL_CONTACTS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const sendDecisionEmail = (email, name) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: EMAIL_SEND_DECISION_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                //'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/emails/decision?email=${email}&name=${name}`, config);\n\n        dispatch({ type: EMAIL_SEND_DECISION_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: EMAIL_SEND_DECISION_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport DisplayChildren from '../components/DisplayChildren';\nimport { getAllDeals } from '../actions/dealActions';\nimport SelectInput from '../components/SelectInput';\nimport { getAllCDM, updateDelegateConsultant } from '../actions/consultantActions';\n\n\nconst ProfileScreen = ({ history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n    const [messageUpdate, setMessageUpdate] = useState(null);\n\n    const [delegation, setDelegation] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userUpdateProfil = useSelector((state) => state.userUpdateProfil);\n    const { success: successUpdate, error: errorUpdate } = userUpdateProfil;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { deals } = dealAllList;\n\n    const consultantCDMList = useSelector(state => state.consultantCDMList);\n    const { cdmList } = consultantCDMList;\n\n    const consultantDelegateUpdate = useSelector(state => state.consultantDelegateUpdate);\n    const { loading: loadingDelegate } = consultantDelegateUpdate;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } else {\n            if (!user || !user.name) {\n                dispatch(getUserDetails(userInfo._id));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n            }\n        }\n    }, [dispatch, history, userInfo, user]);\n\n    useEffect(() => {\n        if (successUpdate) {\n            setMessageUpdate({ type: 'success', message: 'Profile updated' });\n        }\n    }, [successUpdate]);\n\n    useEffect(() => {\n        if (errorUpdate) {\n            setMessageUpdate({ type: 'danger', message: 'Profile not updated' });\n        }\n    }, [errorUpdate]);\n\n    useEffect(() => {\n        if (userInfo) {\n            const keyword = {\n                title: '',\n                contact: '',\n                company: '',\n                status: '',\n                request: '',\n                staff: '',\n                filterMy: true\n            }\n            dispatch(getAllDeals(keyword, 1, 1000, 'active'));\n        }\n    }, [dispatch, userInfo]);\n\n    useEffect(() => {\n        if(user) {\n            setDelegation(user.consultantProfil.cdmDelegation.map(x => ({id: x.cdmId, value: x.name})));\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if(!cdmList) {\n            dispatch(getAllCDM(userInfo.consultantProfil.practice))\n        }\n    }, [dispatch, cdmList, userInfo]);\n\n    const submitHandlerDelegation = () => {\n        const delegationToUpdate = delegation.map(x => ({cdmId: x.id, name: x.value}))\n        dispatch(updateDelegateConsultant(user.consultantProfil._id, delegationToUpdate))\n    }\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            setMessage(null); // to reinitialize the message before testing\n            setMessageUpdate(null);\n\n            //const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n            //const lowRegex = new RegExp(\"([a-zA-Z0-9!@#\\$%\\^&\\*]){1,}\");\n            const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n            const lowRegex = new RegExp(\"([a-zA-Z0-9!@#$%^&*]){1,}\");\n            \n            const applyRegex = ['demo', 'poc'].includes(process.env.REACT_APP_ENV) ? strongRegex : lowRegex;\n            //console.log(applyRegex);\n\n            if (!password || !confirmPassword) {\n                setMessage('Please enter a password');\n                return;\n            }\n            if (password.match(applyRegex)) {\n                if (!password || password !== confirmPassword) {\n                    setMessage('Passwords do not match');\n                    return;\n                } else {\n                    dispatch(updateUserProfile({ id: user._id, name, password }));\n                    return;\n                }\n            } else {\n                setMessage(`Please enter strong password: \\n\n                    - must be eight characters or longer \\n\n                    - must contain at least 1 lowercase alphabetical character \\n\n                    - must contain at least 1 uppercase alphabetical character \\n\n                    - must contain at least 1 numeric character \\n\n                    - must contain at least one special character (!@#$%^&*)`)\n                return;\n            }\n        }\n    };\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profil</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {messageUpdate && messageUpdate.type && <Message variant={messageUpdate.type}>{messageUpdate.message}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Adress</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='confirm-password'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button \n                        type='submit' \n                        className='my-3'\n                        variant='primary' \n                        block\n                    >Update Password</Button>\n                    \n                    {userInfo && userInfo.consultantProfil.isCDM && (\n                        <>\n                            <h3>Delegate </h3>\n                            <SelectInput\n                                options={cdmList ? cdmList.map(cdm => ({ value: cdm._id, label: cdm.name })) : []}\n                                value={delegation ? delegation.map(x => ({ value: x.id, label: x.value })) : []}\n                                setValue={setDelegation}\n                                multi={true}\n                            //disabled={!editRequest}\n                            />\n                            <Button\n                                onClick={submitHandlerDelegation}\n                                className='my-3'\n                                variant='primary'\n                                block\n                            >{loadingDelegate ? <Loader /> : 'Update Delegations'}</Button>\n                        </>\n                    )}\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <DisplayChildren access='viewProfilDetails'>\n                    <h2>Follow my Requests</h2>\n                    <Table striped hover responsive className='table-sm mt-3'>\n                        <thead>\n                            <tr className='table-light'>\n                                <th className='align-middle text-center'>Title</th>\n                                <th className='align-middle text-center'>Client</th>\n                                <th className='align-middle text-center'>Contacts</th>\n                                <th className='align-middle text-center'>Practice</th>\n                                <th className='align-middle text-center'>Step</th>\n                                <th className='align-middle text-center'>Request status</th>\n                                <th className='align-middle text-center'>Starting date</th>\n                                <th className='align-middle text-center'>Staffing</th>\n                                <th className='align-middle text-center'>Details</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {deals && deals.map( deal => (\n                                <tr key={deal._id}>\n                                    <td className='align-middle text-center'>{deal.title}</td>\n                                    <td className='align-middle text-center'>{deal.company}</td>\n                                    <td className='align-middle text-center'>{`${deal.contacts && deal.contacts.primary && deal.contacts.primary.name} \\n(${deal.contacts && deal.contacts.secondary && deal.contacts.secondary.map(c => c.name).join(', ')})`}</td>\n                                    <td className='align-middle text-center'>{`${deal.mainPractice} \\n(${deal.othersPractices && deal.othersPractices.join(', ')})`}</td>\n                                    <td className='align-middle text-center'>{deal.status}</td>\n                                    <td className='align-middle text-center'>{deal.staffingRequest && deal.staffingRequest.requestStatus}</td>\n                                    <td className='align-middle text-center'>{deal.startDate.substring(0,10)}</td>\n                                    <td className='align-middle text-center'>{deal.staffingDecision && deal.staffingDecision.staff && deal.staffingDecision.staff.map( s => `${s.idConsultant.name} - ${s.responsability} - ${s.priority}`).join(',\\n')}</td>\n                                    <td className='align-middle text-center'>\n                                        <Button\n                                            variant='ligth'\n                                            style={{ color: 'gray' }}\n                                            onClick={() => history.push(`/staffing/${deal._id}`)}\n                                            size='md'\n                                        ><i className=\"fas fa-edit\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    \n                </DisplayChildren>\n            </Col>\n\n        </Row>\n    );\n};\n\nexport default ProfileScreen;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getTransparentNewToken, logout } from '../actions/userActions';\n\nconst TokenIsValide = ({ history, children }) => {\n\n    const dispatch = useDispatch();\n    const [grantedAccess, setGrantedAccess] = useState(true);\n    //let grantedAccess = true;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (!userInfo) {\n            //grantedAccess = false;\n            history.push('/login');\n            setGrantedAccess(false);\n        }\n    }, [userInfo, history]);\n\n    useEffect(() => {\n        if (userInfo && userInfo.lastConnexion && children) {\n            //grantedAccess = false;\n            setGrantedAccess(true);\n        }\n    }, [userInfo, dispatch, children]);\n\n    // to avoid errors with migration\n    useEffect(() => {\n        if (userInfo && !userInfo.lastConnexion) {\n            //grantedAccess = false;\n            setGrantedAccess(false);\n            dispatch(logout());\n            history.push('/login');\n        }\n    }, [userInfo, dispatch, history]);\n\n    useEffect(() => {\n        // get new Token if close to end of current token\n        if (userInfo && userInfo.accountType === 'LOCAL') {\n            const currentTime = new Date(Date.now());\n            const delay = (currentTime - new Date(userInfo.lastConnexion))/(1000 * 24 * 3600);\n            if (delay > 0.7 && delay < 1) {\n                //grantedAccess = false;\n                setGrantedAccess(false);\n                dispatch(getTransparentNewToken({email: userInfo.email, delay: delay}, userInfo));\n            }\n        }\n    }, [dispatch, userInfo]);\n\n    useEffect(() => {\n        // logout user if token not valide\n        if (userInfo && userInfo.accountType === 'LOCAL') {\n            const currentTime = new Date(Date.now());\n            const delay = (currentTime - new Date(userInfo.lastConnexion))/(1000 * 24 * 3600);\n            if (delay >= 1) {\n                setGrantedAccess(false);\n                dispatch(logout());\n                history.push('/login');\n            }\n        }\n    }, [dispatch, userInfo, history]);\n    \n    return (\n        <span>\n            {grantedAccess && userInfo && children && children}\n        </span>\n    )\n}\n\nexport default TokenIsValide;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nconst PageSize = ({ pageSize, setPageSize }) => {\n    return (\n\n        <Col>\n            <InputGroup>\n                <FormControl\n                    as='select'\n                    id='number-c'\n                    className=\"mb-3\"\n                    value={pageSize && pageSize}\n                    onChange={(e) => setPageSize(e.target.value)}\n                >\n                    <option value='all'>All data</option>\n                    {[5, 10, 15, 20, 50].map(x => (\n                        <option\n                            key={x}\n                            value={x}\n                        >{x} / page</option>\n                    ))}\n                </FormControl>\n            </InputGroup>\n        </Col>\n\n    )\n}\n\nexport default PageSize;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst PaginateComponent = ({ userInfo, keyword, page, pages, pageSize, setPageNumber, action }) => {\n\n    const dispatch = useDispatch();\n\n    return (\n        <Pagination>\n            <Pagination.Prev\n                onClick={() => setPageNumber(page - 1)}\n                disabled={page === 1}\n            />\n            {[...Array(pages).keys()].map(x => (\n                [0, 1, pages - 2, pages - 1].includes(x) ? (\n                    <Pagination.Item\n                        key={x + 1}\n                        active={x + 1 === page}\n                        onClick={() => {\n                            dispatch(action({\n                                practice: userInfo.consultantProfil.practice,\n                                keyword: keyword,\n                                pageNumber: x+1,\n                                pageSize: pageSize,\n                            }));\n                            setPageNumber(x + 1);\n                        }}\n                    >{x + 1}</Pagination.Item>\n                ) : (pages > 4 && x === 2) && (\n                    <Pagination.Ellipsis key={x + 1} />\n                )\n            ))}\n            <Pagination.Next\n                onClick={() => setPageNumber(page + 1)}\n                disabled={page === pages}\n            />\n        </Pagination>\n    )\n}\n\nexport default PaginateComponent;\n","import React, { useEffect, useState } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Table from 'react-bootstrap/Table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport { createUser, getUsersToCreate } from '../actions/userActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport PageSize from '../components/PageSize';\nimport PaginateComponent from '../components/PaginateComponent';\nimport { USER_CREATE_RESET } from '../constants/userConstants';\n\nconst AddUsersScreen = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState({consultantName:'', cdmName:''});\n\n    const [allCheck, setAllCheck] = useState(false);\n\n    const [consultantToCreateList, setConsultantToCreateList] = useState([]);\n\n    const [sendProcess, setSendProcess] = useState(false);\n    const [countSend, setCountSend] = useState(0);\n    const [waitSend, setWaitSend] = useState(true);\n    const [noAction, setNoAction] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userToCreate = useSelector(state => state.userToCreate);\n    const { usersListToCreate, pages, page, count, loading, error } = userToCreate;\n\n    const userCreate = useSelector(state => state.userCreate);\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, consultantId } = userCreate;\n\n    useEffect(() => {\n        dispatch(getUsersToCreate({\n            practice: userInfo.consultantProfil.practice,\n            keyword: keyword,\n            pageNumber: pageNumber,\n            pageSize: pageSize,\n        }));\n    }, [dispatch, keyword, userInfo.consultantProfil.practice, pageNumber, pageSize]);\n\n    // copie data to be able to add processus informations\n    useEffect(() => {\n        if (usersListToCreate) {\n            const newList = usersListToCreate.map(consultant => ({ ...consultant, send: allCheck ? 'checked' : 'no' }));\n            setConsultantToCreateList(newList);\n        }\n    // eslint-disable-next-line\n    }, [usersListToCreate]);\n\n    const onCheck = (oldStatus) => {\n        //let newStatus = 'no';\n        switch (oldStatus) {\n            case 'no':\n                return 'checked';\n            case 'ckecked':\n                return 'checked';\n            case 'yes':\n                return 'yes';\n            case 'error':\n                return 'checked';\n            default:\n                return 'no';\n        }\n    };\n\n    const onUnCheck = (oldStatus) => {\n        switch (oldStatus) {\n            case 'no':\n                return 'no';\n            case 'ckecked':\n                return 'no';\n            case 'yes':\n                return 'yes';\n            case 'error':\n                return 'no';\n            default:\n                return 'no';\n        }\n    };\n\n    const onChangeHandler = (consultant, state) => {\n        let newList\n        if (state === true) {\n            newList = consultantToCreateList.slice();\n            const oldStatus = newList.filter(x => x._id === consultant._id)[0].send;\n            const newStatus = onCheck(oldStatus);\n            newList.filter(x => x._id === consultant._id)[0].send = newStatus;\n            setConsultantToCreateList(newList);\n        }\n        if (state === false) {\n            newList = consultantToCreateList.slice();\n            const oldStatus = newList.filter(x => x._id === consultant._id)[0].send;\n            let newStatus = onUnCheck(oldStatus);\n            newList.filter(x => x._id === consultant._id)[0].send = newStatus;\n            setConsultantToCreateList(newList);\n        }\n    };\n\n    useEffect(() => {\n        let newList\n        if (allCheck) {\n            newList = consultantToCreateList.map(consultant => ({...consultant, send:onCheck(consultant.send)}));\n        } else {\n            newList = consultantToCreateList.map(consultant => ({...consultant, send:onUnCheck(consultant.send)}));\n        }\n        setConsultantToCreateList(newList);\n    // eslint-disable-next-line\n    }, [allCheck]);\n\n    // useEffect(() => {\n    //     console.log('consultantToCreate', consultantToCreateList.map(x => x.send));\n    // }, [consultantToCreateList]);\n\n\n    useEffect(() => {\n        if(sendProcess && !waitSend) {\n            // console.log('countSend', countSend, ' / total', consultantToCreateList.length);\n            if (countSend < consultantToCreateList.length) {\n                const userToCreate = consultantToCreateList[countSend];\n                if (userToCreate.send === 'checked') {\n                    dispatch(createUser(userToCreate));\n                } else {\n                    setNoAction(true);\n                }\n                setWaitSend(true);\n            } else {\n                setSendProcess(false);\n                setCountSend(0);\n                setWaitSend(true);\n            }\n        }\n    // eslint-disable-next-line\n    }, [dispatch, sendProcess, countSend, waitSend]);\n\n    useEffect(() => {\n        if(successCreate && waitSend && sendProcess) {\n            let newList = consultantToCreateList.slice();\n            newList.filter(x => x._id === consultantId)[0].send = 'yes';\n            setConsultantToCreateList(newList);\n            setCountSend(countSend+1);\n            setWaitSend(false);\n        }\n        if (errorCreate && waitSend && sendProcess) {\n            let newList = consultantToCreateList.slice();\n            newList.filter(x => x._id === consultantId)[0].send = 'error';\n            setConsultantToCreateList(newList);\n            setCountSend(countSend+1);\n            setWaitSend(false);\n        }\n    // eslint-disable-next-line\n    }, [successCreate, errorCreate, waitSend]);\n\n    useEffect(() => {\n        if(noAction && waitSend) {\n            setCountSend(countSend+1);\n            setWaitSend(false);\n            setNoAction(false);\n        }\n    // eslint-disable-next-line\n    }, [noAction, waitSend]);\n\n    const verifyStatus = (consultant) => {\n        if (consultantToCreateList.map(x => x._id).includes(consultant._id)) {\n            if(consultantToCreateList.filter( x => x._id === consultant._id)[0].send === 'no') {\n                return (\n                    <div className='text-secondary'><i className=\"fas fa-circle text-secondary\"></i>  not created</div>\n                );\n            }\n            if(consultantToCreateList.filter( x => x._id === consultant._id)[0].send === 'checked') {\n                return (\n                    <div className='text-warning'><i className=\"fas fa-circle text-warning\"></i>  to create</div>\n                );\n            }\n            if (consultantToCreateList.filter( x => x._id === consultant._id)[0].send === 'yes') {\n                return (\n                    <div className='text-success'><i className=\"fas fa-circle text-success\"></i>  created</div>\n                );\n            }\n            if (consultantToCreateList.filter( x => x._id === consultant._id)[0].send === 'error') {\n                return (\n                    <div className='text-danger'><i className=\"fas fa-circle text-danger\"></i>  error</div>\n                );\n            }\n        } else {\n            return (<div className='text-secondary'><i className=\"fas fa-circle text-secondary\"></i>  undefined</div>);\n        }\n    }\n\n    const onCreateUserHandler = () => {\n\n        dispatch({type: USER_CREATE_RESET});\n        setCountSend(0);\n        setSendProcess(true);\n        setWaitSend(false);\n    }\n\n    return (\n        <div>\n            <Row><Col className='text-left'>\n                <Button className='mb-3' onClick={() => history.go(-1)}>\n                    Go Back\n                </Button>\n            </Col></Row>\n\n            <DropDownTitleContainer title='Not created users' close={false}>\n                <ListGroup.Item>\n                    <Row>\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='consultant name'\n                                    value={keyword && keyword.consultantName}\n                                    onChange={(e) => setKeyword({...keyword, consultantName: e.target.value})}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='cdm name'\n                                    value={keyword && keyword.cdmName}\n                                    onChange={(e) => setKeyword({...keyword, cdmName: e.target.value})}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} consultants found` : '0 consultant found'} />\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <PageSize pageSize={pageSize} setPageSize={setPageSize} />\n                        </Col>\n                    </Row>\n\n                    {error && <Row><Col><Message variant='danger'>{error}</Message></Col></Row>}\n                    {loading ? (<Row><Col><Loader /></Col></Row>) : (\n                        <Table responsive hover striped>\n                            <thead>\n                                <tr className='table-primary'>\n                                    <th className='align-middle text-light'>\n                                        {<Form.Check \n                                            type=\"checkbox\" \n                                            checked={allCheck} \n                                            onChange={() => setAllCheck(!allCheck)} \n                                            disabled={sendProcess}\n                                        />}\n                                    </th>\n                                    <th className='align-middle text-light'>Consultant name</th>\n                                    <th className='align-middle text-light'>Matricule</th>\n                                    <th className='align-middle text-light text-center'>Practice</th>\n                                    <th className='align-middle text-light text-center'>CDM</th>\n                                    <th className='align-middle text-light'>Email</th>\n                                    <th className='align-middle text-light text-center'>Arrival</th>\n                                    <th className='align-middle text-light text-center'>Leaving</th>\n                                    <th className='align-middle text-light text-center'>is CDM?</th>\n                                    <th className='align-middle text-light text-center'>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {usersListToCreate && usersListToCreate.map((consultant, val) => (\n                                    <tr key={val}>\n                                        <td className='align-middle'>\n                                            <CheckComponent \n                                                consultant={consultant} \n                                                allCheck={allCheck} \n                                                setStatus={onChangeHandler} \n                                                sendProcess={sendProcess}\n                                            />\n                                        </td>\n                                        <td className='align-middle'>{consultant.name}</td>\n                                        <td className='align-middle'>{consultant.matricule}</td>\n                                        <td className='align-middle text-center'>{consultant.practice}</td>\n                                        <td className='align-middle text-center'>{consultant.cdmId.name ? consultant.cdmId.name : 'unknown'}</td>\n                                        <td className='align-middle'>{consultant.email}</td>\n                                        <td className='align-middle text-center'>{consultant.arrival && consultant.arrival.substring(0, 10)}</td>\n                                        <td className='align-middle text-center'>{consultant.leaving && consultant.leaving.substring(0, 10)}</td>\n                                        <td className={`align-middle text-center ${consultant.isCDM ? 'text-success' : 'text-warning'}`}>{consultant.isCDM ? \"Yes\" : \"No\"}</td>\n                                        <td className='align-middle text-center'>{\n                                            consultant._id === consultantId && sendProcess ? \n                                                <Loader /> \n                                                : verifyStatus(consultant)\n                                        }</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n\n                    <Row>\n                        <Col xs={8}>\n                            <PaginateComponent\n                                userInfo={userInfo && userInfo}\n                                keyword={keyword}\n                                page={page}\n                                pages={pages}\n                                pageSize={pageSize}\n                                setPageNumber={setPageNumber}\n                                action={getUsersToCreate}\n                            />\n                        </Col>\n                        <Col xs={4} className='text-right'>\n                            {loadingCreate ? <Loader /> : (\n                                <Button\n                                    onClick={() => onCreateUserHandler()}\n                                ><i className=\"far fa-user-circle\"></i>  Create account</Button>\n                            )}\n                        </Col>\n                    </Row>\n\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n\n        </div>\n    )\n};\n\nconst CheckComponent = ({ consultant, allCheck, setStatus, sendProcess }) => {\n\n    const [checked, setChecked] = useState(allCheck);\n\n    useEffect(() => {\n        setChecked(allCheck);\n    }, [allCheck]);\n\n    // useEffect(() => {\n    //     setStatus(consultant, checked);\n    // }, [checked, consultant, setStatus]);\n\n    const checkChangeHandler = () => {\n        setStatus(consultant, !checked);\n        setChecked(!checked);\n    }\n\n    return (\n        <Form.Check\n            type=\"checkbox\"\n            checked={checked}\n            //onChange={() => setChecked(!checked)}\n            onChange={() => checkChangeHandler()}\n            disabled={sendProcess}\n        />\n    );\n}\n\nexport default AddUsersScreen;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport LoginScreen from './screens/LoginScreen';\nimport PxxEditScreen from './screens/PxxEditScreen';\nimport ConsultantEditScreen from './screens/ConsultantEditScreen';\nimport ManageConsultantScreen from './screens/ManageConsultantScreen';\nimport ManageUsersScreen from './screens/ManageUsersScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport StaffingEditScreen from './screens/StaffingEditScreen';\nimport ManageSkillsScreen from './screens/ManageSkillsScreen';\nimport PxxDetailsScreen from './screens/PxxDetailsScreen';\nimport ManageDealsScreen from './screens/ManageDealsScreen';\nimport DealsHistoryScreen from './screens/DealsHistoryScreen';\nimport AccessEditScreen from './screens/AccessEditScreen';\nimport ManageCompaniesScreen from './screens/ManageCompaniesScreen';\nimport EnvoyerMailsScreen from './screens/EnvoyerMailsScreen';\n\nimport ProfileScreen from './screens/ProfileScreen';\nimport TokenIsValide from './components/TokenIsValide';\n\nimport history from './components/History';\nimport AddUsersScreen from './screens/AddUsersScreen';\n\nconst App = () => {\n\n  return (\n    <Router history={history}>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} exact />\n          <Route path='/register' component={RegisterScreen} exact />\n          \n          <TokenIsValide history={history}>\n            <Route path='/profile' component={ProfileScreen} exact />\n            <Route path='/staffing' component={StaffingEditScreen} exact />\n            <Route path='/staffing/:id' component={StaffingEditScreen} exact />\n            <Route path='/pxx' component={PxxEditScreen} exact />\n            <Route path='/pxx/:id' component={PxxEditScreen} exact />\n            <Route path='/pxxdetails/:id' component={PxxDetailsScreen} exact />\n            <Route path='/editconsultant/:id' component={ConsultantEditScreen} exact />\n            <Route path='/admin/consultants' component={ManageConsultantScreen} exact />\n            <Route path='/admin/consultants/:keyword/page/:pageNumber' component={DashboardScreen} exact />\n            <Route path='/admin/users' component={ManageUsersScreen} exact />\n            <Route path='/admin/add-users' component={AddUsersScreen} exact />\n            <Route path='/admin/edituser/:id' component={UserEditScreen} exact />\n            <Route path='/admin/consultant/add' component={ConsultantEditScreen} exact />\n            <Route path='/admin/skills' component={ManageSkillsScreen} exact />\n            <Route path='/admin/deals' component={ManageDealsScreen} exact />\n            <Route path='/admin/deals/history' component={DealsHistoryScreen} exact />\n            <Route path='/admin/profils' component={AccessEditScreen} exact />\n            <Route path='/admin/companies' component={ManageCompaniesScreen} exact />\n            <Route path='/admin/send' component={EnvoyerMailsScreen} exact />\n            <Route path='/' component={DashboardScreen} exact />\n          </TokenIsValide>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}
{"version":3,"sources":["constants/pxxConstants.js","constants/userConstants.js","constants/consultantConstants.js","constants/skillsConstants.js","constants/dealConstants.js","constants/accessConstants.js","constants/clientConstants.js","constants/taceConstants.js","constants/emailConstants.js","store.js","reducers/userReducers.js","reducers/consultantReducers.js","reducers/pxxReducers.js","reducers/skillReducers.js","reducers/dealReducer.js","reducers/accessReducers.js","reducers/clientReducers.js","reducers/taceReducer.js","reducers/emailReducers.js","actions/userActions.js","components/DisplayChildren.js","actions/consultantActions.js","components/ChangeAdminPractice.js","components/Header.js","components/Footer.js","components/Message.js","components/Loader.js","components/FormContainer.js","screens/LoginScreen.js","actions/pxxActions.js","components/PxxUserLine.js","components/PxxEditor.js","components/DropDownTitleContainer.js","components/ConsultantsTab.js","components/Meta.js","components/ViewStaffs.js","actions/dealActions.js","components/ViewOldStaffs.js","components/Rating.js","components/SkillsDetails.js","screens/PxxEditScreen.js","screens/ConsultantEditScreen.js","components/ImportExcelFile.js","components/FlowImportWKConsultants.js","screens/ManageConsultantScreen.js","screens/ManageUsersScreen.js","actions/accessActions.js","screens/UserEditScreen.js","screens/RegisterScreen.js","components/StaffAConsultant.js","components/SelectComponent.js","components/SelectInput.js","actions/skillActions.js","components/ConsoDispo.js","components/Tace.js","actions/taceActions.js","screens/DashboardScreen.js","actions/clientActions.js","components/SelectCompany.js","components/DateComponent.js","components/NumberComponent.js","components/TextComponent.js","components/SelectMultipleComponent.js","components/TextAreaComponent.js","screens/StaffingEditScreen.js","screens/ManageSkillsScreen.js","components/FlowImportPxx.js","screens/PxxDetailsScreen.js","components/DealList.js","screens/ManageDealsScreen.js","screens/DealsHistoryScreen.js","screens/AccessEditScreen.js","screens/ManageCompaniesScreen.js","screens/EnvoyerMailsScreen.js","actions/emailActions.js","screens/ProfileScreen.js","components/TokenIsValide.js","components/History.js","components/PageSize.js","components/PaginateComponent.js","screens/AddUsersScreen.js","App.js","serviceWorker.js","index.js"],"names":["PXX_MY_TO_EDIT_REQUEST","PXX_MY_TO_EDIT_SUCCESS","PXX_MY_TO_EDIT_FAIL","PXX_MY_TO_EDIT_RESET","PXX_UPDATE_REQUEST","PXX_UPDATE_SUCCESS","PXX_UPDATE_FAIL","PXX_UPDATE_RESET","PXX_LIST_REQUEST","PXX_LIST_SUCCESS","PXX_LIST_FAIL","PXX_LIST_RESET","PXX_TACE_REQUEST","PXX_TACE_SUCCESS","PXX_TACE_FAIL","PXX_TACE_RESET","PXX_AVAILABILITIES_REQUEST","PXX_AVAILABILITIES_SUCCESS","PXX_AVAILABILITIES_FAIL","PXX_AVAILABILITIES_RESET","PXX_ALL_REQUEST","PXX_ALL_SUCCESS","PXX_ALL_FAIL","PXX_ALL_RESET","PXX_IMPORT_LINE_REQUEST","PXX_IMPORT_LINE_SUCCESS","PXX_IMPORT_LINE_FAIL","PXX_IMPORT_LINE_RESET","PXX_UPLOAD_FILE_REQUEST","PXX_UPLOAD_FILE_SUCCESS","PXX_UPLOAD_FILE_FAIL","PXX_UPLOAD_FILE_RESET","PXX_UPDATE_PXX_REQUEST","PXX_UPDATE_PXX_SUCCESS","PXX_UPDATE_PXX_FAIL","PXX_UPDATE_PXX_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_ADMIN_CHANGE_PRACTICE","USER_ADMIN_CHANGE_PRACTICE_FAIL","USER_REDIRECT_AZ_REQUEST","USER_REDIRECT_AZ_SUCCESS","USER_REDIRECT_AZ_FAIL","USER_REDIRECT_AZ_RESET","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_TO_CREATE_REQUEST","USER_TO_CREATE_SUCCESS","USER_TO_CREATE_FAIL","USER_TO_CREATE_RESET","USER_CREATE_REQUEST","USER_CREATE_SUCCESS","USER_CREATE_FAIL","USER_CREATE_RESET","USER_STATUS","CONSULTANTS_MY_DETAILS_REQUEST","CONSULTANTS_MY_DETAILS_SUCCESS","CONSULTANTS_MY_DETAILS_FAIL","CONSULTANTS_MY_DETAILS_FOCUS","CONSULTANTS_MY_DETAILS_RESET","CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST","CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS","CONSULTANTS_ALL_ADMIN_DETAILS_FAIL","CONSULTANTS_ALL_ADMIN_DETAILS_RESET","CONSULTANTS_ALL_LEADERS_REQUEST","CONSULTANTS_ALL_LEADERS_SUCCESS","CONSULTANTS_ALL_LEADERS_FAIL","CONSULTANTS_ALL_LEADERS_RESET","CONSULTANT_MY_REQUEST","CONSULTANT_MY_SUCCESS","CONSULTANT_MY_FAIL","CONSULTANT_MY_RESET","CONSULTANT_DELEGATE_UPDATE_REQUEST","CONSULTANT_DELEGATE_UPDATE_SUCCESS","CONSULTANT_DELEGATE_UPDATE_FAIL","CONSULTANT_DELEGATE_UPDATE_RESET","CONSULTANT_MY_UPDATE_REQUEST","CONSULTANT_MY_UPDATE_SUCCESS","CONSULTANT_MY_UPDATE_FAIL","CONSULTANT_MY_UPDATE_RESET","CONSULTANT_CREATE_REQUEST","CONSULTANT_CREATE_SUCCESS","CONSULTANT_CREATE_FAIL","CONSULTANT_CREATE_RESET","CONSULTANT_DELETE_REQUEST","CONSULTANT_DELETE_SUCCESS","CONSULTANT_DELETE_FAIL","CONSULTANT_DELETE_RESET","CONSULTANT_CDM_LIST_REQUEST","CONSULTANT_CDM_LIST_SUCCESS","CONSULTANT_CDM_LIST_FAIL","CONSULTANT_CDM_LIST_RESET","CONSULTANT_PRACTICE_LIST_REQUEST","CONSULTANT_PRACTICE_LIST_SUCCESS","CONSULTANT_PRACTICE_LIST_FAIL","CONSULTANT_PRACTICE_LIST_RESET","CONSULTANT_UPDATE_COMMENT_REQUEST","CONSULTANT_UPDATE_COMMENT_SUCCESS","CONSULTANT_UPDATE_COMMENT_FAIL","CONSULTANT_UPDATE_COMMENT_RESET","CONSULTANT_CDM_REQUEST","CONSULTANT_CDM_SUCCESS","CONSULTANT_CDM_FAIL","CONSULTANT_CDM_RESET","CONSULTANT_SKILLS_REQUEST","CONSULTANT_SKILLS_SUCCESS","CONSULTANT_SKILLS_FAIL","CONSULTANT_SKILLS_RESET","CONSULTANT_ALL_SKILLS_REQUEST","CONSULTANT_ALL_SKILLS_SUCCESS","CONSULTANT_ALL_SKILLS_FAIL","CONSULTANT_ALL_SKILLS_RESET","CONSULTANT_ALL_STAFF_REQUEST","CONSULTANT_ALL_STAFF_SUCCESS","CONSULTANT_ALL_STAFF_FAIL","CONSULTANT_ALL_STAFF_RESET","CONSULTANT_ADD_SKILL_REQUEST","CONSULTANT_ADD_SKILL_SUCCESS","CONSULTANT_ADD_SKILL_FAIL","CONSULTANT_ADD_SKILL_RESET","CONSULTANT_DELETE_SKILL_REQUEST","CONSULTANT_DELETE_SKILL_SUCCESS","CONSULTANT_DELETE_SKILL_FAIL","CONSULTANT_DELETE_SKILL_RESET","CONSULTANT_UPDATE_SKILL_REQUEST","CONSULTANT_UPDATE_SKILL_SUCCESS","CONSULTANT_UPDATE_SKILL_FAIL","CONSULTANT_UPDATE_SKILL_RESET","CONSULTANT_MASS_IMPORT_REQUEST","CONSULTANT_MASS_IMPORT_SUCCESS","CONSULTANT_MASS_IMPORT_FAIL","CONSULTANT_MASS_IMPORT_RESET","CONSULTANT_UPLOAD_WK_REQUEST","CONSULTANT_UPLOAD_WK_SUCCESS","CONSULTANT_UPLOAD_WK_FAIL","CONSULTANT_UPLOAD_WK_RESET","CONSULTANT_UPDATE_WK_REQUEST","CONSULTANT_UPDATE_WK_SUCCESS","CONSULTANT_UPDATE_WK_FAIL","CONSULTANT_UPDATE_WK_RESET","CONSULTANT_GRADE","SKILL_LIST_REQUEST","SKILL_LIST_SUCCESS","SKILL_LIST_FAIL","SKILL_LIST_RESET","SKILL_DELETE_REQUEST","SKILL_DELETE_SUCCESS","SKILL_DELETE_FAIL","SKILL_DELETE_RESET","SKILL_CREATE_REQUEST","SKILL_CREATE_SUCCESS","SKILL_CREATE_FAIL","SKILL_CREATE_RESET","DEAL_CREATE_REQUEST","DEAL_CREATE_SUCCESS","DEAL_CREATE_FAIL","DEAL_CREATE_RESET","DEAL_UPDATE_REQUEST","DEAL_UPDATE_SUCCESS","DEAL_UPDATE_FAIL","DEAL_UPDATE_RESET","DEAL_ALL_LIST_REQUEST","DEAL_ALL_LIST_SUCCESS","DEAL_ALL_LIST_FAIL","DEAL_ALL_LIST_RESET","DEAL_DELETE_REQUEST","DEAL_DELETE_SUCCESS","DEAL_DELETE_FAIL","DEAL_DELETE_RESET","DEAL_EDIT_REQUEST","DEAL_EDIT_SUCCESS","DEAL_EDIT_FAIL","DEAL_EDIT_RESET","DEAL_OLD_REQUEST","DEAL_OLD_SUCCESS","DEAL_OLD_FAIL","DEAL_OLD_RESET","DEAL_MASS_IMPORT_REQUEST","DEAL_MASS_IMPORT_SUCCESS","DEAL_MASS_IMPORT_FAIL","DEAL_MASS_IMPORT_RESET","REQUEST_STATUS","name","staff","priority","TYPE_BUSINESS","DEAL_STATUS","display","DEAL_PROBABILITY","ACCESS_LIST_REQUEST","ACCESS_LIST_SUCCESS","ACCESS_LIST_FAIL","ACCESS_LIST_RESET","ACCESS_UPDATE_FRONTACCESS_REQUEST","ACCESS_UPDATE_FRONTACCESS_SUCCESS","ACCESS_UPDATE_FRONTACCESS_FAIL","ACCESS_UPDATE_FRONTACCESS_RESET","ACCESS_MODES","ACCESS_DATAS","CLIENT_ALL_REQUEST","CLIENT_ALL_SUCCESS","CLIENT_ALL_FAIL","CLIENT_ALL_RESET","CLIENT_CREATE_REQUEST","CLIENT_CREATE_SUCCESS","CLIENT_CREATE_FAIL","CLIENT_CREATE_RESET","CLIENT_UPDATE_REQUEST","CLIENT_UPDATE_SUCCESS","CLIENT_UPDATE_FAIL","CLIENT_UPDATE_RESET","CLIENT_DELETE_REQUEST","CLIENT_DELETE_SUCCESS","CLIENT_DELETE_FAIL","CLIENT_DELETE_RESET","TACE_CREATE_REQUEST","TACE_CREATE_SUCCESS","TACE_CREATE_FAIL","TACE_CREATE_RESET","EMAIL_CONTACTS_LIST_REQUEST","EMAIL_CONTACTS_LIST_SUCCESS","EMAIL_CONTACTS_LIST_FAIL","EMAIL_CONTACTS_LIST_RESET","EMAIL_SEND_DECISION_REQUEST","EMAIL_SEND_DECISION_SUCCESS","EMAIL_SEND_DECISION_FAIL","EMAIL_SEND_DECISION_RESET","reducer","combineReducers","userRegister","state","action","type","loading","userInfo","payload","error","userLogin","userRedirectAz","redirectURL","userList","users","pages","page","count","userDetails","user","userUpdate","success","userDelete","userUpdateProfil","userToCreate","usersListToCreate","userCreate","consultantId","message","consultantUpdateComment","consultantsMyAdminList","consultantsMyAdmin","consultants","consultantsMyList","focus","consultantsMy","consultantMy","consultant","consultantMyUpdate","consultantCreate","consultantCreated","consultantDelete","consultantCDMList","cdmList","consultantDelegateUpdate","consultantPracticeList","practiceList","consultantSkills","skills","consultantAllSkills","consultantAllStaffs","staffings","consultantAddSkill","consultantDeleteSkill","consultantUpdateSkill","consultantGetCdm","cdm","consultantsAllLeaders","leaderslist","consultantsMassImport","consultantUploadWk","path","consultantUpdateWk","pxxList","pxxs","pxxMonthInformation","pxxUserList","pxxAllList","pxxMyToEdit","pxx","pxxUpdate","pxxTACE","tace","pxxAvailabilities","availabilities","updatePxx","pxxImportLine","updatedLine","pxxUploadFile","skillList","skillDelete","skillCreate","dealCreate","createId","dealAllList","deals","dealDelete","dealEdit","deal","dealUpdate","dealOld","oldDeals","dealsImportMass","datas","accessList","access","accessFrontUpdate","clientAll","clients","clientCreate","clientUpdate","clientDelete","createTace","taceData","contactsList","contacts","sendOneEmail","email","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","login","param","dispatch","a","config","headers","data","axios","post","password","get","code","accountType","setItem","stringify","response","logout","clear","getUserDetails","id","getState","Authorization","token","listUsers","practice","keyword","pageNumber","pageSize","getUsersToCreate","consultantName","cdmName","DisplayChildren","children","useSelector","grantedAccess","rule","profil","frontAccess","filter","x","length","mode","setConsultantFocus","getMyConsultant","updateMyConsultant","put","_id","Error","getAllCDM","getAllPractice","getAllMyAdminConsultants","getConsultantSkills","quality","getAllConsultantSkills","ChangeAdminPractice","useDispatch","useEffect","NavDropdown","title","consultantProfil","map","practiceName","val","Item","onClick","newUserInfo","changeAdminPractice","Header","Navbar","bg","variant","expand","collapseOnSelect","fixed","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","Divider","Footer","Row","Col","Message","Alert","defaultProps","Loader","Spinner","animation","role","stype","width","height","margin","FormContainer","xs","md","LoginScreen","location","history","useState","setEmail","setPassword","setMessage","redirect","search","split","status","push","window","href","Form","onSubmit","e","currentTarget","checkValidity","preventDefault","Group","controlId","Label","Control","placeholder","value","onChange","target","toLocaleLowerCase","Button","block","disabled","process","includes","Table","hover","striped","getAvailabilities","start","end","experienceStart","experienceEnd","searchMode","searchExperience","toString","getAllPxx","month","keywork","PxxUserLine","prodDay","prodDayComponent","setProdDayComponent","notProdDay","notProdDayComponent","setNotProdDayComponent","leavingDay","leavingDayComponent","setLeavingDayComponent","Number","availableDay","availableDayComponent","setAvailableDayComponent","workingDay","hasChange","setHasChange","firstDayOfCurrentMonth","Date","now","setDate","toISOString","substring","editable","firstDay","prd","transformNumber","nPrd","lvg","match","InputGroup","min","max","step","PxxEditor","consultantFocus","searchDate","navigationMonthHandler","numberOfMonth","loadingPxx","errorPxx","loadingUpdate","errorUpdate","setUTCDate","getMyConsultantPxxToEdit","ListGroup","size","style","line","key","DropDownTitleContainer","close","hide","setHide","ConsultantsTab","focusActive","responsive","matricule","valued","arrival","leaving","comment","onClickHandler","Meta","Helmet","ViewStaffs","displayedDeal","onNavigate","getAllStaffs","company","mainPractice","probability","startDate","requestStatus","updateDeal","dealId","getAllDeals","contact","request","filterMy","ViewOldStaffs","getOldDeals","staffingRequest","Rating","setValue","text","color","valueList","Array","Math","floor","fill","SkillDisplayLine","skill","setUpdate","successConsultantUpdateSkill","successConsultantDeleteSkill","level","setLevel","waitingValidationLevel","setWaitingValidationLevel","handlerDeleteConsultantSkill","skillId","delete","plaintext","readOnly","newLevel","consultantUpdateASkillLevel","SkillsDetails","skillCategory","setSkillCategory","setSkillId","skillLevel","setSkillLevel","skillCategoryList","setSkillCategoryList","qualityOrdonned","setQualityOrdonned","update","skillsAll","loadingConsultantAddSkill","successConsultantAddSkill","errorConsultantAddSkill","ordonnedSkills","orderSkills","categoryList","category","Set","incr","handleAddSkill","consultantAddASkill","as","required","OverlayTrigger","placement","overlay","Tooltip","description","PxxEditScreen","commentText","setCommentText","trObjectives","setTrObjectives","availabilityComment","setAvailabilityComment","notProdComment","setNotProdComment","delegateOption","setDelegationOption","loadingConsultantsMyList","errorConsultantsMyList","setSearchDate","option","getAllMyConsultants","talentReviewObjectives","navigationConsultantHandler","updateCommentHandler","updateComment","htmlFor","FormControl","rows","navigationDate","setMonth","getMonth","Check","label","checked","ConsultantEditScreen","setName","setMatricule","setPractice","grade","setGrade","setCdm","setArrival","setValued","setLeaving","seniority","setSeniority","isCDM","setIsCDM","partialTime","setPartialTime","startPartialTime","setStartPartialTime","endPartialTime","setEndPartialTime","valueMonday","setValueMonday","valueTuesday","setValueTuesday","valueWednesday","setValueWednesday","valueThursday","setValueThursday","valueFriday","setValueFriday","errorMessage","setErrorMessage","successMessage","setSuccessMessage","valueEditType","params","successUpdate","loadingCreate","errorCreate","successCreate","errorCDM","errorPractice","cdmId","isPartialTime","week","num","worked","go","updatedUser","createConsultant","changeValueDateHandler","ImportExcelFile","setImportData","sheets","fileName","setFileName","readFileHandler","file","files","reader","FileReader","onload","result","workBook","XLSX","jsonData","SheetNames","wsName","ws","Sheets","sheet_to_json","readAsBinaryString","File","custom","data-browse","Input","FlowImportWKConsultants","props","setStep","loadingUpload","errorUpload","Modal","aria-labelledby","centered","closeButton","Title","Body","rel","Image","src","rounded","fluid","FormData","append","updateConsultantWk","onHide","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ManageConsultantScreen","setPageSize","setPageNumber","setKeyword","exportExcel","setExportExcel","importData","showImportConsultant","setShowImportConsultant","successConsultantDelete","loadingMassImport","errorMassImport","successMassImport","exportExcelData","onClickDeleteHandler","confirm","show","element","Pagination","Prev","keys","active","Ellipsis","Next","ManageUsersScreen","createdAt","lastConnexion","userId","getAllAccess","UserEditScreen","linkConsultant","setLinkConsultant","setProfil","setStatus","errorMyAdmin","updateUser","Append","newProfil","updateProfilHandler","RegisterScreen","confirmPassword","setConfirmPassword","register","variat","StaffAConsultant","loadingData","addStaffHandler","responsability","sdResponsability","setSdResponsability","sdPriority","setSdPriority","information","sdInformation","setSdInformation","SelectComponent","editRequest","options","SelectInput","multi","closeMenuOnSelect","isMulti","valuesSelected","isDisabled","getAllSkills","ConsoDispoUnit","monthData","grades","addStaff","setFocus","formatName","fullName","separateName","word","indice1","toUpperCase","join","Card","consultantData","yVal","sm","html","date","background","onFocus","ConsoDispo","searchExperienceStart","setSearchExperienceStart","searchExperienceEnd","setSearchExperienceEnd","searchSkillsList","setSearchSkillsList","setSearchMode","modalWindowShow","setModalWindowShow","sdConsultant","setSdConsultant","loadingAvailabilities","errorAvailabilities","moreConsultantDetails","Tabs","defaultActiveKey","Tab","eventKey","xVal","Tace","setTarget","bid","setBid","setEditRequest","missingFTEToBid","setMissingFTEToBid","missingFTEToTarget","setMissingFTEToTarget","totalProdDay","totalProdDayToBid","totalNotProdDay","totalAvailableDay","totalProdDayToTarget","today","lastMonthDay","setUTCMonth","getUTCMonth","todayToEnd","Text","totalTACE","toFixed","totalLeaving","totalETP","DashboardScreen","startDefault","endDefault","setStart","setEnd","loadingTACE","errorTACE","getTace","endDate","replace","getAllClients","createAClient","updateAClient","SelectCompany","setCompany","companies","isClearable","commercialTeam","DateComponent","editMode","NumberComponent","TextComponent","formInline","SelectMultipleComponent","updateOthersPractices","selectedList","selectBox","document","getElementById","i","selected","multiple","TextAreaComponent","StaffingEditScreen","successEdit","dealToEdit","setTitle","client","setClient","setType","setProbability","setDescription","proposalDate","setProposalDate","presentationDate","setPresentationDate","setStartDate","setMainPractice","othersPractices","setOthersPractices","setLocation","srInstruction","setSrInstruction","srStatus","setSrStatus","srRessources","setSrRessources","comments","setComments","duration","setDuration","othersContacts","setOthersContacts","newComment","setNewComment","sdInstructions","sdStatus","setSdStatus","sdStaff","setSdStaff","wonDate","setWonDate","loadingSdConsultantData","setLoadingSdConsultantData","dealChange","setDealChange","leader","setLeader","coLeaders","setCoLeaders","companyMessage","setCompanyMessage","searchValue","getAllLeaders","instructions","ressources","staffingDecision","staffingStatus","primary","secondary","coLeader","idConsultant","tampon","addCommentHandler","newComments","slice","sender","sort","b","createDeal","prob","trigger","Popover","Content","removeStaffHandler","updatedAt","onKeyUp","index","textAlign","marginBottom","deleteCommentHandler","ManageSkillsScreen","skillName","setSkillName","skillDescription","setSkillDescription","loadingCreateSkill","errorCreateSkill","successCreateSkill","loadingSkills","skillsList","FlowImportPxx","pxxUploadFiles","webkitdirectory","directory","updatePxxFiles","PxxDetailsScreen","monthId","progress","setProgress","massImport","setMassImport","errorImportMessage","setErrorImportMessage","messsagesImportSuccess","setMessagesImportSuccess","messsagesImportError","setMessagesImportError","totalToImport","setTotalToImport","showImportPxx","setShowImportPxx","loadingImportLine","errorImportLine","successImportLine","handlerImportData","lineToImport","newImportData","MATRICULE","updatedMatricule","newErrorMessage","ProgressBar","animated","DealList","searchTitle","setSearchTitle","searchContact","setSearchContact","searchCompany","setSearchCompany","searchDealStatus","setSearchDealStatus","searchRequestStatus","setSearchRequestStatus","searchStaff","setSearchStaff","colSpan","ManageDealsScreen","dealStatus","myDeals","searchMyDeals","setSearchMyDeals","updateFilter","setUpdateFilter","notUpdateFilter","setNotUpdateFilter","newDealFilter","setNewDealFilter","wonDealFilter","setWonDealFilter","changePeriod","setChangePeriod","tabsFilter","defaultTabs","setDefaultTabs","dataFiltered","setDataFiltered","errorDelete","successDelete","loadingImportMass","successImportData","updateTime","getUTCDate","notUpdateTime","newDealTime","wonDealTime","filteredData","dealsFiltered","needStaff","toDisplay","setParam","activeKey","onSelect","k","DealsHistoryScreen","getFullYear","ProfilDescription","categories","categorizedFrontAccess","filterdData","frontAccessRules","categorizeFrontAccess","categoryRules","accessRules","profilId","CategoryAccess","modes","item","frontAccessItem","AccessLineEdit","setLabel","setMode","setData","loadingState","setLoadingState","updateprofilFrontAcessRule","console","log","AccessEditScreen","errorFrontUpdate","DisplayContact","setShowAddContact","deleteContactHandler","contactName","contactEmail","companyId","companyName","ManageCompaniesScreen","showAddContact","setContactName","setContactEmail","showModifyName","setShowModifyName","newCompanyName","setNewCompanyName","showCreateCompany","setShowCreateCompany","clientsId","clientToUpdate","newContacts","contactNameConform","contactEmailConform","test","addContactHandler","modifyCompanyNameHandler","addCompanyHandler","EnvoyerMailsScreen","contactList","setContactList","messsagesSendSuccess","setMessagesSendSuccess","messsagesSendError","setMessagesSendError","totalToSend","setTotalToSend","massSending","setMassSending","handlerSendADecision","newContactsInfo","sendDecisionEmail","successEmail","errorEmail","ProfileScreen","messageUpdate","setMessageUpdate","delegation","setDelegation","loadingDelegate","cdmDelegation","strongRegex","RegExp","lowRegex","applyRegex","updateUserProfile","delegationToUpdate","updateDelegateConsultant","c","s","TokenIsValide","setGrantedAccess","delay","userInfoUpdated","getTransparentNewToken","createBrowserHistory","PageSize","PaginateComponent","CheckComponent","allCheck","sendProcess","setChecked","AddUsersScreen","setAllCheck","consultantToCreateList","setConsultantToCreateList","setSendProcess","countSend","setCountSend","waitSend","setWaitSend","noAction","setNoAction","newList","send","onCheck","oldStatus","onUnCheck","onChangeHandler","newStatus","verifyStatus","App","component","exact","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0b70cff2.chunk.js","sourcesContent":["export const PXX_MY_TO_EDIT_REQUEST = 'PXX_MY_TO_EDIT_REQUEST';\nexport const PXX_MY_TO_EDIT_SUCCESS = 'PXX_MY_TO_EDIT_SUCCESS';\nexport const PXX_MY_TO_EDIT_FAIL = 'PXX_MY_TO_EDIT_FAIL';\nexport const PXX_MY_TO_EDIT_RESET = 'PXX_MY_TO_EDIT_RESET';\n\nexport const PXX_UPDATE_REQUEST = 'PXX_UPDATE_REQUEST';\nexport const PXX_UPDATE_SUCCESS = 'PXX_UPDATE_SUCCESS';\nexport const PXX_UPDATE_FAIL = 'PXX_UPDATE_FAIL';\nexport const PXX_UPDATE_RESET = 'PXX_UPDATE_RESET';\n\nexport const PXX_LIST_REQUEST = 'PXX_LIST_REQUEST';\nexport const PXX_LIST_SUCCESS = 'PXX_LIST_SUCCESS';\nexport const PXX_LIST_FAIL = 'PXX_LIST_FAIL';\nexport const PXX_LIST_RESET = 'PXX_LIST_RESET';\n\nexport const PXX_USER_LIST_REQUEST = 'PXX_USER_LIST_REQUEST';\nexport const PXX_USER_LIST_SUCCESS = 'PXX_USER_LIST_SUCCESS';\nexport const PXX_USER_LIST_FAIL = 'PXX_USER_LIST_FAIL';\nexport const PXX_USER_LIST_RESET = 'PXX_USER_LIST_RESET';\n\nexport const PXX_TACE_REQUEST = 'PXX_TACE_REQUEST';\nexport const PXX_TACE_SUCCESS = 'PXX_TACE_SUCCESS';\nexport const PXX_TACE_FAIL = 'PXX_TACE_FAIL';\nexport const PXX_TACE_RESET = 'PXX_TACE_RESET';\n\nexport const PXX_AVAILABILITIES_REQUEST = 'PXX_AVAILABILITIES_REQUEST';\nexport const PXX_AVAILABILITIES_SUCCESS = 'PXX_AVAILABILITIES_SUCCESS';\nexport const PXX_AVAILABILITIES_FAIL = 'PXX_AVAILABILITIES_FAIL';\nexport const PXX_AVAILABILITIES_RESET = 'PXX_AVAILABILITIES_RESET';\n\nexport const PXX_ALL_REQUEST = 'PXX_ALL_REQUEST';\nexport const PXX_ALL_SUCCESS = 'PXX_ALL_SUCCESS';\nexport const PXX_ALL_FAIL = 'PXX_ALL_FAIL';\nexport const PXX_ALL_RESET = 'PXX_ALL_RESET';\n\nexport const PXX_IMPORT_MASS_REQUEST = 'PXX_IMPORT_MASS_REQUEST';\nexport const PXX_IMPORT_MASS_SUCCESS = 'PXX_IMPORT_MASS_SUCCESS';\nexport const PXX_IMPORT_MASS_FAIL = 'PXX_IMPORT_MASS_FAIL';\nexport const PXX_IMPORT_MASS_RESET = 'PXX_IMPORT_MASS_RESET';\n\nexport const PXX_IMPORT_LINE_REQUEST = 'PXX_IMPORT_LINE_REQUEST';\nexport const PXX_IMPORT_LINE_SUCCESS = 'PXX_IMPORT_LINE_SUCCESS';\nexport const PXX_IMPORT_LINE_FAIL = 'PXX_IMPORT_LINE_FAIL';\nexport const PXX_IMPORT_LINE_RESET = 'PXX_IMPORT_LINE_RESET';\n\nexport const PXX_UPLOAD_FILE_REQUEST = 'PXX_UPLOAD_FILE_REQUEST';\nexport const PXX_UPLOAD_FILE_SUCCESS = 'PXX_UPLOAD_FILE_SUCCESS';\nexport const PXX_UPLOAD_FILE_FAIL = 'PXX_UPLOAD_FILE_FAIL';\nexport const PXX_UPLOAD_FILE_RESET = 'PXX_UPLOAD_FILE_RESET';\n\nexport const PXX_UPDATE_PXX_REQUEST = 'PXX_UPDATE_PXX_REQUEST';\nexport const PXX_UPDATE_PXX_SUCCESS = 'PXX_UPDATE_PXX_SUCCESS';\nexport const PXX_UPDATE_PXX_FAIL = 'PXX_UPDATE_PXX_FAIL';\nexport const PXX_UPDATE_PXX_RESET = 'PXX_UPDATE_PXX_RESET';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_ADMIN_CHANGE_PRACTICE = 'USER_ADMIN_CHANGE_PRACTICE';\nexport const USER_ADMIN_CHANGE_PRACTICE_FAIL = 'USER_ADMIN_CHANGE_PRACTICE_FAIL';\n\nexport const USER_REDIRECT_AZ_REQUEST = 'USER_REDIRECT_AZ_REQUEST';\nexport const USER_REDIRECT_AZ_SUCCESS = 'USER_REDIRECT_AZ_SUCCESS';\nexport const USER_REDIRECT_AZ_FAIL = 'USER_REDIRECT_AZ_FAIL';\nexport const USER_REDIRECT_AZ_RESET = 'USER_REDIRECT_AZ_RESET';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\n\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n\nexport const USER_TO_CREATE_REQUEST = 'USER_TO_CREATE_REQUEST';\nexport const USER_TO_CREATE_SUCCESS = 'USER_TO_CREATE_SUCCESS';\nexport const USER_TO_CREATE_FAIL = 'USER_TO_CREATE_FAIL';\nexport const USER_TO_CREATE_RESET = 'USER_TO_CREATE_RESET';\n\nexport const USER_CREATE_REQUEST = 'USER_CREATE_REQUEST';\nexport const USER_CREATE_SUCCESS = 'USER_CREATE_SUCCESS';\nexport const USER_CREATE_FAIL = 'USER_CREATE_FAIL';\nexport const USER_CREATE_RESET = 'USER_CREATE_RESET';\n\nexport const USER_STATUS = ['Waiting approval', 'Validated', 'Refused'];","export const CONSULTANTS_MY_DETAILS_REQUEST = 'CONSULTANTS_MY_DETAILS_REQUEST';\nexport const CONSULTANTS_MY_DETAILS_SUCCESS = 'CONSULTANTS_MY_DETAILS_SUCCESS';\nexport const CONSULTANTS_MY_DETAILS_FAIL = 'CONSULTANTS_MY_DETAILS_FAIL';\nexport const CONSULTANTS_MY_DETAILS_FOCUS = 'CONSULTANTS_MY_DETAILS_FOCUS';\nexport const CONSULTANTS_MY_DETAILS_RESET = 'CONSULTANTS_MY_DETAILS_RESET';\n\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST = 'CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS = 'CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_FAIL = 'CONSULTANTS_ALL_ADMIN_DETAILS_FAIL';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS = 'CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_RESET = 'CONSULTANTS_ALL_ADMIN_DETAILS_RESET';\n\nexport const CONSULTANTS_ALL_LEADERS_REQUEST = 'CONSULTANTS_ALL_LEADERS_REQUEST';\nexport const CONSULTANTS_ALL_LEADERS_SUCCESS = 'CONSULTANTS_ALL_LEADERS_SUCCESS';\nexport const CONSULTANTS_ALL_LEADERS_FAIL = 'CONSULTANTS_ALL_LEADERS_FAIL';\nexport const CONSULTANTS_ALL_LEADERS_FOCUS = 'CONSULTANTS_ALL_LEADERS_FOCUS';\nexport const CONSULTANTS_ALL_LEADERS_RESET = 'CONSULTANTS_ALL_LEADERS_RESET';\n\nexport const CONSULTANT_MY_REQUEST = 'CONSULTANT_MY_REQUEST';\nexport const CONSULTANT_MY_SUCCESS = 'CONSULTANT_MY_SUCCESS';\nexport const CONSULTANT_MY_FAIL = 'CONSULTANT_MY_FAIL';\nexport const CONSULTANT_MY_RESET = 'CONSULTANT_MY_RESET';\n\nexport const CONSULTANT_DELEGATE_UPDATE_REQUEST = 'CONSULTANT_DELEGATE_UPDATE_REQUEST';\nexport const CONSULTANT_DELEGATE_UPDATE_SUCCESS = 'CONSULTANT_DELEGATE_UPDATE_SUCCESS';\nexport const CONSULTANT_DELEGATE_UPDATE_FAIL = 'CONSULTANT_DELEGATE_UPDATE_FAIL';\nexport const CONSULTANT_DELEGATE_UPDATE_RESET = 'CONSULTANT_DELEGATE_UPDATE_RESET';\n\nexport const CONSULTANT_MY_UPDATE_REQUEST = 'CONSULTANT_MY_UPDATE_REQUEST';\nexport const CONSULTANT_MY_UPDATE_SUCCESS = 'CONSULTANT_MY_UPDATE_SUCCESS';\nexport const CONSULTANT_MY_UPDATE_FAIL = 'CONSULTANT_MY_UPDATE_FAIL';\nexport const CONSULTANT_MY_UPDATE_RESET = 'CONSULTANT_MY_UPDATE_RESET';\n\nexport const CONSULTANT_CREATE_REQUEST = 'CONSULTANT_CREATE_REQUEST';\nexport const CONSULTANT_CREATE_SUCCESS = 'CONSULTANT_CREATE_SUCCESS';\nexport const CONSULTANT_CREATE_FAIL = 'CONSULTANT_CREATE_FAIL';\nexport const CONSULTANT_CREATE_RESET = 'CONSULTANT_CREATE_RESET';\n\nexport const CONSULTANT_DELETE_REQUEST = 'CONSULTANT_DELETE_REQUEST';\nexport const CONSULTANT_DELETE_SUCCESS = 'CONSULTANT_DELETE_SUCCESS';\nexport const CONSULTANT_DELETE_FAIL = 'CONSULTANT_DELETE_FAIL';\nexport const CONSULTANT_DELETE_RESET = 'CONSULTANT_DELETE_RESET';\n\nexport const CONSULTANT_CDM_LIST_REQUEST = 'CONSULTANT_CDM_LIST_REQUEST';\nexport const CONSULTANT_CDM_LIST_SUCCESS = 'CONSULTANT_CDM_LIST_SUCCESS';\nexport const CONSULTANT_CDM_LIST_FAIL = 'CONSULTANT_CDM_LIST_FAIL';\nexport const CONSULTANT_CDM_LIST_RESET = 'CONSULTANT_CDM_LIST_RESET';\n\nexport const CONSULTANT_PRACTICE_LIST_REQUEST = 'CONSULTANT_PRACTICE_LIST_REQUEST';\nexport const CONSULTANT_PRACTICE_LIST_SUCCESS = 'CONSULTANT_PRACTICE_LIST_SUCCESS';\nexport const CONSULTANT_PRACTICE_LIST_FAIL = 'CONSULTANT_PRACTICE_LIST_FAIL';\nexport const CONSULTANT_PRACTICE_LIST_RESET = 'CONSULTANT_PRACTICE_LIST_RESET';\n\nexport const CONSULTANT_UPDATE_COMMENT_REQUEST = 'CONSULTANT_UPDATE_COMMENT_REQUEST';\nexport const CONSULTANT_UPDATE_COMMENT_SUCCESS = 'CONSULTANT_UPDATE_COMMENT_SUCCESS';\nexport const CONSULTANT_UPDATE_COMMENT_FAIL = 'CONSULTANT_UPDATE_COMMENT_FAIL';\nexport const CONSULTANT_UPDATE_COMMENT_RESET = 'CONSULTANT_UPDATE_COMMENT_RESET';\n\nexport const CONSULTANT_CDM_REQUEST = 'CONSULTANT_CDM_REQUEST';\nexport const CONSULTANT_CDM_SUCCESS = 'CONSULTANT_CDM_SUCCESS';\nexport const CONSULTANT_CDM_FAIL = 'CONSULTANT_CDM_FAIL';\nexport const CONSULTANT_CDM_RESET = 'CONSULTANT_CDM_RESET';\n\nexport const CONSULTANT_SKILLS_REQUEST = 'CONSULTANT_SKILLS_REQUEST';\nexport const CONSULTANT_SKILLS_SUCCESS = 'CONSULTANT_SKILLS_SUCCESS';\nexport const CONSULTANT_SKILLS_FAIL = 'CONSULTANT_SKILLS_FAIL';\nexport const CONSULTANT_SKILLS_RESET = 'CONSULTANT_SKILLS_RESET';\n\nexport const CONSULTANT_ALL_SKILLS_REQUEST = 'CONSULTANT_ALL_SKILLS_REQUEST';\nexport const CONSULTANT_ALL_SKILLS_SUCCESS = 'CONSULTANT_ALL_SKILLS_SUCCESS';\nexport const CONSULTANT_ALL_SKILLS_FAIL = 'CONSULTANT_ALL_SKILLS_FAIL';\nexport const CONSULTANT_ALL_SKILLS_RESET = 'CONSULTANT_ALL_SKILLS_RESET';\n\nexport const CONSULTANT_ALL_STAFF_REQUEST = 'CONSULTANT_ALL_STAFF_REQUEST';\nexport const CONSULTANT_ALL_STAFF_SUCCESS = 'CONSULTANT_ALL_STAFF_SUCCESS';\nexport const CONSULTANT_ALL_STAFF_FAIL = 'CONSULTANT_ALL_STAFF_FAIL';\nexport const CONSULTANT_ALL_STAFF_RESET = 'CONSULTANT_ALL_STAFF_RESET';\n\nexport const CONSULTANT_ADD_SKILL_REQUEST = 'CONSULTANT_ADD_SKILL_REQUEST';\nexport const CONSULTANT_ADD_SKILL_SUCCESS = 'CONSULTANT_ADD_SKILL_SUCCESS';\nexport const CONSULTANT_ADD_SKILL_FAIL = 'CONSULTANT_ADD_SKILL_FAIL';\nexport const CONSULTANT_ADD_SKILL_RESET = 'CONSULTANT_ADD_SKILL_RESET';\n\nexport const CONSULTANT_DELETE_SKILL_REQUEST = 'CONSULTANT_DELETE_SKILL_REQUEST';\nexport const CONSULTANT_DELETE_SKILL_SUCCESS = 'CONSULTANT_DELETE_SKILL_SUCCESS';\nexport const CONSULTANT_DELETE_SKILL_FAIL = 'CONSULTANT_DELETE_SKILL_FAIL';\nexport const CONSULTANT_DELETE_SKILL_RESET = 'CONSULTANT_DELETE_SKILL_RESET';\n\nexport const CONSULTANT_UPDATE_SKILL_REQUEST = 'CONSULTANT_UPDATE_SKILL_REQUEST';\nexport const CONSULTANT_UPDATE_SKILL_SUCCESS = 'CONSULTANT_UPDATE_SKILL_SUCCESS';\nexport const CONSULTANT_UPDATE_SKILL_FAIL = 'CONSULTANT_UPDATE_SKILL_FAIL';\nexport const CONSULTANT_UPDATE_SKILL_RESET = 'CONSULTANT_UPDATE_SKILL_RESET';\n\nexport const CONSULTANT_MASS_IMPORT_REQUEST = 'CONSULTANT_MASS_IMPORT_REQUEST';\nexport const CONSULTANT_MASS_IMPORT_SUCCESS = 'CONSULTANT_MASS_IMPORT_SUCCESS';\nexport const CONSULTANT_MASS_IMPORT_FAIL = 'CONSULTANT_MASS_IMPORT_FAIL';\nexport const CONSULTANT_MASS_IMPORT_RESET = 'CONSULTANT_MASS_IMPORT_RESET';\n\nexport const CONSULTANT_UPLOAD_WK_REQUEST = 'CONSULTANT_UPLOAD_WK_REQUEST';\nexport const CONSULTANT_UPLOAD_WK_SUCCESS = 'CONSULTANT_UPLOAD_WK_SUCCESS';\nexport const CONSULTANT_UPLOAD_WK_FAIL = 'CONSULTANT_UPLOAD_WK_FAIL';\nexport const CONSULTANT_UPLOAD_WK_RESET = 'CONSULTANT_UPLOAD_WK_RESET';\n\nexport const CONSULTANT_UPDATE_WK_REQUEST = 'CONSULTANT_UPDATE_WK_REQUEST';\nexport const CONSULTANT_UPDATE_WK_SUCCESS = 'CONSULTANT_UPDATE_WK_SUCCESS';\nexport const CONSULTANT_UPDATE_WK_FAIL = 'CONSULTANT_UPDATE_WK_FAIL';\nexport const CONSULTANT_UPDATE_WK_RESET = 'CONSULTANT_UPDATE_WK_RESET';\n\nexport const CONSULTANT_GRADE = ['Intern', 'Analyst', 'Consultant', 'Senior consultant', 'Manager', 'Senior manager', 'Director', 'Partner', 'Unknown', 'Commercial', 'Research'];","export const SKILL_LIST_REQUEST = 'SKILL_LIST_REQUEST';\nexport const SKILL_LIST_SUCCESS = 'SKILL_LIST_SUCCESS';\nexport const SKILL_LIST_FAIL = 'SKILL_LIST_FAIL';\nexport const SKILL_LIST_RESET = 'SKILL_LIST_RESET';\n\nexport const SKILL_DELETE_REQUEST = 'SKILL_DELETE_REQUEST';\nexport const SKILL_DELETE_SUCCESS = 'SKILL_DELETE_SUCCESS';\nexport const SKILL_DELETE_FAIL = 'SKILL_DELETE_FAIL';\nexport const SKILL_DELETE_RESET = 'SKILL_DELETE_RESET';\n\nexport const SKILL_CREATE_REQUEST = 'SKILL_CREATE_REQUEST';\nexport const SKILL_CREATE_SUCCESS = 'SKILL_CREATE_SUCCESS';\nexport const SKILL_CREATE_FAIL = 'SKILL_CREATE_FAIL';\nexport const SKILL_CREATE_RESET = 'SKILL_CREATE_RESET';","export const DEAL_CREATE_REQUEST = 'DEAL_CREATE_REQUEST';\nexport const DEAL_CREATE_SUCCESS = 'DEAL_CREATE_SUCCESS';\nexport const DEAL_CREATE_FAIL = 'DEAL_CREATE_FAIL';\nexport const DEAL_CREATE_RESET = 'DEAL_CREATE_RESET';\n\nexport const DEAL_UPDATE_REQUEST = 'DEAL_UPDATE_REQUEST';\nexport const DEAL_UPDATE_SUCCESS = 'DEAL_UPDATE_SUCCESS';\nexport const DEAL_UPDATE_FAIL = 'DEAL_UPDATE_FAIL';\nexport const DEAL_UPDATE_RESET = 'DEAL_UPDATE_RESET';\n\nexport const DEAL_ALL_LIST_REQUEST = 'DEAL_ALL_LIST_REQUEST';\nexport const DEAL_ALL_LIST_SUCCESS = 'DEAL_ALL_LIST_SUCCESS';\nexport const DEAL_ALL_LIST_FAIL = 'DEAL_ALL_LIST_FAIL';\nexport const DEAL_ALL_LIST_RESET = 'DEAL_ALL_LIST_RESET';\n\nexport const DEAL_DELETE_REQUEST = 'DEAL_DELETE_REQUEST';\nexport const DEAL_DELETE_SUCCESS = 'DEAL_DELETE_SUCCESS';\nexport const DEAL_DELETE_FAIL = 'DEAL_DELETE_FAIL';\nexport const DEAL_DELETE_RESET = 'DEAL_DELETE_RESET';\n\nexport const DEAL_EDIT_REQUEST = 'DEAL_EDIT_REQUEST';\nexport const DEAL_EDIT_SUCCESS = 'DEAL_EDIT_SUCCESS';\nexport const DEAL_EDIT_FAIL = 'DEAL_EDIT_FAIL';\nexport const DEAL_EDIT_RESET = 'DEAL_EDIT_RESET';\n\nexport const DEAL_OLD_REQUEST = 'DEAL_OLD_REQUEST';\nexport const DEAL_OLD_SUCCESS = 'DEAL_OLD_SUCCESS';\nexport const DEAL_OLD_FAIL = 'DEAL_OLD_FAIL';\nexport const DEAL_OLD_RESET = 'DEAL_OLD_RESET';\n\nexport const DEAL_MASS_IMPORT_REQUEST = 'DEAL_MASS_IMPORT_REQUEST';\nexport const DEAL_MASS_IMPORT_SUCCESS = 'DEAL_MASS_IMPORT_SUCCESS';\nexport const DEAL_MASS_IMPORT_FAIL = 'DEAL_MASS_IMPORT_FAIL';\nexport const DEAL_MASS_IMPORT_RESET = 'DEAL_MASS_IMPORT_RESET';\n\nexport const REQUEST_STATUS = [\n    {name: 'Identify Leader', staff: true, priority: 10},\n    {name: 'Identify Staff', staff: true, priority: 7},\n    {name: 'Staff to validate by leader', staff: false, priority: 5},\n    {name: 'Staff validated by leader', staff: false, priority: 0},\n    {name: 'Staff validated by client', staff: false, priority: 0},\n    {name: 'You can staff elsewhere', staff: false, priority: 0},\n    {name: 'Close', staff: false, priority: 0}\n];\n\nexport const TYPE_BUSINESS = [\n    {name: 'New business', priority: 10},\n    {name: 'New position', priority: 5},\n    {name: 'Replacement', priority: 1}\n];\n\nexport const DEAL_STATUS = [\n    {name: 'Lead', priority: 0, display: 'onTrack'},\n    {name: 'Proposal to send', priority: 5, display: 'onTrack'},\n    {name: 'Proposal sent', priority: 5, display: 'onTrack'},\n    {name: 'Won', priority: 10, display: 'win'},\n    {name: 'Abandoned', priority: 0, display: 'lost'},\n    {name: 'Lost', priority: 0, display: 'lots'},\n];\n\nexport const DEAL_PROBABILITY = [\n    {name: 10, priority: 1},\n    {name: 30, priority: 3},\n    {name: 50, priority: 5},\n    {name: 70, priority: 7},\n    {name: 100, priority: 10},\n];","export const ACCESS_LIST_REQUEST = 'ACCESS_LIST_REQUEST';\nexport const ACCESS_LIST_SUCCESS = 'ACCESS_LIST_SUCCESS';\nexport const ACCESS_LIST_FAIL = 'ACCESS_LIST_FAIL';\nexport const ACCESS_LIST_RESET = 'ACCESS_LIST_RESET';\n\nexport const ACCESS_UPDATE_FRONTACCESS_REQUEST = 'ACCESS_UPDATE_FRONTACCESS_REQUEST';\nexport const ACCESS_UPDATE_FRONTACCESS_SUCCESS = 'ACCESS_UPDATE_FRONTACCESS_SUCCESS';\nexport const ACCESS_UPDATE_FRONTACCESS_FAIL = 'ACCESS_UPDATE_FRONTACCESS_FAIL';\nexport const ACCESS_UPDATE_FRONTACCESS_RESET = 'ACCESS_UPDATE_FRONTACCESS_RESET';\n\nexport const ACCESS_MODES = ['no', 'yes', 'read', 'write'];\nexport const ACCESS_DATAS = ['my', 'team', 'department', 'domain', 'all'];","export const CLIENT_ALL_REQUEST = 'CLIENT_ALL_REQUEST';\nexport const CLIENT_ALL_SUCCESS = 'CLIENT_ALL_SUCCESS';\nexport const CLIENT_ALL_FAIL = 'CLIENT_ALL_FAIL';\nexport const CLIENT_ALL_RESET = 'CLIENT_ALL_RESET';\n\nexport const CLIENT_CREATE_REQUEST = 'CLIENT_CREATE_REQUEST';\nexport const CLIENT_CREATE_SUCCESS = 'CLIENT_CREATE_SUCCESS';\nexport const CLIENT_CREATE_FAIL = 'CLIENT_CREATE_FAIL';\nexport const CLIENT_CREATE_RESET = 'CLIENT_CREATE_RESET';\n\nexport const CLIENT_UPDATE_REQUEST = 'CLIENT_UPDATE_REQUEST';\nexport const CLIENT_UPDATE_SUCCESS = 'CLIENT_UPDATE_SUCCESS';\nexport const CLIENT_UPDATE_FAIL = 'CLIENT_UPDATE_FAIL';\nexport const CLIENT_UPDATE_RESET = 'CLIENT_UPDATE_RESET';\n\nexport const CLIENT_DELETE_REQUEST = 'CLIENT_DELETE_REQUEST';\nexport const CLIENT_DELETE_SUCCESS = 'CLIENT_DELETE_SUCCESS';\nexport const CLIENT_DELETE_FAIL = 'CLIENT_DELETE_FAIL';\nexport const CLIENT_DELETE_RESET = 'CLIENT_DELETE_RESET';","export const TACE_CREATE_REQUEST = 'TACE_CREATE_REQUEST';\nexport const TACE_CREATE_SUCCESS = 'TACE_CREATE_SUCCESS';\nexport const TACE_CREATE_FAIL = 'TACE_CREATE_FAIL';\nexport const TACE_CREATE_RESET = 'TACE_CREATE_RESET';","export const EMAIL_CONTACTS_LIST_REQUEST = 'EMAIL_CONTACTS_LIST_REQUEST';\nexport const EMAIL_CONTACTS_LIST_SUCCESS = 'EMAIL_CONTACTS_LIST_SUCCESS';\nexport const EMAIL_CONTACTS_LIST_FAIL = 'EMAIL_CONTACTS_LIST_FAIL';\nexport const EMAIL_CONTACTS_LIST_RESET = 'EMAIL_CONTACTS_LIST_RESET';\n\nexport const EMAIL_SEND_DECISION_REQUEST = 'EMAIL_SEND_DECISION_REQUEST';\nexport const EMAIL_SEND_DECISION_SUCCESS = 'EMAIL_SEND_DECISION_SUCCESS';\nexport const EMAIL_SEND_DECISION_FAIL = 'EMAIL_SEND_DECISION_FAIL';\nexport const EMAIL_SEND_DECISION_RESET = 'EMAIL_SEND_DECISION_RESET';","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { pxxAvailabilitiesReducer, pxxListReducer, pxxAllListReducer, pxxTACEReducer, pxxUpdateReducer, pxxMyToEditReducer, pxxImportLineReducer, pxxUploadFileReducer, updatePxxReducer } from './reducers/pxxReducers';\nimport { userLoginReducer, userListReducer, userDeleteReducer, userDetailsReducer, userUpdateReducer, userRegisterReducer, userRedirectAzReducer, userUpdateProfileReducer, userToCreateReducer, userCreateReducer } from './reducers/userReducers';\nimport { \n    consultantMyReducer, \n    consultantsMyListReducer, \n    consultantMyUpdateReducer, \n    consultantsMyAdminListReducer,\n    consultantCreateReducer,\n    consultantCDMListReducer,\n    consultantPracticeListReducer,\n    consultantDeleteReducer,\n    consultantUpdateCommentReducer,\n    consultantAllSkillsReducer,\n    consultantAddSkillReducer,\n    consultantDeleteSkillReducer,\n    consultantUpdateSkillReducer,\n    consultantAllStaffsReducer,\n    consultantSkillsReducer,\n    consultantGetCDMReducer,\n    consultantsAllLeadersReducer,\n    consultantsMassImportReducer,\n    consultantUploadWkReducer,\n    consultantUpdateWkReducer,\n    consultantDelegateUpdateReducer\n } from './reducers/consultantReducers';\n//import {  } from './reducers/pxxReducers';\nimport { skillCreateReducer, skillDelteReducer, skillListReducer } from './reducers/skillReducers'\nimport { dealAllListReducer, dealCreateReducer, dealDeleteReducer, dealEditeReducer, dealOldReducer, dealsImportMassReducer, dealUpdateReducer } from './reducers/dealReducer';\nimport { accessFrontUpdateReducer, accessListReducer } from './reducers/accessReducers';\nimport { clientAllReducer, clientCreateReducer, clientUpdateReducer, clientDeleteReducer } from './reducers/clientReducers';\nimport { createTaceReducer } from './reducers/taceReducer';\nimport { contactsListReducer, sendOneEmailReducer } from './reducers/emailReducers';\n\nexport const reducer = combineReducers({\n    userRegister: userRegisterReducer,\n    userLogin: userLoginReducer,\n    userRedirectAz: userRedirectAzReducer,\n    userList: userListReducer,\n    userDetails: userDetailsReducer,\n    userUpdate: userUpdateReducer,\n    userDelete: userDeleteReducer,\n    userUpdateProfil: userUpdateProfileReducer,\n    userToCreate: userToCreateReducer,\n    userCreate: userCreateReducer,\n    consultantUpdateComment: consultantUpdateCommentReducer,\n    consultantsMyAdminList: consultantsMyAdminListReducer,\n    consultantsMyList: consultantsMyListReducer,\n    consultantMy: consultantMyReducer,\n    consultantMyUpdate: consultantMyUpdateReducer,\n    consultantCreate: consultantCreateReducer,\n    consultantDelete: consultantDeleteReducer,\n    consultantCDMList: consultantCDMListReducer,\n    consultantDelegateUpdate: consultantDelegateUpdateReducer,\n    consultantPracticeList: consultantPracticeListReducer,\n    //consultantAllAccess: consultantAllAccessReducer,\n    consultantSkills: consultantSkillsReducer,\n    consultantAllSkills: consultantAllSkillsReducer,\n    consultantAllStaffs: consultantAllStaffsReducer,\n    consultantAddSkill: consultantAddSkillReducer,\n    consultantDeleteSkill: consultantDeleteSkillReducer,\n    consultantUpdateSkill: consultantUpdateSkillReducer,\n    consultantGetCdm: consultantGetCDMReducer,\n    consultantsAllLeaders: consultantsAllLeadersReducer,\n    consultantsMassImport: consultantsMassImportReducer,\n    consultantUploadWk: consultantUploadWkReducer,\n    consultantUpdateWk: consultantUpdateWkReducer,\n    pxxList: pxxListReducer,\n    pxxAllList: pxxAllListReducer,\n    pxxMyToEdit: pxxMyToEditReducer,\n    pxxUpdate: pxxUpdateReducer,\n    pxxTACE: pxxTACEReducer,\n    pxxAvailabilities: pxxAvailabilitiesReducer,\n    updatePxx: updatePxxReducer,\n    //pxxImportMass: pxxImportMassReducer,\n    pxxImportLine: pxxImportLineReducer,\n    pxxUploadFile: pxxUploadFileReducer,\n    skillList: skillListReducer,\n    skillDelete: skillDelteReducer,\n    skillCreate: skillCreateReducer,\n    dealCreate: dealCreateReducer,\n    dealAllList: dealAllListReducer,\n    dealDelete: dealDeleteReducer,\n    dealEdit: dealEditeReducer,\n    dealUpdate: dealUpdateReducer,\n    dealOld: dealOldReducer,\n    dealsImportMass: dealsImportMassReducer,\n    accessList: accessListReducer,\n    accessFrontUpdate: accessFrontUpdateReducer,\n    clientAll: clientAllReducer,\n    clientCreate: clientCreateReducer,\n    clientUpdate: clientUpdateReducer,\n    clientDelete: clientDeleteReducer,\n    createTace: createTaceReducer,\n    contactsList: contactsListReducer,\n    sendOneEmail: sendOneEmailReducer\n});\n\n// space for store on local\nconst userItemsFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst initialState = {\n    userLogin: {userInfo: userItemsFromStorage}\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import { USER_LOGIN_FAIL, \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGOUT, \n    USER_ADMIN_CHANGE_PRACTICE,\n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_RESET,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_REQUEST, \n    USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DELETE_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_RESET,\n    USER_UPDATE_FAIL,\n    USER_REDIRECT_AZ_REQUEST,\n    USER_REDIRECT_AZ_SUCCESS,\n    USER_REDIRECT_AZ_FAIL,\n    USER_REDIRECT_AZ_RESET,\n    USER_ADMIN_CHANGE_PRACTICE_FAIL,\n    USER_TO_CREATE_REQUEST,\n    USER_TO_CREATE_SUCCESS,\n    USER_TO_CREATE_FAIL,\n    USER_TO_CREATE_RESET,\n    USER_CREATE_REQUEST,\n    USER_CREATE_SUCCESS,\n    USER_CREATE_FAIL,\n    USER_CREATE_RESET\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true };\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LOGOUT:\n            return {};\n        case USER_ADMIN_CHANGE_PRACTICE:\n            return { loading: false, userInfo: action.payload };\n        case USER_ADMIN_CHANGE_PRACTICE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userRedirectAzReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REDIRECT_AZ_REQUEST:\n            return { loading: true };\n        case USER_REDIRECT_AZ_SUCCESS:\n            return { loading: false, redirectURL: action.payload.redirectURL };\n        case USER_REDIRECT_AZ_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_REDIRECT_AZ_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_REGISTER_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userDetailsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { loading: true };\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload };\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_PROFILE_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\nexport const userListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true };\n        case USER_LIST_SUCCESS:\n            return { \n                loading: false, \n                users: action.payload.users,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count \n            };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LIST_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\n\nexport const userDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DELETE_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\n\nexport const userUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const userToCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_TO_CREATE_REQUEST:\n            return { loading: true };\n        case USER_TO_CREATE_SUCCESS:\n            return {\n                loading: false, \n                usersListToCreate: action.payload.usersListToCreate,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case USER_TO_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_TO_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const userCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_CREATE_REQUEST:\n            return { loading: true };\n        case USER_CREATE_SUCCESS:\n            return {loading: false, success: true, consultantId: action.payload.consultantId};\n        case USER_CREATE_FAIL:\n            return { loading: false, error: action.payload.message, consultantId: action.payload.consultantId };\n        case USER_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import {\n    CONSULTANTS_MY_DETAILS_REQUEST,\n    CONSULTANTS_MY_DETAILS_SUCCESS,\n    CONSULTANTS_MY_DETAILS_FAIL,\n    CONSULTANTS_MY_DETAILS_FOCUS,\n    CONSULTANTS_MY_DETAILS_RESET,\n    CONSULTANT_MY_REQUEST,\n    CONSULTANT_MY_SUCCESS,\n    CONSULTANT_MY_FAIL,\n    CONSULTANT_MY_RESET,\n    CONSULTANT_MY_UPDATE_REQUEST,\n    CONSULTANT_MY_UPDATE_SUCCESS,\n    CONSULTANT_MY_UPDATE_FAIL,\n    CONSULTANT_MY_UPDATE_RESET,\n    CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST,\n    CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS,\n    CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n    CONSULTANTS_ALL_ADMIN_DETAILS_RESET,\n    CONSULTANT_CREATE_REQUEST,\n    CONSULTANT_CREATE_SUCCESS,\n    CONSULTANT_CREATE_FAIL,\n    CONSULTANT_CREATE_RESET,\n    CONSULTANT_CDM_LIST_REQUEST,\n    CONSULTANT_CDM_LIST_SUCCESS,\n    CONSULTANT_CDM_LIST_FAIL,\n    CONSULTANT_CDM_LIST_RESET,\n    CONSULTANT_PRACTICE_LIST_REQUEST,\n    CONSULTANT_PRACTICE_LIST_SUCCESS,\n    CONSULTANT_PRACTICE_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_RESET,\n    CONSULTANT_DELETE_REQUEST,\n    CONSULTANT_DELETE_SUCCESS,\n    CONSULTANT_DELETE_FAIL,\n    CONSULTANT_DELETE_RESET,\n    CONSULTANT_UPDATE_COMMENT_REQUEST,\n    CONSULTANT_UPDATE_COMMENT_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_FAIL,\n    CONSULTANT_UPDATE_COMMENT_RESET,\n    //CONSULTANT_ALL_ACCESS_REQUEST,\n    //CONSULTANT_ALL_ACCESS_SUCCESS,\n    //CONSULTANT_ALL_ACCESS_FAIL,\n    //CONSULTANT_ALL_ACCESS_RESET,\n    CONSULTANT_ALL_SKILLS_REQUEST,\n    CONSULTANT_ALL_SKILLS_SUCCESS,\n    CONSULTANT_ALL_SKILLS_FAIL,\n    CONSULTANT_ALL_SKILLS_RESET,\n    CONSULTANT_ADD_SKILL_REQUEST,\n    CONSULTANT_ADD_SKILL_SUCCESS,\n    CONSULTANT_ADD_SKILL_FAIL,\n    CONSULTANT_ADD_SKILL_RESET,\n    CONSULTANT_DELETE_SKILL_REQUEST,\n    CONSULTANT_DELETE_SKILL_SUCCESS,\n    CONSULTANT_DELETE_SKILL_FAIL,\n    CONSULTANT_DELETE_SKILL_RESET,\n    CONSULTANT_UPDATE_SKILL_REQUEST,\n    CONSULTANT_UPDATE_SKILL_SUCCESS,\n    CONSULTANT_UPDATE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_RESET,\n    CONSULTANT_ALL_STAFF_REQUEST,\n    CONSULTANT_ALL_STAFF_SUCCESS,\n    CONSULTANT_ALL_STAFF_FAIL,\n    CONSULTANT_ALL_STAFF_RESET,\n    CONSULTANT_SKILLS_REQUEST,\n    CONSULTANT_SKILLS_SUCCESS,\n    CONSULTANT_SKILLS_FAIL,\n    CONSULTANT_SKILLS_RESET,\n    CONSULTANT_CDM_REQUEST,\n    CONSULTANT_CDM_SUCCESS,\n    CONSULTANT_CDM_FAIL,\n    CONSULTANT_CDM_RESET,\n    CONSULTANTS_ALL_LEADERS_REQUEST,\n    CONSULTANTS_ALL_LEADERS_SUCCESS,\n    CONSULTANTS_ALL_LEADERS_FAIL,\n    CONSULTANTS_ALL_LEADERS_RESET,\n    CONSULTANT_MASS_IMPORT_REQUEST,\n    CONSULTANT_MASS_IMPORT_SUCCESS,\n    CONSULTANT_MASS_IMPORT_FAIL,\n    CONSULTANT_MASS_IMPORT_RESET,\n    CONSULTANT_UPLOAD_WK_REQUEST,\n    CONSULTANT_UPLOAD_WK_SUCCESS,\n    CONSULTANT_UPLOAD_WK_FAIL,\n    CONSULTANT_UPLOAD_WK_RESET,\n    CONSULTANT_UPDATE_WK_REQUEST,\n    CONSULTANT_UPDATE_WK_SUCCESS,\n    CONSULTANT_UPDATE_WK_FAIL,\n    CONSULTANT_UPDATE_WK_RESET,\n    CONSULTANT_DELEGATE_UPDATE_REQUEST,\n    CONSULTANT_DELEGATE_UPDATE_SUCCESS,\n    CONSULTANT_DELEGATE_UPDATE_FAIL,\n    CONSULTANT_DELEGATE_UPDATE_RESET\n} from '../constants/consultantConstants';\n\nexport const consultantsMyListReducer = (state = {focus: 0}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_MY_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANTS_MY_DETAILS_SUCCESS:\n            return { ...state, loading: false, consultantsMy: action.payload };\n        case CONSULTANTS_MY_DETAILS_FAIL:\n            return { ...state, loading: false, error: action.payload };\n        case CONSULTANTS_MY_DETAILS_FOCUS:\n            return { ...state, focus: action.payload }\n        case CONSULTANTS_MY_DETAILS_RESET:\n            return { focus: 0 }\n        default:\n            return state;\n    }\n};\n\n/*\nexport const consultantsMyAdminListReducer = (state = {\n    loading: true, \n    consultantsMyAdmin: [\n        {\n            name: '',\n            matricule: '',\n            arrival: '',\n            leaving: '',\n            seriority: '',\n            comment: '',\n            practice: ''\n        }],\n    focus: 0\n}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS:\n            return { ...state, loading: false, consultantsMyAdmin: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FAIL:\n            return { ...state, loading: false, error: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS:\n            return { ...state, focus: action.payload }\n        case CONSULTANTS_ALL_ADMIN_DETAILS_RESET:\n            return { loading: true, consultantsMyAdmin: [\n                                {\n                                    name: '',\n                                    matricule: '',\n                                    arrival: '',\n                                    leaving: '',\n                                    seriority: '',\n                                    comment: '',\n                                    practice: ''\n                                }], focus: 0 }\n        default:\n            return state;\n    }\n};\n*/\n/*\nexport const consultantMyReducer = (state = { consultant: {} }, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANT_MY_SUCCESS:\n            return { loading: false, consultant: action.payload };\n        case CONSULTANT_MY_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_RESET:\n            return { consultant: {} }\n        default:\n            return state;\n    }\n};\n*/\n\nexport const consultantMyReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MY_SUCCESS:\n            return { loading: false, consultant: action.payload };\n        case CONSULTANT_MY_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantMyUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_UPDATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MY_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_MY_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_UPDATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantDelegateUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELEGATE_UPDATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELEGATE_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELEGATE_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_DELEGATE_UPDATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_CREATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CREATE_SUCCESS:\n            return { loading: false, success: true, consultantCreated: action.payload };\n        case CONSULTANT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CREATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELETE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_DELETE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantCDMListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_CDM_LIST_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CDM_LIST_SUCCESS:\n            return { loading: false, cdmList: action.payload };\n        case CONSULTANT_CDM_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CDM_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantPracticeListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_PRACTICE_LIST_REQUEST:\n            return { loading: true };\n        case CONSULTANT_PRACTICE_LIST_SUCCESS:\n            return { loading: false, practiceList: action.payload };\n        case CONSULTANT_PRACTICE_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_PRACTICE_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateCommentReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_COMMENT_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_COMMENT_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_UPDATE_COMMENT_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_UPDATE_COMMENT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsMyAdminListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST:\n            return { loading: true };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS:\n            return { \n                loading: false, \n                consultantsMyAdmin: action.payload.consultants,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsAllLeadersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_LEADERS_REQUEST:\n            return { loading: true };\n        case CONSULTANTS_ALL_LEADERS_SUCCESS:\n            return { loading: false, leaderslist: action.payload };\n        case CONSULTANTS_ALL_LEADERS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANTS_ALL_LEADERS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantGetCDMReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CONSULTANT_CDM_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CDM_SUCCESS:\n            return { loading: false, success: true, cdm: action.payload };\n        case CONSULTANT_CDM_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CDM_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantSkillsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_SKILLS_REQUEST:\n            return { loading: true };\n        case CONSULTANT_SKILLS_SUCCESS:\n            return { loading: false, skills: action.payload };\n        case CONSULTANT_SKILLS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_SKILLS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAllSkillsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ALL_SKILLS_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ALL_SKILLS_SUCCESS:\n            return { loading: false, skills: action.payload };\n        case CONSULTANT_ALL_SKILLS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_ALL_SKILLS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAllStaffsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ALL_STAFF_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ALL_STAFF_SUCCESS:\n            return { loading: false, staffings: action.payload };\n        case CONSULTANT_ALL_STAFF_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_ALL_STAFF_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAddSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ADD_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ADD_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_ADD_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_ADD_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantDeleteSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELETE_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELETE_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELETE_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_DELETE_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_UPDATE_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPDATE_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsMassImportReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MASS_IMPORT_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MASS_IMPORT_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_MASS_IMPORT_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_MASS_IMPORT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUploadWkReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPLOAD_WK_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPLOAD_WK_SUCCESS:\n            return { loading: false, success: true, path: action.payload };\n        case CONSULTANT_UPLOAD_WK_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPLOAD_WK_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateWkReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_WK_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_WK_SUCCESS:\n            return { loading: false, success: true, message: action.payload };\n        case CONSULTANT_UPDATE_WK_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPDATE_WK_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import {\n    PXX_LIST_REQUEST,\n    PXX_LIST_SUCCESS,\n    PXX_LIST_FAIL,\n    PXX_LIST_RESET,\n    PXX_MY_TO_EDIT_REQUEST,\n    PXX_MY_TO_EDIT_SUCCESS,\n    PXX_MY_TO_EDIT_FAIL,\n    PXX_MY_TO_EDIT_RESET,\n    PXX_UPDATE_REQUEST,\n    PXX_UPDATE_SUCCESS,\n    PXX_UPDATE_FAIL,\n    PXX_UPDATE_RESET,\n    PXX_TACE_REQUEST,\n    PXX_TACE_SUCCESS,\n    PXX_TACE_FAIL,\n    PXX_TACE_RESET,\n    PXX_AVAILABILITIES_REQUEST,\n    PXX_AVAILABILITIES_SUCCESS,\n    PXX_AVAILABILITIES_FAIL,\n    PXX_AVAILABILITIES_RESET,\n    PXX_ALL_REQUEST,\n    PXX_ALL_SUCCESS,\n    PXX_ALL_FAIL,\n    PXX_ALL_RESET,\n    PXX_IMPORT_LINE_REQUEST,\n    PXX_IMPORT_LINE_SUCCESS,\n    PXX_IMPORT_LINE_FAIL,\n    PXX_IMPORT_LINE_RESET,\n    PXX_UPLOAD_FILE_REQUEST,\n    PXX_UPLOAD_FILE_SUCCESS,\n    PXX_UPLOAD_FILE_FAIL,\n    PXX_UPLOAD_FILE_RESET,\n    PXX_UPDATE_PXX_REQUEST,\n    PXX_UPDATE_PXX_SUCCESS,\n    PXX_UPDATE_PXX_FAIL,\n    PXX_UPDATE_PXX_RESET\n} from '../constants/pxxConstants';\n\nexport const pxxMyToEditReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_MY_TO_EDIT_REQUEST:\n            return { loading: true };\n        case PXX_MY_TO_EDIT_SUCCESS:\n            return { loading: false, pxx: action.payload };\n        case PXX_MY_TO_EDIT_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_MY_TO_EDIT_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n};\n\nexport const pxxUpdateReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPDATE_REQUEST:\n            return { loading: true };\n        case PXX_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case PXX_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPDATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxTACEReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_TACE_REQUEST:\n            return { loading: true, success: false };\n        case PXX_TACE_SUCCESS:\n            return { loading: false, success: true, tace: action.payload };\n        case PXX_TACE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_TACE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxAvailabilitiesReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_AVAILABILITIES_REQUEST:\n            return { loading: true, success: false };\n        case PXX_AVAILABILITIES_SUCCESS:\n            return { loading: false, success: true, availabilities: action.payload };\n        case PXX_AVAILABILITIES_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_AVAILABILITIES_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxAllListReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_ALL_REQUEST:\n            return { loading: true, success: false };\n        case PXX_ALL_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                pxxs: action.payload.pxxs,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case PXX_ALL_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_ALL_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\n/* export const pxxImportMassReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_IMPORT_MASS_REQUEST:\n            return { loading: true };\n        case PXX_IMPORT_MASS_SUCCESS:\n            return { \n                loading: false, \n                success:true, \n                message: action.payload.message,\n                datas: action.payload.datas\n            };\n        case PXX_IMPORT_MASS_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_IMPORT_MASS_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n}; */\n\nexport const pxxImportLineReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_IMPORT_LINE_REQUEST:\n            return { loading: true };\n        case PXX_IMPORT_LINE_SUCCESS:\n            return { loading: false, success:true, updatedLine: action.payload };\n        case PXX_IMPORT_LINE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_IMPORT_LINE_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n};\n\nexport const pxxUploadFileReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPLOAD_FILE_REQUEST:\n            return { loading: true };\n        case PXX_UPLOAD_FILE_SUCCESS:\n            return { loading: false, success:true, path: action.payload };\n        case PXX_UPLOAD_FILE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPLOAD_FILE_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\nexport const updatePxxReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPDATE_PXX_REQUEST:\n            return { loading: true };\n        case PXX_UPDATE_PXX_SUCCESS:\n            return { loading: false, success:true, message: action.payload };\n        case PXX_UPDATE_PXX_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPDATE_PXX_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\n\n// TO DELETE //\n\nexport const pxxListReducer = (state= { pxxs: { pxxMonthInformation: [], pxxUserList: [] } }, action) => {\n    switch(action.type) {\n        case PXX_LIST_REQUEST:\n            return { loading: true, pxxs: {} };\n        case PXX_LIST_SUCCESS:\n            return { loading: false, pxxs: action.payload };\n        case PXX_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_LIST_RESET:\n            return { pxxs: { pxxMonthInformation: [], pxxUserList: [] } };\n        default:\n            return state ;\n    }\n};","import { \n    SKILL_LIST_REQUEST, \n    SKILL_LIST_RESET, \n    SKILL_LIST_SUCCESS, \n    SKILL_LIST_FAIL, \n    SKILL_DELETE_REQUEST,\n    SKILL_DELETE_SUCCESS,\n    SKILL_DELETE_FAIL,\n    SKILL_DELETE_RESET,\n    SKILL_CREATE_REQUEST,\n    SKILL_CREATE_SUCCESS,\n    SKILL_CREATE_FAIL,\n    SKILL_CREATE_RESET\n} from \"../constants/skillsConstants\";\n\nexport const skillListReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_LIST_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_LIST_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                skills: action.payload.skills,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n             };\n        case SKILL_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_LIST_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const skillDelteReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_DELETE_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case SKILL_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_DELETE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const skillCreateReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_CREATE_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case SKILL_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_CREATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};","import { \n    DEAL_ALL_LIST_FAIL,\n    DEAL_ALL_LIST_REQUEST,\n    DEAL_ALL_LIST_RESET,\n    DEAL_ALL_LIST_SUCCESS,\n    DEAL_CREATE_FAIL, \n    DEAL_CREATE_REQUEST, \n    DEAL_CREATE_RESET, \n    DEAL_CREATE_SUCCESS, \n    DEAL_DELETE_FAIL, \n    DEAL_DELETE_REQUEST,\n    DEAL_DELETE_RESET,\n    DEAL_DELETE_SUCCESS,\n    DEAL_EDIT_FAIL,\n    DEAL_EDIT_REQUEST,\n    DEAL_EDIT_RESET,\n    DEAL_EDIT_SUCCESS,\n    DEAL_MASS_IMPORT_FAIL,\n    DEAL_MASS_IMPORT_REQUEST,\n    DEAL_MASS_IMPORT_RESET,\n    DEAL_MASS_IMPORT_SUCCESS,\n    DEAL_OLD_FAIL,\n    DEAL_OLD_REQUEST,\n    DEAL_OLD_RESET,\n    DEAL_OLD_SUCCESS,\n    DEAL_UPDATE_FAIL,\n    DEAL_UPDATE_REQUEST,\n    DEAL_UPDATE_RESET,\n    DEAL_UPDATE_SUCCESS\n} from \"../constants/dealConstants\";\n\nexport const dealCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_CREATE_REQUEST:\n            return { loading: true };\n        case DEAL_CREATE_SUCCESS:\n            return { loading: false, success: true, createId: action.payload };\n        case DEAL_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_UPDATE_REQUEST:\n            return { loading: true };\n        case DEAL_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case DEAL_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealAllListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_ALL_LIST_REQUEST:\n            return { loading: true };\n        case DEAL_ALL_LIST_SUCCESS:\n            return { \n                loading: false, \n                success: true,\n                deals: action.payload.deals,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case DEAL_ALL_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_ALL_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_DELETE_REQUEST:\n            return { loading: true };\n        case DEAL_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case DEAL_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_DELETE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealEditeReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_EDIT_REQUEST:\n            return { loading: true };\n        case DEAL_EDIT_SUCCESS:\n            return { loading: false, success: true, deal: action.payload };\n        case DEAL_EDIT_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_EDIT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealOldReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_OLD_REQUEST:\n            return { loading: true };\n        case DEAL_OLD_SUCCESS:\n            return { loading: false, success: true, oldDeals: action.payload };\n        case DEAL_OLD_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_OLD_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealsImportMassReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_MASS_IMPORT_REQUEST:\n            return { loading: true };\n        case DEAL_MASS_IMPORT_SUCCESS:\n            return { loading: false, success: true, datas: action.payload.datas };\n        case DEAL_MASS_IMPORT_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_MASS_IMPORT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    ACCESS_LIST_FAIL, \n    ACCESS_LIST_REQUEST, \n    ACCESS_LIST_RESET, \n    ACCESS_LIST_SUCCESS, \n    ACCESS_UPDATE_FRONTACCESS_FAIL, \n    ACCESS_UPDATE_FRONTACCESS_REQUEST,\n    ACCESS_UPDATE_FRONTACCESS_SUCCESS,\n    ACCESS_UPDATE_FRONTACCESS_RESET\n} from \"../constants/accessConstants\";\n\nexport const accessListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ACCESS_LIST_REQUEST:\n            return { loading: true };\n        case ACCESS_LIST_SUCCESS:\n            return { loading: false, access: action.payload };\n        case ACCESS_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case ACCESS_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const accessFrontUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ACCESS_UPDATE_FRONTACCESS_REQUEST:\n            return { loading: true };\n        case ACCESS_UPDATE_FRONTACCESS_SUCCESS:\n            return { loading: false, success: true };\n        case ACCESS_UPDATE_FRONTACCESS_FAIL:\n            return { loading: false, error: action.payload };\n        case ACCESS_UPDATE_FRONTACCESS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    CLIENT_ALL_FAIL, \n    CLIENT_ALL_REQUEST, \n    CLIENT_ALL_RESET, \n    CLIENT_ALL_SUCCESS, \n    CLIENT_CREATE_FAIL, \n    CLIENT_CREATE_REQUEST,\n    CLIENT_CREATE_RESET,\n    CLIENT_CREATE_SUCCESS,\n    CLIENT_UPDATE_FAIL,\n    CLIENT_UPDATE_REQUEST,\n    CLIENT_UPDATE_SUCCESS,\n    CLIENT_UPDATE_RESET,\n    CLIENT_DELETE_REQUEST,\n    CLIENT_DELETE_SUCCESS,\n    CLIENT_DELETE_FAIL,\n    CLIENT_DELETE_RESET\n} from \"../constants/clientConstants\";\n\nexport const clientAllReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_ALL_REQUEST:\n            return { loading: true };\n        case CLIENT_ALL_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                clients: action.payload.clients,\n                page: action.payload.page,\n                pages: action.payload.pages,\n                count: action.payload.count\n            };\n        case CLIENT_ALL_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_ALL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientCreateReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_CREATE_REQUEST:\n            return { loading: true };\n        case CLIENT_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientUpdateReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_UPDATE_REQUEST:\n            return { loading: true };\n        case CLIENT_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_DELETE_REQUEST:\n            return { loading: true };\n        case CLIENT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_DELETE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    TACE_CREATE_FAIL,\n    TACE_CREATE_REQUEST,\n    TACE_CREATE_RESET,\n    TACE_CREATE_SUCCESS,\n} from \"../constants/taceConstants\";\n\nexport const createTaceReducer = (state= {}, action) => {\n    switch(action.type) {\n        case TACE_CREATE_REQUEST:\n            return { loading: true, success: false };\n        case TACE_CREATE_SUCCESS:\n            return { loading: false, taceData: action.payload };\n        case TACE_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case TACE_CREATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};","import { \n    EMAIL_CONTACTS_LIST_FAIL, \n    EMAIL_CONTACTS_LIST_REQUEST, \n    EMAIL_CONTACTS_LIST_RESET, \n    EMAIL_CONTACTS_LIST_SUCCESS, \n    EMAIL_SEND_DECISION_FAIL, \n    EMAIL_SEND_DECISION_REQUEST,\n    EMAIL_SEND_DECISION_SUCCESS,\n    EMAIL_SEND_DECISION_RESET\n} from \"../constants/emailConstants\";\n\nexport const contactsListReducer = (state= { }, action) => {\n    switch(action.type) {\n        case EMAIL_CONTACTS_LIST_REQUEST:\n            return { loading: true };\n        case EMAIL_CONTACTS_LIST_SUCCESS:\n            return { loading: false, contacts: action.payload };\n        case EMAIL_CONTACTS_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case EMAIL_CONTACTS_LIST_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\nexport const sendOneEmailReducer = (state= { }, action) => {\n    switch(action.type) {\n        case EMAIL_SEND_DECISION_REQUEST:\n            return { loading: true };\n        case EMAIL_SEND_DECISION_SUCCESS:\n            return { success:true, loading: false, email: action.payload.email };\n        case EMAIL_SEND_DECISION_FAIL:\n            return { loading: false, error: action.payload };\n        case EMAIL_SEND_DECISION_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};","import axios from 'axios';\nimport { CONSULTANTS_MY_DETAILS_RESET, CONSULTANT_MY_RESET, CONSULTANT_PRACTICE_LIST_RESET } from '../constants/consultantConstants';\nimport { PXX_LIST_RESET, PXX_MY_TO_EDIT_RESET, PXX_UPDATE_RESET } from '../constants/pxxConstants';\nimport { \n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DELETE_REQUEST, \n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS, \n    USER_DETAILS_FAIL, \n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL, \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_REGISTER_RESET,\n    USER_REDIRECT_AZ_REQUEST,\n    USER_REDIRECT_AZ_SUCCESS,\n    USER_REDIRECT_AZ_FAIL,\n    USER_ADMIN_CHANGE_PRACTICE_FAIL,\n    USER_ADMIN_CHANGE_PRACTICE,\n    USER_TO_CREATE_REQUEST,\n    USER_TO_CREATE_SUCCESS,\n    USER_TO_CREATE_FAIL,\n    USER_CREATE_REQUEST,\n    USER_CREATE_SUCCESS,\n    USER_CREATE_FAIL\n} from \"../constants/userConstants\";\n\n\n//export const login = (email, password) => async(dispatch) => {\nexport const login = (type, param) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        let data = '';\n        if (type === 'LOCAL') {\n            // data contains all shared user informations\n            data  = await axios.post('/api/users/login', {email: param.email, password: param.password}, config);\n        }\n\n        if (type === 'AZ') {\n            data = await axios.get(`/api/users/loginAz?code=${param.code}`, config);\n        }\n\n        const userInfo = {\n            ...data.data,\n            accountType: type,\n        }\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: userInfo\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(userInfo))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getTransparentNewToken = (information, userInfo) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n        \n        //console.log(\"information\", information);\n        const type = 'LOCAL'\n        //const { userLogin: { userInfo } } = getState();\n\n        //console.log('userInfo', userInfo);\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data }  = await axios.post('/api/users/renewToken', information, config);\n\n        const userInfoUpdated = {\n            ...data,\n            accountType: type,\n        }\n\n        //console.log(\"userInfoUpdated\", userInfoUpdated);\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: userInfoUpdated\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(userInfoUpdated));\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const changeAdminPractice = (userInfo, practice) => async (dispatch) => {\n    try {\n        \n        const newUserInfo = userInfo;\n        newUserInfo.consultantProfil.practice = practice\n\n        dispatch({\n            type: USER_ADMIN_CHANGE_PRACTICE,\n            payload: newUserInfo\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(newUserInfo));\n\n    } catch (error) {\n        dispatch({\n            type: USER_ADMIN_CHANGE_PRACTICE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getRedirectAz = () => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_REDIRECT_AZ_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        // Check if user is configured in app\n        const { data } = await axios.get('/api/users/redirectAz', config);\n\n        dispatch({\n            type: USER_REDIRECT_AZ_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_REDIRECT_AZ_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const logout = () => (dispatch) => {\n    //localStorage.removeItem('userInfo');\n    localStorage.clear();\n    dispatch({type: USER_LOGOUT});\n    dispatch({type: USER_REGISTER_RESET});\n    dispatch({type: CONSULTANTS_MY_DETAILS_RESET});\n    dispatch({type: CONSULTANT_MY_RESET});\n    dispatch({type: PXX_LIST_RESET});\n    dispatch({type: PXX_MY_TO_EDIT_RESET});\n    dispatch({type: PXX_UPDATE_RESET});\n    dispatch({type: CONSULTANT_PRACTICE_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.post('/api/users', {name, email, password}, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        });\n\n        /*\n        // we also want to inform user is logged\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        */\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getUserDetails = (id) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.get(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.put(`/api/users/profile`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        });\n\n        // dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload: data,\n        // });\n\n        // dispatch({\n        //     type: USER_DETAILS_SUCCESS,\n        //     payload: data,\n        // });\n\n        //localStorage.setItem('userInfo', JSON.stringify(data));\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const listUsers = (practice='', keyword='', pageNumber='', pageSize='15') => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_LIST_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n        //const userPractice = userInfo.consultantProfil.practice;\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        //const { data } = await axios.get(`/api/users`, config);\n        const { data } = await axios.get(`/api/users?practice=${practice}&keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const deleteUser = (id) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateUser = (user) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/users/${user._id}`, user, config);\n\n        dispatch({ type: USER_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getUsersToCreate = ({practice, keyword, pageSize, pageNumber}) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_TO_CREATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/users/list-to-create?practice=${practice}&consultantName=${keyword.consultantName}&cdmName=${keyword.cdmName}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n\n        dispatch({ type: USER_TO_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: USER_TO_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const createUser = (user) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_CREATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/users/create-from-ihm`, user, config);\n\n        dispatch({ type: USER_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: USER_CREATE_FAIL,\n            payload: error.response.data\n            // payload: error.response && error.response.data.message\n            //     ? error.response.data.message\n            //     : error.message\n        });\n        //console.log(error.response);\n    }\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst DisplayChildren = ({ access, children }) => {\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    let grantedAccess = false;\n\n    if (userInfo) {\n        const rule = userInfo.profil.frontAccess.filter(x => x.id === access);\n        if (rule.length > 0) {\n            grantedAccess = rule[0].mode !== 'no' ? true : false\n        }\n    }\n\n    return (\n        <span>\n            {grantedAccess && children}\n        </span>\n    )\n}\n\nexport default DisplayChildren;\n","import axios from 'axios';\nimport {\n    CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n    CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST,\n    CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS,\n    CONSULTANTS_MY_DETAILS_FAIL,\n    CONSULTANTS_MY_DETAILS_FOCUS,\n    CONSULTANTS_MY_DETAILS_REQUEST,\n    CONSULTANTS_MY_DETAILS_SUCCESS,\n    CONSULTANT_MY_FAIL,\n    CONSULTANT_MY_REQUEST,\n    CONSULTANT_MY_SUCCESS,\n    CONSULTANT_MY_UPDATE_FAIL,\n    CONSULTANT_MY_UPDATE_REQUEST,\n    CONSULTANT_MY_UPDATE_SUCCESS,\n    CONSULTANT_CREATE_REQUEST,\n    CONSULTANT_CREATE_SUCCESS,\n    CONSULTANT_CREATE_FAIL,\n    CONSULTANT_CDM_LIST_REQUEST,\n    CONSULTANT_CDM_LIST_SUCCESS,\n    CONSULTANT_CDM_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_REQUEST,\n    CONSULTANT_PRACTICE_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_SUCCESS,\n    CONSULTANT_DELETE_REQUEST,\n    CONSULTANT_DELETE_FAIL,\n    CONSULTANT_DELETE_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_REQUEST,\n    CONSULTANT_UPDATE_COMMENT_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_FAIL,\n    //CONSULTANT_ALL_ACCESS_REQUEST,\n    //CONSULTANT_ALL_ACCESS_SUCCESS,\n    //CONSULTANT_ALL_ACCESS_FAIL,\n    CONSULTANT_ALL_SKILLS_REQUEST,\n    CONSULTANT_ALL_SKILLS_SUCCESS,\n    CONSULTANT_ALL_SKILLS_FAIL,\n    CONSULTANT_ADD_SKILL_REQUEST,\n    CONSULTANT_ADD_SKILL_SUCCESS,\n    CONSULTANT_ADD_SKILL_FAIL,\n    CONSULTANT_DELETE_SKILL_REQUEST,\n    CONSULTANT_DELETE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_REQUEST,\n    CONSULTANT_UPDATE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_SUCCESS,\n    CONSULTANT_ALL_STAFF_REQUEST,\n    CONSULTANT_ALL_STAFF_SUCCESS,\n    CONSULTANT_ALL_STAFF_FAIL,\n    CONSULTANT_DELETE_SKILL_SUCCESS,\n    CONSULTANT_SKILLS_REQUEST,\n    CONSULTANT_SKILLS_FAIL,\n    CONSULTANT_SKILLS_SUCCESS,\n    CONSULTANT_CDM_REQUEST,\n    CONSULTANT_CDM_SUCCESS,\n    CONSULTANT_CDM_FAIL,\n    CONSULTANTS_ALL_LEADERS_REQUEST,\n    CONSULTANTS_ALL_LEADERS_SUCCESS,\n    CONSULTANTS_ALL_LEADERS_FAIL,\n    CONSULTANT_MASS_IMPORT_REQUEST,\n    CONSULTANT_MASS_IMPORT_SUCCESS,\n    CONSULTANT_MASS_IMPORT_FAIL,\n    CONSULTANT_UPLOAD_WK_REQUEST,\n    CONSULTANT_UPLOAD_WK_SUCCESS,\n    CONSULTANT_UPLOAD_WK_FAIL,\n    CONSULTANT_UPDATE_WK_REQUEST,\n    CONSULTANT_UPDATE_WK_SUCCESS,\n    CONSULTANT_UPDATE_WK_FAIL,\n    CONSULTANT_DELEGATE_UPDATE_REQUEST,\n    CONSULTANT_DELEGATE_UPDATE_SUCCESS,\n    CONSULTANT_DELEGATE_UPDATE_FAIL\n} from '../constants/consultantConstants';\n\nexport const getAllMyConsultants = (option = '') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANTS_MY_DETAILS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants?option=${option}`, config);        \n\n        dispatch({ type: CONSULTANTS_MY_DETAILS_SUCCESS, payload: data });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANTS_MY_DETAILS_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const setConsultantFocus = (focus) => async(dispatch) => {\n    dispatch({type: CONSULTANTS_MY_DETAILS_FOCUS, payload: focus});\n}\n\nexport const getMyConsultant = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MY_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_MY_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateMyConsultant = (consultant) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MY_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/${consultant._id}`, consultant, config);\n        if (!data) {\n            throw new Error('Error: your modification is not saved')\n        }\n\n        dispatch({ type: CONSULTANT_MY_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MY_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateDelegateConsultant = (consultantId, delegation) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELEGATE_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/delegate/${consultantId}`, delegation, config);\n        if (!data) {\n            throw new Error('Error: your modification is not saved')\n        }\n\n        dispatch({ type: CONSULTANT_DELEGATE_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_DELEGATE_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const createConsultant = (consultant) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/consultants', consultant, config);\n\n        dispatch({ type: CONSULTANT_CREATE_SUCCESS, payload: data });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANT_CREATE_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const deleteConsultant = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/consultants/${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_DELETE_SUCCESS });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANT_DELETE_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const getAllCDM = (practice) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CDM_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/cdm/${practice}`, config);\n\n        dispatch({ type: CONSULTANT_CDM_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_CDM_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllPractice = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_PRACTICE_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/practicelist`, config);\n\n        dispatch({ type: CONSULTANT_PRACTICE_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_PRACTICE_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllStaffs = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_ALL_STAFF_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/staffings?consultantId=${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_ALL_STAFF_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ALL_STAFF_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateComment = (consultantId, commentText) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CONSULTANT_UPDATE_COMMENT_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        await axios.put(`/api/consultants/comment/${consultantId}`, {commentText}, config);\n\n        dispatch({ type: CONSULTANT_UPDATE_COMMENT_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_UPDATE_COMMENT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllLeaders = (searchValue='') => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANTS_ALL_LEADERS_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/leaderslist?searchLeader=${searchValue}`, config);\n\n        dispatch({ type: CONSULTANTS_ALL_LEADERS_SUCCESS, payload: data });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANTS_ALL_LEADERS_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const getAllMyAdminConsultants = (keyword = '', pageNumber = '', pageSize = '15') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/admin/consultants?keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        \n        dispatch({ type: CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getConsultantCdm = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CDM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}/cdm`, config);\n\n        dispatch({ type: CONSULTANT_CDM_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_CDM_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getConsultantSkills = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_SKILLS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}/skill`, config);\n\n        dispatch({ type: CONSULTANT_SKILLS_SUCCESS, payload: data.quality });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_SKILLS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllConsultantSkills = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_ALL_SKILLS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/skills`, config);\n\n        dispatch({ type: CONSULTANT_ALL_SKILLS_SUCCESS, payload: data.skills });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ALL_SKILLS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantAddASkill = (consultantId, skillId, level) => async (dispatch, getState) => {\n\n    //console.log(\"consultantId\", consultantId, 'skillId', skillId, 'level', level);\n\n    try {\n        const skill = {\n            skill: skillId,\n            level: level\n        }\n\n        dispatch({ type: CONSULTANT_ADD_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/${consultantId}/skill`, skill, config);\n\n        dispatch({ type: CONSULTANT_ADD_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ADD_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantDeleteSkill = (consultantId, skillId) => async (dispatch, getState) => {\n\n    //console.log(\"consultantId\", consultantId, 'skillId', skillId);\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELETE_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/consultants/${consultantId}/skill/${skillId}`, config);\n\n        dispatch({ type: CONSULTANT_DELETE_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_DELETE_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantUpdateASkillLevel = (consultantId, skillId, level) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_UPDATE_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/${consultantId}/skill/${skillId}`, { level }, config);\n\n        dispatch({ type: CONSULTANT_UPDATE_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_UPDATE_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantImportInMass = (data) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MASS_IMPORT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/admin/mass-import`, data, config);\n\n        dispatch({ type: CONSULTANT_MASS_IMPORT_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MASS_IMPORT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const uploadConsultantWk = (file) => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANT_UPLOAD_WK_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/upload/consultant`, file, config);\n\n        dispatch({ type: CONSULTANT_UPLOAD_WK_SUCCESS, payload: data });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANT_UPLOAD_WK_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const updateConsultantWk = (path) => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANT_UPDATE_WK_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                'responseType': 'stream',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/admin/wk`, path, config);\n        /* axios.put(`/api/consultants/admin/wk`, path, config)\n            .then((response) => {\n                response.data.pipe(fs.createWriteStream(\"tempsfile.txt\"))\n            })\n            .catch(error => console.log(error)); */\n        \n        dispatch({ type: CONSULTANT_UPDATE_WK_SUCCESS, payload: data });\n        //dispatch({ type: CONSULTANT_UPDATE_WK_SUCCESS, payload: 'OK' });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANT_UPDATE_WK_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NavDropdown from 'react-bootstrap/esm/NavDropdown';\nimport { changeAdminPractice } from '../actions/userActions';\nimport DisplayChildren from './DisplayChildren';\nimport { getAllPractice } from '../actions/consultantActions';\n\nconst ChangeAdminPractice = ({ userInfo }) => {\n\n    const dispatch = useDispatch();\n\n    const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    const { practiceList } = consultantPracticeList;\n\n    useEffect(() => {\n        if (!practiceList) {\n            dispatch(getAllPractice());\n        }\n    }, [dispatch, practiceList]);\n\n    return (\n        <DisplayChildren access='adminChangePractice'>\n            <NavDropdown title={userInfo.consultantProfil.practice ? userInfo.consultantProfil.practice : 'undefined'}>\n                {practiceList && practiceList.map((practiceName, val) => (\n                    <NavDropdown.Item\n                        key={val}\n                        onClick={() => dispatch(changeAdminPractice(userInfo, practiceName))}\n                    >{practiceName}</NavDropdown.Item>\n                ))}\n            </NavDropdown>\n        </DisplayChildren>\n    )\n};\n\nexport default ChangeAdminPractice;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport { changeAdminPractice, logout } from '../actions/userActions';\nimport DisplayChildren from './DisplayChildren';\nimport { getAllPractice } from '../actions/consultantActions';\nimport ChangeAdminPractice from './ChangeAdminPractice';\n\n\nconst Header = () => {\n    \n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    // const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    // const { practiceList } = consultantPracticeList;\n\n    // useEffect(() => {\n    //     if (!practiceList) {\n    //         dispatch(getAllPractice());\n    //     }\n    // }, [dispatch, practiceList]);\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    };\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect fixed=\"top\">\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Performance App</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n\n                            <DisplayChildren access='staffingRequest'>\n                                <LinkContainer to='/staffing'>\n                                    <Nav.Link>Staffing Request</Nav.Link>\n                                </LinkContainer>\n                            </DisplayChildren>\n\n                            <DisplayChildren access='editMyPxx'>\n                                <LinkContainer to='/pxx'>\n                                    <Nav.Link>Edit My Pxx</Nav.Link>\n                                </LinkContainer>\n                            </DisplayChildren>\n\n                            {userInfo ? (\n\n                                <NavDropdown title={`${userInfo.name} (${userInfo.profil.profil && userInfo.profil.profil})` || 'no user'} id=\"username\">\n\n                                    <DisplayChildren access='editMyProfil'>\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item>Edit My Profil</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access={'manageConsultants'}>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/consultants'>\n                                            <NavDropdown.Item>Manage Consultant</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access={'manageDeals'}>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/deals'>\n                                            <NavDropdown.Item>Manage Deals</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <NavDropdown.Divider />\n\n                                    <LinkContainer to='/login'>\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                    </LinkContainer>\n                                    \n                                </NavDropdown>\n\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\n                                    </LinkContainer>)}\n\n                            <DisplayChildren access='adminMenu'>\n                                <NavDropdown title='admin'>\n\n                                    <DisplayChildren access='manageUsers'>\n                                        <LinkContainer to='/admin/users'>\n                                            <NavDropdown.Item>Manage Users</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageSkills'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/skills'>\n                                            <NavDropdown.Item>Manage Skills</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageProfils'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/profils'>\n                                            <NavDropdown.Item>Manage Profils</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageCompanies'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/companies'>\n                                            <NavDropdown.Item>Manage companies</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                </NavDropdown>\n                            </DisplayChildren>\n                            \n                            { userInfo && (\n                                <ChangeAdminPractice userInfo={userInfo} />\n                                // <DisplayChildren access='adminChangePractice'>\n                                //     <NavDropdown title={userInfo.consultantProfil.practice ? userInfo.consultantProfil.practice : 'undefined' }>\n                                //         {practiceList && practiceList.map((practiceName, val) => (\n                                //             <NavDropdown.Item \n                                //                 key={val}\n                                //                 onClick={() => dispatch(changeAdminPractice(userInfo, practiceName))}\n                                //             >{practiceName}</NavDropdown.Item>\n                                //         ))}\n                                //     </NavDropdown>\n                                // </DisplayChildren>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; byJPR\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant} className='my-1'>\n            {children}\n        </Alert>\n    )\n};\n\nMessage.defaultProps = {\n    variant: 'info',\n};\n\nMessage.propTypes = {\n    variant: PropTypes.string\n}\n\nexport default Message;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <Spinner \n            animation='border' \n            role='status' \n            stype={{ \n                width:'100px', \n                height: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}>\n                <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\n//import  { Redirect } from 'react-router-dom'\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Container, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login, getRedirectAz } from '../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    const userRedirectAz = useSelector(state => state.userRedirectAz);\n    const { redirectURL } = userRedirectAz;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo && userInfo.status === 'Validated') {\n            history.push(redirect);\n            // If user is authenticate, there is no search and user is redirect to home page\n        }\n    });\n\n    // effect to redirect to AZ authentication\n    useEffect(() => {\n        if (redirectURL) {\n            window.location.href = redirectURL\n        }\n    },[redirectURL]);\n\n    useEffect(() => {\n        if (location.search && location.search.split('code=').length > 0) {\n            //console.log('authentication code find, add request to get token');\n            //console.log(location.search.split('code=')[1]);\n            dispatch(login('AZ', {code: location.search.split('code=')[1]}));\n            history.push('/');\n        }\n    })\n\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            // Dispatch Login\n            dispatch(login('LOCAL', {email:email, password:password}));\n        }\n    };\n\n    const azAuthentClick = () => {\n        dispatch(getRedirectAz());\n    }\n\n\n    return (\n        <>\n            <FormContainer>\n                <h1>Sign In</h1>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value.toLocaleLowerCase())}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Row>\n                        <Col>\n                            <Button type='submit' variant='primary' block>\n                                Sign In\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className='mt-3'>\n                            <Button \n                                variant=\"success\"\n                                onClick={azAuthentClick}\n                                block\n                                disabled={process.env.REACT_APP_ENV === 'poc'}\n                            >-- AZ Connect --</Button>\n                        </Col>\n                    </Row>\n\n\n                    <Row className='py-3'>\n                        <Col>\n                            New User ? <Link to={redirect ?\n                                `/register?reditect=${redirect}`\n                                : '/register'}>Register</Link>\n                        </Col>\n                    </Row>\n                </Form>\n\n            </FormContainer>\n\n            {['demo', 'dev'].includes(process.env.REACT_APP_ENV) && (\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6} className='mt-5'>\n                            <h3>Disclaimer</h3>\n                            <p>Welcome on this demo! Please note that this is not an official Wavestone product.<br />\n                            On this online resource management application, you'll be able to:</p>\n                            <ul>\n                                <li>Login with different profiles (admin, coordinator, CDM, manager)</li>\n                                <li>Edit your Pxx</li>\n                                <li>Edit your consultants' profiles (position, expertise, partial time, etc.)</li>\n                                <li>Create, edit and keep track of your staffing requests</li>\n                                <li>Staff your available consultants on staffing requests</li>\n                                <li>Check where a consultant is staffed</li>\n                                <li>Create and manage a dataset of skills for your consultants</li>\n                                <li>Get access to latest KPIs and export the data on Excel</li>\n                            </ul>\n                            <h4>Test acounts logins:</h4>\n                            <Table hover striped>\n                                <thead>\n                                    <tr className='table-secondary'>\n                                        <th className='align-middle text-light text-center'>Email</th>\n                                        <th className='align-middle text-light text-center'>Password</th>\n                                        <th className='align-middle text-light text-center'>Description</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11000@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Admin account with all accreditation on application</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11001@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Coordinator of practice PTC1 account</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11004@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>CDM of practice PTC1 account</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>detmanagerprofil@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Manager of DET account</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>detconsultantprofil@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Consultant of DET account</td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </Container>\n            )}\n\n\n            {process.env.REACT_APP_ENV === 'poc' && (\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6} className='mt-5'>\n                            <h3>Disclaimer</h3>\n                            <p>Welcome on this poc! Please note that this is not an official Wavestone product.<br />\n                        On this online resource management application, you'll be able to:</p>\n                            <ul>\n                                <li>Edit your activity forecast</li>\n                                <li>Share your personal and annual objectives</li>\n                            </ul>\n                            <p>Others functionalities will come soon!</p>\n                            <br />\n                        </Col>\n                    </Row>\n                </Container>\n            )}\n        </>\n    );\n};\n\nexport default LoginScreen;\n","import axios from 'axios';\n//import fetch from 'fetch';\n//import fs from 'fs';\n//import path from 'path';\nimport {\n    PXX_LIST_REQUEST,\n    PXX_LIST_SUCCESS,\n    PXX_LIST_FAIL,\n    PXX_MY_TO_EDIT_REQUEST,\n    PXX_MY_TO_EDIT_FAIL,\n    PXX_MY_TO_EDIT_SUCCESS,\n    PXX_UPDATE_REQUEST,\n    PXX_UPDATE_SUCCESS,\n    PXX_UPDATE_FAIL,\n    PXX_TACE_REQUEST,\n    PXX_TACE_SUCCESS,\n    PXX_TACE_FAIL,\n    PXX_AVAILABILITIES_REQUEST,\n    PXX_AVAILABILITIES_SUCCESS,\n    PXX_AVAILABILITIES_FAIL,\n    PXX_ALL_REQUEST,\n    PXX_ALL_FAIL,\n    PXX_ALL_SUCCESS,\n    PXX_IMPORT_LINE_REQUEST,\n    PXX_IMPORT_LINE_SUCCESS,\n    PXX_IMPORT_LINE_FAIL,\n    PXX_UPLOAD_FILE_REQUEST,\n    PXX_UPLOAD_FILE_SUCCESS,\n    PXX_UPLOAD_FILE_FAIL,\n    PXX_UPDATE_PXX_REQUEST,\n    PXX_UPDATE_PXX_SUCCESS,\n    PXX_UPDATE_PXX_FAIL\n} from '../constants/pxxConstants';\n\nexport const getMyConsultantPxxToEdit = (consultantId, searchDate, numberOfMonth) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_MY_TO_EDIT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        searchDate.setUTCDate(1);\n        const month = searchDate.toISOString().substring(0,10);\n\n        const { data } = await axios.get(`/api/pxx/edit?consultantId=${consultantId}&month=${month}&numberOfMonth=${numberOfMonth}`, config)\n        \n        /*\n        const functionDate = new Date(searchDate);\n        functionDate.setDate(1);\n        const pxx = [];\n        for (let incr = 0; incr < numberOfMonth; incr++){\n            \n            const transformDate = functionDate.toISOString().substring(0,10);\n            const { data } = await axios.get(`/api/pxx/consultantId/${consultantId}/month/${transformDate}`, config);\n            pxx.push(data);\n            functionDate.setMonth(functionDate.getMonth()+1);\n        }\n        dispatch({ type: PXX_MY_TO_EDIT_SUCCESS, payload: pxx });\n        */\n\n       dispatch({ type: PXX_MY_TO_EDIT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_MY_TO_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updatePxx = (pxx) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/pxx`, pxx, config);    \n\n        dispatch({ type: PXX_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\n// TO DELETE //\n\nconst transformListPxxToDisplay = (pxxData, pxxInfo) => {\n\n    const listConsultant = pxxData.data.map(pxx => (pxx.name));\n\n    // collect unique _id for consultant\n    const tampon = []\n    for (let incr = listConsultant.length - 1; incr >= 0; incr--) {\n        if (tampon.includes(listConsultant[incr]._id)) {\n            listConsultant.splice(incr, 1);\n        } else {\n            tampon.push(listConsultant[incr]._id);\n        }\n    }\n\n    const listPxx = [];\n    for (let incr = 0; incr < listConsultant.length; incr++) {\n\n        let pxx = [];\n\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].name,\n            userId: listConsultant[incr]._id,\n            information: \"consultantName\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].arrival,\n            userId: listConsultant[incr]._id,\n            information: \"consultantArrivalDate\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].leaving,\n            userId: listConsultant[incr]._id,\n            information: \"consultantLeavingDate\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].seniority,\n            userId: listConsultant[incr]._id,\n            information: \"consultantSeniority\"\n        });\n\n        for (let incrMonth = 0; incrMonth < pxxInfo.data.length; incrMonth++) {\n\n            let val = pxxData.data.filter(x => (x.name._id === listConsultant[incr]._id && x.month._id === pxxInfo.data[incrMonth]._id))[0];\n            if (val.length > 1) {\n                throw new Error({ message: 'number of value can not be up to 1' })\n            }\n            pxx.push({\n                type: \"day\",\n                value: val.prodDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'productionDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.notProdDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'notProductionDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.leavingDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'leavingDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.availableDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'availableDay'\n            });\n        }\n\n        listPxx.push(pxx);\n    }\n\n    return listPxx;\n\n}\n\nconst transformPxxMonthInfoToDisplay = (pxxInfo) => {\n    const pxxMonthInfoList = []\n    const firstLine = [];\n    const secondLine = [];\n\n    for (let incr = 0; incr < pxxInfo.data.length; incr++){\n        \n        firstLine.push({\n            name: pxxInfo.data[incr].name,\n            value: pxxInfo.data[incr].workingday\n        });\n        firstLine.push({ name:'', value:'' });\n        firstLine.push({ name:'', value:'' });\n        firstLine.push({ name:'', value:'' });\n    }\n\n    for (let incr = 0; incr < pxxInfo.data.length; incr++){\n        secondLine.push({ name:'Prod', value: 'P'});\n        secondLine.push({ name: 'Not Prod', value: 'NP'});\n        secondLine.push({ name: 'Hollidays', value: 'H'});\n        secondLine.push({ name: 'Availability', value: 'A'});\n    }\n    pxxMonthInfoList.push(firstLine, secondLine);\n\n    return pxxMonthInfoList;\n}\n\nexport const getPxxList = (searchDate, numberOfMonth) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        \n        const pxxInfo = await axios.get(`/api/monthdata?searchdate=${searchDate}&numberofmonths=${numberOfMonth}`);\n        const pxxMonthInfoList = transformPxxMonthInfoToDisplay(pxxInfo);\n\n        let monthId = \"\";\n        for (let incr = 0; incr < pxxInfo.data.length; incr++) {\n            if (incr === 0) {\n                monthId = pxxInfo.data[incr]._id;\n            }\n            monthId = monthId + '_' + pxxInfo.data[incr]._id;\n        }\n\n        const pxxData = await axios.get(`/api/pxx/${monthId}`, config);\n        const listPxx = transformListPxxToDisplay(pxxData, pxxInfo);\n\n        dispatch({ type: PXX_LIST_SUCCESS, payload: { pxxMonthInformation: pxxMonthInfoList, pxxUserList: listPxx } });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getTace = (practice, start, end) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_TACE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.get(`/api/pxx/chart/tace?practice=${practice}&start=${start}&end=${end}`, config);\n\n        dispatch({ type: PXX_TACE_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_TACE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAvailabilities = (practice='', start, end, skills='', experienceStart='', experienceEnd='', searchMode) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_AVAILABILITIES_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        let searchExperience = experienceStart.toString();\n        if (experienceEnd) {\n            searchExperience = searchExperience + '-' + experienceEnd.toString()\n        }\n\n        const { data } = await axios.get(`/api/pxx/chart/availability?practice=${practice}&start=${start}&end=${end}&skills=${skills}&experience=${searchExperience}&filterMode=${searchMode}`, config);\n\n        dispatch({ type: PXX_AVAILABILITIES_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_AVAILABILITIES_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllPxx = (practice = '', month = '', keywork = '', pageSize = '10', pageNumber = '1') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_ALL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.get(`/api/pxx?practice=${practice}&month=${month}&keyword=${keywork}&pageSize=${pageSize}&pageNumber=${pageNumber}`, config);\n\n        dispatch({ type: PXX_ALL_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_ALL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n/* export const pxxImportInMass = (datas) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_IMPORT_MASS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.put(`/api/pxx/admin/mass-import`, datas, config);\n\n        dispatch({ type: PXX_IMPORT_MASS_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_IMPORT_MASS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}; */\n\nexport const pxxUpdateALine = (line) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_IMPORT_LINE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.put(`/api/pxx/admin/line-import`, line, config);\n\n        dispatch({ type: PXX_IMPORT_LINE_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_IMPORT_LINE_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};\n\nexport const pxxUploadFiles = (files) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPLOAD_FILE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                \"Content-Type\": \"application/vnd.ms-excel\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        let result = '';\n        for (let incr=0 ; incr < files.length ; incr++) {\n            const file = files[incr];\n            const { data } = await axios.post(`/api/upload/pxx`, file, config);\n            result = data;\n        }\n\n\n        dispatch({ type: PXX_UPLOAD_FILE_SUCCESS, payload: result });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPLOAD_FILE_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};\n\nexport const updatePxxFiles = (path) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPDATE_PXX_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/pxx/admin/line-import-wk`, path, config);\n\n        dispatch({ type: PXX_UPDATE_PXX_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPDATE_PXX_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport InputGroup from 'react-bootstrap/InputGroup';\n// import FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport { updatePxx } from '../actions/pxxActions';\n\nconst PxxUserLine = ({ data }) => {\n\n    const dispatch = useDispatch();\n\n    // const [prodDayComponent, setProdDayComponent] = useState(Number(data.prodDay) ? Number(data.prodDay) : 0);\n    // const [notProdDayComponent, setNotProdDayComponent] = useState(Number(data.notProdDay) ? Number(data.notProdDay) : 0);\n    // const [leavingDayComponent, setLeavingDayComponent] = useState(Number(data.leavingDay) ? Number(data.leavingDay) : 0);\n    const [prodDayComponent, setProdDayComponent] = useState(data.prodDay ? data.prodDay : '0');\n    const [notProdDayComponent, setNotProdDayComponent] = useState(data.notProdDay ? data.notProdDay : '0');\n    const [leavingDayComponent, setLeavingDayComponent] = useState(data.leavingDay ? data.leavingDay : '0');\n    const [availableDayComponent, setAvailableDayComponent] = useState(Number(data.availableDay) ? Number(data.availableDay) : 0);\n    const [workingDay] = useState(Number(data.prodDay) + Number(data.notProdDay) + Number(data.leavingDay) + Number(data.availableDay));\n\n    const [hasChange, setHasChange] = useState(false);\n\n    // Calculate firstday of current month to compare with firstDayMonth of displayed Pxx\n    let firstDayOfCurrentMonth = new Date(Date.now());\n    firstDayOfCurrentMonth.setDate(1);\n    firstDayOfCurrentMonth = firstDayOfCurrentMonth.toISOString().substring(0, 10);\n\n    const editable = data.month ? (data.month.firstDay >= firstDayOfCurrentMonth) : false;\n\n    useEffect(() => {\n        const prd = transformNumber(prodDayComponent);\n        const nPrd = transformNumber(notProdDayComponent);\n        const lvg = transformNumber(leavingDayComponent);\n\n        if (hasChange && workingDay >= (prd + nPrd + lvg)) {\n            setAvailableDayComponent(workingDay - (prd + nPrd + lvg))\n            dispatch(updatePxx({\n                _id: data._id,\n                name: data.name,\n                month: data.month._id,\n                prodDay: prd,\n                notProdDay: nPrd,\n                leavingDay: lvg,\n                availableDay: workingDay - (prd + nPrd + lvg)\n            }));\n            setHasChange(false);\n        }\n    // eslint-disable-next-line\n    },[workingDay, prodDayComponent, notProdDayComponent, leavingDayComponent, data]);\n\n    // useEffect(() => {\n    //     if (hasChange && workingDay >= (prodDayComponent + notProdDayComponent + leavingDayComponent)) {\n    //         setAvailableDayComponent(workingDay - (prodDayComponent + notProdDayComponent + leavingDayComponent))\n    //         dispatch(updatePxx({\n    //             _id: data._id,\n    //             name: data.name,\n    //             month: data.month._id,\n    //             prodDay: prodDayComponent,\n    //             notProdDay: notProdDayComponent,\n    //             leavingDay: leavingDayComponent,\n    //             availableDay: workingDay - (prodDayComponent + notProdDayComponent + leavingDayComponent)\n    //         }));\n    //         setHasChange(false);\n    //     }\n    // // eslint-disable-next-line\n    // },[workingDay, prodDayComponent, notProdDayComponent, leavingDayComponent, data]);\n\n    const transformNumber = (value) => {\n        if(value.toString().match(/^[0-9]{0,}[.,]$/i)){\n            return Number(value + '0');\n        } else {\n            return Number(value);\n        }\n    }\n\n    return (\n        <>\n            <Row className=\"py-1\">\n                <Col xs={4} className=\"text-center align-middle\"><b>{data.month ? data.month.name : 'Not created Yeat'}</b> <i>{workingDay ? `(${workingDay}d)` : null}</i></Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - notProdDayComponent - leavingDayComponent) ? (workingDay - notProdDayComponent - leavingDayComponent) : '-'}\n                            step={0.5}\n                            placeholder='-'\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={prodDayComponent && prodDayComponent.toString()}\n                            onChange={(e) => {\n                                //setProdDayComponent(Number(e.target.value));\n                                if (e.target.value.match(/^[0-9]{0,}[.,][05]{0,1}$|^[0-9]{0,}$/i)) {\n                                    setProdDayComponent(e.target.value);\n                                    setHasChange(true);\n                                }\n                            }}\n                        ></Form.Control>\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - prodDayComponent - leavingDayComponent) ? (workingDay - prodDayComponent - leavingDayComponent) : '-'}\n                            step={0.5}\n                            placeholder='-'\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={notProdDayComponent && notProdDayComponent.toString()}\n                            onChange={(e) => {\n                                if (e.target.value.match(/^[0-9]{0,}[.,][05]{0,1}$|^[0-9]{0,}$/i)) {\n                                    //setNotProdDayComponent(Number(e.target.value));\n                                    setNotProdDayComponent(e.target.value);\n                                    setHasChange(true);\n                                }\n                            }}\n                        ></Form.Control>\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - prodDayComponent - notProdDayComponent) ? (workingDay - prodDayComponent - notProdDayComponent) : '-'}\n                            step={0.5}\n                            placeholder='-'\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={leavingDayComponent && leavingDayComponent.toString()}\n                            onChange={(e) => {\n                                if (e.target.value.match(/^[0-9]{0,}[.,][05]{0,1}$|^[0-9]{0,}$/i)) {\n                                    //setLeavingDayComponent(Number(e.target.value));\n                                    setLeavingDayComponent(e.target.value);\n                                    setHasChange(true);\n                                }\n                            }}\n                        ></Form.Control>\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"text\"\n                            //min={0}\n                            //max={workingDay ? workingDay : '-'}\n                            //step={0.5}\n                            placeholder='-'\n                            className=\"align-middle text-center p-0\"\n                            value={availableDayComponent && availableDayComponent.toString()}\n                            disabled\n                        ></Form.Control>\n                    </InputGroup>\n                </Col>\n\n            </Row>\n        </>\n    )\n}\n\nexport default PxxUserLine;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport PxxUserLine from '../components/PxxUserLine';\nimport { getMyConsultantPxxToEdit } from '../actions/pxxActions';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst PxxEditor = ({ consultantsMy, consultantFocus, searchDate, navigationMonthHandler }) => {\n\n    const dispatch = useDispatch();\n\n    const [numberOfMonth] = useState(5);\n\n    const pxxMyToEdit = useSelector(state => state.pxxMyToEdit);\n    const { loading: loadingPxx, error: errorPxx, pxx } = pxxMyToEdit;\n\n    const pxxUpdate = useSelector(state => state.pxxUpdate);\n    const { loading: loadingUpdate, error: errorUpdate } = pxxUpdate;\n\n    let consultantId = consultantsMy[consultantFocus]._id;\n    \n    useEffect(() => {\n\n        // Effect when loading component and each time entry parameters change\n        dispatch(getMyConsultantPxxToEdit(consultantId, searchDate, numberOfMonth));\n    }, [dispatch, searchDate, numberOfMonth, consultantId]);\n\n    return (\n        <ListGroup.Item>\n\n            <Row>\n                <Col xs={4} className='text-center align-middle'>\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                        style={{width: '8em'}}\n                    ><i className=\"fas fa-caret-up\"></i>  Previous</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={4} className=\"text-center align-middle px-1 pb-2\" style={{height: '2em'}}> {loadingUpdate && <Loader />}</Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Prd</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>NPrd</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Hld</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Avlb</strong></Col>\n            </Row>\n\n            {loadingPxx ? <Loader /> : errorPxx ? <Message variant=\"danger\">{errorPxx}</Message> : (\n                pxx.map((line, key) => (\n                        <PxxUserLine\n                            key={key}\n                            data={line}\n                        />\n                ))\n            )}\n\n            {errorUpdate && (\n                <Row><Message variant='danger'>{errorUpdate}</Message></Row>\n            )}\n            \n            <Row>\n                <Col xs={4} className='text-center align-middle'>\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                        style={{width: '8em'}}\n                    >Next  <i className=\"fas fa-caret-down\"></i></Button>\n                </Col>\n                {/* <Col xs={6} md={2} className=\"text-right\">\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                        block\n                    ><i className=\"fas fa-caret-left\"></i>  Previous</Button>\n                </Col>\n                <Col xs={6} md={2} className=\"text-left\">\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                        block\n                    >Next  <i className=\"fas fa-caret-right\"></i></Button>\n                </Col>\n                <Col xs={0} md={2}></Col> */}\n            </Row>\n\n        </ListGroup.Item>\n    )\n}\n\nexport default PxxEditor;\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst DropDownTitleContainer = ({children, title, close}) => {\n\n    const [hide, setHide] = useState(close);\n\n    return (\n        <Row className='mt-3'>\n            <Col>\n                <Button\n                    onClick={() => setHide(!hide)}\n                    variant='light'\n                    className='text-left'\n                    block\n                > <h3>{hide ? (\n                    <><i className=\"fas fa-caret-down\"></i> {title}</>\n                ) : (\n                        <><i className=\"fas fa-caret-up\"></i> {title}</>\n                    )}</h3></Button>\n\n                {!hide && children}\n            </Col>\n        </Row>\n    )\n}\n\nDropDownTitleContainer.defaultProps = {\n    close: true\n};\n\nexport default DropDownTitleContainer\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport { setConsultantFocus } from '../actions/consultantActions';\nimport Button from 'react-bootstrap/Button';\n\nconst ConsultantsTab = ({ history, consultantsMy, focusActive }) => {\n\n    const dispatch = useDispatch();\n\n    const onClickHandler = (focus, consultantId) => {\n        focusActive && dispatch(setConsultantFocus(focus));\n        //focusActive && setFocus(focus);\n        history.push(`/editconsultant/${consultantId}`);\n    };\n\n    return (\n\n        <Table responsive hover striped className='mt-3'>\n            <thead>\n                <tr className='table-light'>\n                    <th className='align-middle text-dark'>Consultant name</th>\n                    <th className='align-middle text-dark'>Matricule</th>\n                    <th className='align-middle text-dark'>Practice</th>\n                    <th className='align-middle text-dark'>Valued</th>\n                    <th className='align-middle text-dark'>Arrival</th>\n                    <th className='align-middle text-dark'>Leaving</th>\n                    <th className='align-middle text-dark'>Seniority</th>\n                    <th className='align-middle text-dark'>Comment</th>\n                    <th className='align-middle text-dark'></th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {consultantsMy.map((consultant, focus) => (\n                    <tr key={consultant._id} onClick={() => focusActive && dispatch(setConsultantFocus(focus))}>\n                        <td className='align-middle'>{consultant.name}</td>\n                        <td className='align-middle'>{consultant.matricule}</td>\n                        <td className='align-middle'>{consultant.practice}</td>\n                        <td className='align-middle'>{consultant.valued ? consultant.valued.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{consultant.arrival ? consultant.arrival.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{consultant.leaving ? consultant.leaving.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{\n                                consultant.valued ? ((new Date(Date.now()) - new Date(consultant.valued.substring(0,10)))/(1000*3600*24*365.25)).toString().substring(0,4) : 0\n                            } years</td>\n                        <td className='align-middle'>{consultant.comment}</td>\n                        <td className='align-middle'>\n                            <Button className='btn btn-light p-1' onClick={() => onClickHandler(focus, consultant._id)}>\n                                <i className=\"fas fa-user-edit\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default ConsultantsTab;\n","import React from 'react'\nimport { Helmet } from 'react-helmet';\n\nconst Meta = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Performance App'\n}\n\nexport default Meta\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Loader from './Loader';\nimport { getAllStaffs } from '../actions/consultantActions';\n\nconst ViewStaffs = ({ history, consultantId, displayedDeal = '', onNavigate = () => ('') }) => {\n\n    const dispatch = useDispatch();\n    const consultantAllStaffs = useSelector(state => state.consultantAllStaffs);\n    const { loading, staffings } = consultantAllStaffs;\n\n    useEffect(() => {\n        if (consultantId) {\n            dispatch(getAllStaffs(consultantId));\n        }\n    }, [dispatch, consultantId]);\n\n    return (\n        <Row>\n            <Col>\n                {loading && <Loader />}\n                <Table responsive hover striped className='mt-3'>\n                    <thead>\n                        <tr className='table-light'>\n                            <th className='align-middle text-dark'>Company</th>\n                            <th className='align-middle text-dark'>Title</th>\n                            <th className='align-middle text-dark'>Practice</th>\n                            <th className='align-middle text-dark'>Probability</th>\n                            <th className='align-middle text-dark'>Start</th>\n                            <th className='align-middle text-dark'>Deal status</th>\n                            <th className='align-middle text-dark'>Request status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {staffings && staffings.map(deal => (deal._id.toString() !== displayedDeal.toString()) && (\n                            <tr key={deal._id}>\n                                <td className='align-middle'>{deal.company}</td>\n                                <td className='align-middle'>{deal.title}</td>\n                                <td className='align-middle'>{deal.mainPractice}</td>\n                                <td className='align-middle'>{deal.probability} %</td>\n                                <td className='align-middle'>{deal.startDate.substring(0, 10)}</td>\n                                <td className='align-middle'>{deal.status}</td>\n                                <td className='align-middle'>{deal.requestStatus}</td>\n                                <td className='align-middle'>\n                                        <Button\n                                            onClick={() => {\n                                                history.push(`/staffing/${deal._id}`);\n                                                onNavigate();\n                                            }}\n                                            variant='light'\n                                        ><i className=\"fas fa-edit\"></i></Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ViewStaffs;\n","import axios from 'axios';\nimport { \n    DEAL_ALL_LIST_FAIL,\n    DEAL_ALL_LIST_REQUEST,\n    DEAL_ALL_LIST_SUCCESS,\n    DEAL_CREATE_FAIL, \n    DEAL_CREATE_REQUEST, \n    DEAL_CREATE_SUCCESS, \n    DEAL_DELETE_FAIL, \n    DEAL_DELETE_REQUEST,\n    DEAL_DELETE_SUCCESS,\n    DEAL_EDIT_FAIL,\n    DEAL_EDIT_REQUEST,\n    DEAL_EDIT_SUCCESS,\n    DEAL_MASS_IMPORT_FAIL,\n    DEAL_MASS_IMPORT_REQUEST,\n    DEAL_MASS_IMPORT_SUCCESS,\n    DEAL_OLD_FAIL,\n    DEAL_OLD_REQUEST,\n    DEAL_OLD_SUCCESS,\n    DEAL_UPDATE_FAIL,\n    DEAL_UPDATE_REQUEST,\n    DEAL_UPDATE_SUCCESS\n} from '../constants/dealConstants';\n\n\nexport const createDeal = (deal) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/deals`, deal, config);\n\n       dispatch({ type: DEAL_CREATE_SUCCESS, payload: data._id });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateDeal = (dealId, deal) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/deals/${dealId}`, deal, config);\n\n       dispatch({ type: DEAL_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllDeals = (keyword, pageNumber = 1, pageSize = 20, state = '', filter = '') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_ALL_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals?title=${keyword.title}&company=${keyword.company}&contact=${keyword.contact}&status=${keyword.status}&request=${keyword.request}&pageNumber=${pageNumber}&pageSize=${pageSize}&state=${state}&filterMy=${keyword.filterMy}&staff=${keyword.staff}`, config);\n\n       dispatch({ type: DEAL_ALL_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_ALL_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteDeal = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        //await axios.delete(`/api/deals?id=${id}`, config);\n        await axios.delete(`/api/deals/${id}`, config);\n\n       dispatch({ type: DEAL_DELETE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getDealToEdit = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_EDIT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals/${id}`, config);\n\n       dispatch({ type: DEAL_EDIT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getOldDeals = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_OLD_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals/old?consultantId=${consultantId}`, config);\n\n       dispatch({ type: DEAL_OLD_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_OLD_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const dealsImportInMass = (datas) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_MASS_IMPORT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/deals/admin/mass-import`, datas, config);\n\n       dispatch({ type: DEAL_MASS_IMPORT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_MASS_IMPORT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Loader from './Loader';\nimport { getOldDeals } from '../actions/dealActions';\n\nconst ViewOldStaffs = ({ history, consultantId, displayedDeal = '', onNavigate = () => ('') }) => {\n\n    const dispatch = useDispatch();\n\n    const dealOld = useSelector(state => state.dealOld);\n    const { loading, oldDeals } = dealOld;\n\n    /*const consultantAllStaffs = useSelector(state => state.consultantAllStaffs);\n    const { loading, staffings } = consultantAllStaffs;*/\n\n    useEffect(() => {\n        if (consultantId) {\n            dispatch(getOldDeals(consultantId));\n        }\n    }, [dispatch, consultantId]);\n\n    return (\n        <Row>\n            <Col>\n                {loading && <Loader />}\n                <Table responsive hover striped className='mt-3'>\n                    <thead>\n                        <tr className='table-light'>\n                            <th className='align-middle text-dark'>Company</th>\n                            <th className='align-middle text-dark'>Title</th>\n                            <th className='align-middle text-dark'>Practice</th>\n                            <th className='align-middle text-dark'>Probability</th>\n                            <th className='align-middle text-dark'>Start</th>\n                            <th className='align-middle text-dark'>Deal status</th>\n                            <th className='align-middle text-dark'>Request status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {oldDeals && oldDeals.map(deal => (\n                            <tr key={deal._id}>\n                                <td className='align-middle'>{deal.company}</td>\n                                <td className='align-middle'>{deal.title}</td>\n                                <td className='align-middle'>{deal.mainPractice}</td>\n                                <td className='align-middle'>{deal.probability} %</td>\n                                <td className='align-middle'>{deal.startDate.substring(0, 10)}</td>\n                                <td className='align-middle'>{deal.status}</td>\n                                <td className='align-middle'>{deal.staffingRequest.requestStatus}</td>\n                                <td className='align-middle'>\n                                        <Button\n                                            onClick={() => {\n                                                history.push(`/staffing/${deal._id}`);\n                                                onNavigate();\n                                            }}\n                                            variant='light'\n                                        ><i className=\"fas fa-edit\"></i></Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ViewOldStaffs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nconst Rating = ({ value, setValue, text, color, editable }) => {\n\n    const valueList = [...new Array(Math.floor(value)).fill(1)];\n    if (value % 1 >= 0.5) {\n        valueList.push(value % 1)\n    }\n    while (valueList.length < 5) {\n        valueList.push(0)\n    }\n\n    return (\n        \n            <Form.Group className='mb-0'>\n                <InputGroup>\n                    {valueList && valueList.map((x, val) => (\n                        <span key={val}>\n                            <Button\n                                className='mx-0 px-0'\n                                variant='ligth'\n                                onClick={() => { editable && (\n                                    x >= 1\n                                        ? setValue(val)\n                                        : x >= 0.5\n                                            ? setValue(val + 1)\n                                            : setValue(val + 0.5)\n                                )}}\n                            ><i style={{ color }}\n                                className={\n                                    x >= 1\n                                        ? 'fas fa-star'\n                                        : x >= 0.5\n                                            ? 'fas fa-star-half-alt'\n                                            : 'far fa-star'\n                                }>\n                                </i></Button>\n\n                        </span>\n                    ))}\n                    <span>{text && text}</span>\n                </InputGroup>\n            </Form.Group>\n\n        \n\n    )\n};\n\nRating.defaultProps = {\n    color: '#f8e825',\n    text: '',\n    editable: true,\n};\n\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n};\n\nexport default Rating;","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { consultantAddASkill, consultantDeleteSkill, consultantUpdateASkillLevel, getAllConsultantSkills, getConsultantSkills } from '../actions/consultantActions';\nimport Rating from './Rating';\nimport { CONSULTANT_UPDATE_SKILL_RESET } from '../constants/consultantConstants';\n\nconst SkillsDetails = ({consultantId, close=true, editable=true}) => {\n\n    const dispatch = useDispatch();\n\n    const [skillCategory, setSkillCategory] = useState('default');\n    const [skillId, setSkillId] = useState('default');\n    const [skillLevel, setSkillLevel] = useState(1);\n    const [skillCategoryList, setSkillCategoryList] = useState([]);\n\n    const [qualityOrdonned, setQualityOrdonned] = useState([]);\n\n    const [update, setUpdate] = useState(false);\n\n\n    const consultantAllSkills = useSelector(state => state.consultantAllSkills);\n    const { skills: skillsAll } = consultantAllSkills;\n\n    const consultantSkills = useSelector(state => state.consultantSkills);\n    const { loading, skills } = consultantSkills;\n\n    const consultantAddSkill = useSelector(state => state.consultantAddSkill);\n    const { loading: loadingConsultantAddSkill, success: successConsultantAddSkill, error: errorConsultantAddSkill } = consultantAddSkill;\n\n    /* const consultantUpdateSkill = useSelector(state => state.consultantUpdateSkill);\n    const { error: errorConsultantUpdateSkill } = consultantUpdateSkill;\n\n    const consultantDeleteSkillReducer = useSelector(state => state.consultantDeleteSkill);\n    const { success: successConsultantDeleteSkill } = consultantDeleteSkillReducer; */\n\n    useEffect(() => {\n        if (!skillsAll) {\n            dispatch(getAllConsultantSkills());\n        }\n    }, [dispatch, skillsAll]);\n\n    useEffect(() => {\n        dispatch(getConsultantSkills(consultantId));\n        //if(!skills) {\n        //}\n    }, [dispatch, consultantId]);\n\n    useEffect(() => {\n        if (skills) {\n            //setQuality(skills)\n            const ordonnedSkills = orderSkills(skills);\n            setQualityOrdonned(ordonnedSkills);\n        }\n    }, [dispatch, skills, consultantId]);\n\n    useEffect(() => {\n        if(update && !loading) {\n            dispatch(getConsultantSkills(consultantId));\n            setUpdate(false);\n        }\n    }, [dispatch, update, consultantId, loading])\n\n    useEffect(() => {\n        if (skillsAll) {\n            let categoryList = skillsAll.map(x => x.category);\n            categoryList = [...new Set(categoryList)];\n            setSkillCategoryList(categoryList);\n        }\n    }, [skillsAll]);\n\n    useEffect(() => {\n        //if ((successConsultantAddSkill || successConsultantDeleteSkill)) {\n        if (successConsultantAddSkill) {\n            setUpdate(true);\n        }\n    }, [\n        successConsultantAddSkill,\n        //successConsultantDeleteSkill,\n    ]);\n\n    const orderSkills = (skills) => {\n        const categoryList = [...new Set(skills.map(x => x.skill.category))]\n        const orderSkills = []\n        for (let incr = 0 ; incr < categoryList.length ; incr++) {\n            orderSkills.push({\n                category: categoryList[incr],\n                data: skills.filter( x => x.skill.category === categoryList[incr])\n            })\n        }\n        return orderSkills;\n    }\n\n    const handleAddSkill = (consultantId, skillId, skillLevel) => {\n        dispatch(consultantAddASkill(consultantId, skillId, skillLevel));\n    }\n\n    /* const handlerDeleteConsultantSkill = (consultantId, skillId) => {\n        dispatch(consultantDeleteSkill(consultantId, skillId));\n    }\n\n    const handleUpdateSkillLevel = (consultantId, skillId, level) => {\n        dispatch(consultantUpdateASkillLevel(consultantId, skillId, level));\n    } */\n\n    return (\n\n        <DropDownTitleContainer title='Skills' close={close}>\n\n            {editable && (\n                <ListGroup.Item>\n                    <h4>Add skills</h4>\n\n                    <Form.Row className='mt-3 align-items-end'>\n                        <Col xs={12} md={3}>\n                            <Form.Group controlId='skillCategory'>\n                                <Form.Label><strong>Category</strong></Form.Label>\n                                <Form.Control\n                                    as='select'\n                                    value={skillCategory ? skillCategory : 'default'}\n                                    onChange={(e) => setSkillCategory(e.target.value)}\n                                    required\n                                >\n                                    <option value='default'>Please Select</option>\n                                    {skillCategoryList && (\n                                        skillCategoryList.map((x, val) => (\n                                            <option\n                                                value={x}\n                                                key={val}\n                                            >{x}</option>\n                                        )))}\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} >\n                            <Form.Group controlId='skillName'>\n                                <Form.Label><strong>Skill</strong></Form.Label>\n                                <OverlayTrigger\n                                    placement=\"top\"\n                                    overlay={<Tooltip id=\"button-tooltip-2\">{skillId && skillsAll ? skillsAll.map(x => (x._id === skillId) && x.description) : 'no description'}</Tooltip>}\n                                >\n                                    <Form.Control\n                                        as='select'\n                                        value={skillId ? skillId : 'default'}\n                                        onChange={(e) => setSkillId(e.target.value)}\n                                        required\n                                    >\n                                        <option value='default'>Please Select</option>\n                                        {skillsAll && skillCategory && (\n                                            skillsAll.map((x, val) => (\n                                                x.category === skillCategory && (\n                                                    <option\n                                                        value={x._id}\n                                                        key={val}\n                                                    >{x.name}</option>\n                                                )\n                                            )))}\n\n                                    </Form.Control>\n                                </OverlayTrigger>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} >\n                            <Form.Group controlId='skillLevel'>\n                                <Form.Label><strong>Level</strong></Form.Label>\n                                <Form.Control\n                                    type='number'\n                                    min={0}\n                                    max={5}\n                                    step={0.5}\n                                    value={skillLevel ? skillLevel : 1}\n                                    onChange={(e) => setSkillLevel(e.target.value)}\n                                    required\n                                ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} className='align-items-bottom'>\n                            <Form.Group>\n                                <InputGroup>\n                                    <Button\n                                        block\n                                        onClick={() => handleAddSkill(consultantId, skillId, skillLevel)}\n                                    >{loadingConsultantAddSkill ? <Loader /> : 'Add'}</Button>\n                                </InputGroup>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {/*errorConsultantUpdateSkill && <Message variant='danger'>{errorConsultantUpdateSkill}</Message>*/}\n                    {errorConsultantAddSkill && <Message variant='danger'>{errorConsultantAddSkill}</Message>}\n\n                </ListGroup.Item>\n\n            )}\n            \n            \n            <ListGroup.Item>\n                {qualityOrdonned && qualityOrdonned.length ? (\n                    <ListGroup variant='flush'>\n                        {qualityOrdonned.map((categoryList,val) => (\n                            <ListGroup.Item key={val}>\n                                <h4>{categoryList.category}</h4>\n                                {categoryList.data.map( (x,val) => (\n                                    <SkillDisplayLine \n                                        consultantId={consultantId}\n                                        key={val}\n                                        skill={x}\n                                        val={val}\n                                        //handleUpdateSkillLevel={handleUpdateSkillLevel}\n                                        //handlerDeleteConsultantSkill={handlerDeleteConsultantSkill}\n                                        setUpdate={setUpdate}\n                                        editable={editable}\n                                    />\n                                ))}\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                ) : <p>Please add quality</p>}\n            </ListGroup.Item>\n\n        </DropDownTitleContainer>\n    )\n}\n\nconst SkillDisplayLine = ({ \n    consultantId, \n    skill, \n    val, \n    //handleUpdateSkillLevel, \n    //handlerDeleteConsultantSkill, \n    setUpdate,\n    editable=true}) => {\n\n    const dispatch = useDispatch();\n\n    const consultantUpdateSkill = useSelector(state => state.consultantUpdateSkill);\n    const { success: successConsultantUpdateSkill } = consultantUpdateSkill;\n\n    const consultantDeleteSkillReducer = useSelector(state => state.consultantDeleteSkill);\n    const { success: successConsultantDeleteSkill } = consultantDeleteSkillReducer;\n    \n    const [level, setLevel] = useState(skill.level);\n    const [waitingValidationLevel, setWaitingValidationLevel] = useState(skill.level);\n\n    useEffect(() => {\n        if (successConsultantDeleteSkill) {\n            setUpdate(true);\n        }\n    }, [\n        successConsultantDeleteSkill,\n        setUpdate\n    ]);\n\n    useEffect(() => {\n        if (successConsultantUpdateSkill) {\n            setLevel(waitingValidationLevel);\n            dispatch({type: CONSULTANT_UPDATE_SKILL_RESET})\n        }\n    },[dispatch, successConsultantUpdateSkill, waitingValidationLevel])\n\n\n    const updateLevel = (newLevel) => {\n        \n        dispatch(consultantUpdateASkillLevel(consultantId, skill.skill._id, newLevel));\n        setWaitingValidationLevel(newLevel);\n\n        //handleUpdateSkillLevel(consultantId, skill.skill._id, newLevel)\n    }\n\n\n    const handlerDeleteConsultantSkill = (consultantId, skillId) => {\n        dispatch(consultantDeleteSkill(consultantId, skillId));\n    }   \n\n\n    return (\n        <>\n            {/*errorConsultantUpdateSkill && <Message variant='danger'>{errorConsultantUpdateSkill}</Message>*/}\n            <Form.Row key={val}>\n                <Col xs={3}>\n                    <Form.Group controlId='skillName' className='mb-0'>\n                        <Form.Control\n                            plaintext\n                            readOnly\n                            value={skill.skill && skill.skill.name}\n                        ></Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Rating\n                        value={Number(level)}\n                        setValue={updateLevel}\n                        editable={editable}\n                    />\n                </Col>\n\n                <Col>\n                    {editable && (\n                        <Form.Group className='mb-0'>\n                            <InputGroup>\n                                <Button\n                                    //style={{color:'grey'}}\n                                    variant=\"secondary\"\n                                    size='sm'\n                                    onClick={() => handlerDeleteConsultantSkill(consultantId, skill.skill._id)}\n                                ><i className=\"fas fa-times-circle\"></i></Button>\n                            </InputGroup>\n                        </Form.Group>\n                    )}\n                </Col>\n            </Form.Row>\n        </>\n    )\n}\n\nexport default SkillsDetails\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PxxEditor from '../components/PxxEditor';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ConsultantsTab from '../components/ConsultantsTab';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport Loader from '../components/Loader';\nimport { getAllMyConsultants, updateComment, updateMyConsultant } from '../actions/consultantActions';\nimport { Container, FormControl, InputGroup } from 'react-bootstrap';\nimport { setConsultantFocus } from '../actions/consultantActions';\nimport ViewStaffs from '../components/ViewStaffs';\nimport ViewOldStaffs from '../components/ViewOldStaffs';\nimport SkillsDetails from '../components/SkillsDetails';\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst PxxEditScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const [commentText, setCommentText] = useState('');\n    const [trObjectives, setTrObjectives] = useState('');\n    //const [myObjectives, setMyObjectives] = useState('');\n    const [availabilityComment, setAvailabilityComment] = useState('');\n    const [notProdComment, setNotProdComment] = useState('');\n\n    const [delegateOption, setDelegationOption] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantsMyList = useSelector(state => state.consultantsMyList);\n    const { loading: loadingConsultantsMyList, error: errorConsultantsMyList, consultantsMy, focus } = consultantsMyList;\n\n\n    const [searchDate, setSearchDate] = useState(new Date(Date.now()));\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n\n    useEffect(() => {\n        // Effect to start loading my consultants and then to update every time focus change\n        const option = delegateOption ? 'delegate' : '';\n        //console.log('option', option);\n        dispatch(getAllMyConsultants(option));\n    }, [dispatch, focus, delegateOption])\n\n    useEffect(() => {\n        if (consultantsMy) {\n            setCommentText(consultantsMy[focus].comment);\n            //setMyObjectives(consultantsMy[focus].personalObjectives);\n            setTrObjectives(consultantsMy[focus].talentReviewObjectives);\n            setNotProdComment(consultantsMy[focus].notProdComment);\n            setAvailabilityComment(consultantsMy[focus].availabilityComment);\n        }\n    }, [consultantsMy, focus]);\n\n    const navigationMonthHandler = (value) => {\n        const navigationDate = new Date(searchDate);\n        navigationDate.setMonth(navigationDate.getMonth() + value);\n        setSearchDate(navigationDate);\n    }\n\n    const navigationConsultantHandler = (value) => {\n\n        if (((focus + value) >= 0) && ((focus + value) < consultantsMy.length)) {\n            dispatch(setConsultantFocus(focus + value));\n        }\n    }\n\n    const updateCommentHandler = (consultantId, value) => {\n        dispatch(updateComment(consultantId, value));\n    }\n\n    return (\n\n        <Container>\n            <Meta />\n            {loadingConsultantsMyList ? <Loader /> :\n                errorConsultantsMyList ? <Message variant='danger'>{errorConsultantsMyList}</Message>\n                    : !consultantsMy || consultantsMy.length === 0 ?\n                        <Message variant='info'>You don't have consultant to edit yet</Message> : (\n                            <>\n                                <div className='border-bottom p-3'>\n                                    <Row>\n                                        <Col className=\"text-center\" xs={2}>\n                                            <Button\n                                                variant='primary'\n                                                size='sm'\n                                                onClick={() => navigationConsultantHandler(-1)}\n                                                disabled={focus === 0}\n                                            ><i className=\"fas fa-caret-left\"></i>\n                                            </Button>\n                                        </Col>\n                                        <Col className=\"text-center\" xs={8}>\n                                            <LinkContainer to={`/editconsultant/${consultantsMy[focus]._id}`}>\n                                                <Nav.Link>\n                                                    <h4>{consultantsMy[focus].name} <i>({consultantsMy[focus].matricule})</i></h4>\n                                                </Nav.Link>\n                                            </LinkContainer>\n                                        </Col>\n                                        <Col className=\"text-center\" xs={2}>\n                                            <Button\n                                                variant='primary'\n                                                size='sm'\n                                                onClick={() => navigationConsultantHandler(1)}\n                                                disabled={focus === consultantsMy.length - 1}\n                                            ><i className=\"fas fa-caret-right\"></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Row className='mt-3'>\n                                        <Col xs={12} md={4}>\n                                            <ListGroup>\n                                            <ListGroup.Item>\n                                                <Row className=\"my-3\">\n                                                    <Col className=\"text-left\"><b>Arrival:</b> {consultantsMy[focus].arrival && consultantsMy[focus].arrival.substring(0, 10)}</Col>\n                                                    <Col className=\"text-left\"><b>Valued:</b> {consultantsMy[focus].valued && consultantsMy[focus].valued.substring(0, 10)}</Col>\n                                                    <Col className=\"text-left\"><b>Leaving:</b> {consultantsMy[focus].leaving && consultantsMy[focus].leaving.substring(0, 10)}</Col>\n                                                </Row>\n                                                <Row className=\"my-3\">\n                                                    <Col><b>Seniority:</b> {((new Date(Date.now()) - new Date(consultantsMy[focus].arrival.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4)} years</Col>\n                                                </Row>\n\n                                                <Row className=\"my-3\">\n                                                    <Col>\n                                                        {!(consultantsMy[focus]._id === userInfo.consultantProfil._id) && (\n                                                            <>\n                                                                <label htmlFor=\"comment\"><strong>Staffing comment</strong></label>\n                                                                <InputGroup>\n                                                                    <FormControl\n                                                                        as='textarea'\n                                                                        size='sm'\n                                                                        rows={7}\n                                                                        id='comment'\n                                                                        value={commentText}\n                                                                        placeholder='Please enter a comment'\n                                                                        onChange={(e) => {\n                                                                            setCommentText(e.target.value);\n                                                                            updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                                        }}\n                                                                    ></FormControl>\n                                                                </InputGroup>\n                                                            </>\n                                                        )}\n\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            </ListGroup>\n                                        </Col>\n\n                                        <Col xs={12} md={8}>\n                                            <PxxEditor\n                                                consultantsMy={consultantsMy}\n                                                consultantFocus={focus}\n                                                searchDate={searchDate}\n                                                navigationMonthHandler={navigationMonthHandler}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                                <div className='border-bottom p-3'>\n                                    <Row>\n                                    <Col xs={12} md={4}>\n                                        <label htmlFor=\"annual-objectives\"><strong>Annual objectives</strong></label>\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    size='sm'\n                                                    rows={3}\n                                                    id='annual-objectives'\n                                                    value={trObjectives}\n                                                    placeholder='Please complete with your CDM'\n                                                    onChange={(e) => {\n                                                        setTrObjectives(e.target.value);\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            //personalObjectives: myObjectives,\n                                                            talentReviewObjectives: e.target.value,\n                                                            notProdComment: notProdComment,\n                                                            availabilityComment: availabilityComment\n                                                        }))\n                                                        //updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                    }}\n                                                ></FormControl>\n                                            </InputGroup>\n                                        </Col>\n                                        <Col xs={12} md={4}>\n                                            <label htmlFor=\"not-prod-comment\"><strong>Not production justification</strong></label>\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    size='sm'\n                                                    rows={3}\n                                                    id='not-prod-comment'\n                                                    value={notProdComment}\n                                                    placeholder='Please justify not production time. For example:&#10;- 3d-june: inter-contrat&#10;- 1d/Week: business&#10;- etc.'\n                                                    onChange={(e) => {\n                                                        setNotProdComment(e.target.value);\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            //personalObjectives: e.target.value,\n                                                            talentReviewObjectives: trObjectives,\n                                                            notProdComment: e.target.value,\n                                                            availabilityComment: availabilityComment\n                                                        }));\n                                                        //updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                    }}\n                                                ></FormControl>\n                                            </InputGroup>\n                                        </Col>\n                                        <Col xs={12} md={4}>\n                                            <label htmlFor=\"availability-comment\"><strong>Availability comment</strong></label>\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    size='sm'\n                                                    rows={3}\n                                                    id='availability-comment'\n                                                    value={availabilityComment}\n                                                    placeholder='Please share any information on your availability. For example: end of mission the 23th of October > 2d/5 available'\n                                                    onChange={(e) => {\n                                                        setAvailabilityComment(e.target.value);\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            //personalObjectives: e.target.value,\n                                                            talentReviewObjectives: trObjectives,\n                                                            notProdComment: notProdComment,\n                                                            availabilityComment: e.target.value\n                                                        }));\n                                                        //updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                    }}\n                                                ></FormControl>\n                                            </InputGroup>\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewStaffings'>\n                                            <DropDownTitleContainer title='Staffings on track' close={false}>\n                                                <ViewStaffs\n                                                    history={history}\n                                                    consultantId={consultantsMy[focus]._id}\n                                                />\n                                            </DropDownTitleContainer>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col>\n                                        <DropDownTitleContainer title='Old staffings' close={true}>\n                                            <ViewOldStaffs\n                                                history={history}\n                                                consultantId={consultantsMy[focus]._id}\n                                            />\n                                        </DropDownTitleContainer>\n                                    </Col>\n                                </Row>\n                                \n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewSkills'>\n                                            <SkillsDetails consultantId={consultantsMy[focus]._id} />\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewOthersConsultants'>\n                                            <DropDownTitleContainer title='Others consultants' close={false}>\n                                                <Form.Group controlId='switch-only-available' className='mt-3'>\n                                                    <Form.Check\n                                                        type='switch'\n                                                        id='switch-delegation'\n                                                        label='View delegation'\n                                                        checked={delegateOption}\n                                                        onChange={(e) => { e.target.checked === true ? setDelegationOption(true) : setDelegationOption(false) }}\n                                                    ></Form.Check>\n                                                </Form.Group>\n                                                <ConsultantsTab\n                                                    consultantsMy={consultantsMy}\n                                                    history={history}\n                                                    focusActive={true}\n                                                />\n                                            </DropDownTitleContainer>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n        </Container>\n    )\n}\n\nexport default PxxEditScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport {\n    createConsultant,\n    getAllCDM,\n    getAllPractice,\n    getMyConsultant,\n    updateMyConsultant\n} from '../actions/consultantActions';\nimport {\n    CONSULTANT_CREATE_RESET,\n    CONSULTANT_GRADE,\n    CONSULTANT_MY_UPDATE_RESET\n} from '../constants/consultantConstants';\nimport SkillsDetails from '../components/SkillsDetails';\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst ConsultantEditScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [matricule, setMatricule] = useState('');\n    const [practice, setPractice] = useState('');\n    const [grade, setGrade] = useState('Analyst');\n\n    const [cdm, setCdm] = useState(null);\n    const [arrival, setArrival] = useState('');\n    const [valued, setValued] = useState('');\n    const [leaving, setLeaving] = useState('');\n    const [seniority, setSeniority] = useState('');\n    const [isCDM, setIsCDM] = useState(false);\n\n    const [partialTime, setPartialTime] = useState(false);\n    const [startPartialTime, setStartPartialTime] = useState('');\n    const [endPartialTime, setEndPartialTime] = useState('');\n    const [valueMonday, setValueMonday] = useState(1);\n    const [valueTuesday, setValueTuesday] = useState(1);\n    const [valueWednesday, setValueWednesday] = useState(1);\n    const [valueThursday, setValueThursday] = useState(1);\n    const [valueFriday, setValueFriday] = useState(1);\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const [update, setUpdate] = useState(false);\n\n    const valueEditType = match.params.id ? 'edit' : 'create';\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantMy = useSelector(state => state.consultantMy);\n    const { loading, error, consultant } = consultantMy;\n\n    const consultantMyUpdate = useSelector(state => state.consultantMyUpdate);\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = consultantMyUpdate;\n\n    const consultantCreate = useSelector(state => state.consultantCreate);\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, consultantCreated } = consultantCreate;\n\n    const consultantCDMList = useSelector(state => state.consultantCDMList);\n    const { error: errorCDM, cdmList } = consultantCDMList;\n\n    const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    const { error: errorPractice, practiceList } = consultantPracticeList;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (match.params.id) {\n            if (!consultant) {\n                dispatch(getMyConsultant(match.params.id));\n            } \n        }\n    }, [dispatch, match, consultant]);\n\n    useEffect(() => {\n        if (match.params.id) {\n\n            if (consultant && consultant._id !== match.params.id) {\n                dispatch(getMyConsultant(match.params.id));\n            }\n\n        }\n    }, [dispatch, match, consultant]);\n\n    useEffect(() => {\n        if (update) {\n            dispatch(getMyConsultant(match.params.id));\n            setUpdate(false);\n        }\n    }, [dispatch, update, match]);\n\n    useEffect(() => {\n        if ((match.params.id) && (successUpdate)) {\n            setUpdate(true);\n        }\n    }, [\n        match,\n        successUpdate\n    ]);\n\n    useEffect(() => {\n        // Only in admin Level 0 access we can modify consultant Practice\n        if (!practiceList) {\n            dispatch(getAllPractice());\n        }\n    }, [dispatch, userInfo, practiceList]);\n\n    useEffect(() => {\n        // Load default data for cdm in the current practice\n        if (practice) {\n            dispatch(getAllCDM(practice));\n        }\n    }, [dispatch, practice]);\n\n    useEffect(() => {\n        if ((match.params.id) && consultant) {\n            setName(consultant.name);\n            setEmail(consultant.email);\n            setMatricule(consultant.matricule);\n            setPractice(consultant.practice);\n            setGrade(consultant.grade);\n            //setQuality(consultant.quality || []);\n            setCdm(consultant.cdmId ? consultant.cdmId : ''); //'waiting affectation'\n            setArrival(consultant.arrival.substring(0, 10));\n            setValued(consultant.valued ? consultant.valued.substring(0, 10) : '');\n            setLeaving(consultant.leaving ? consultant.leaving.substring(0, 10) : '');\n            setSeniority(((new Date(Date.now()) - new Date(consultant.arrival.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4));\n            setIsCDM(consultant.isCDM || false);\n            setPartialTime(consultant.isPartialTime.value);\n            setStartPartialTime(consultant.isPartialTime.start.substring(0, 10) ? consultant.isPartialTime.start.substring(0, 10) : false)\n            setEndPartialTime(consultant.isPartialTime.end.substring(0, 10) ? consultant.isPartialTime.end.substring(0, 10) : false)\n            setValueMonday(consultant.isPartialTime.week.filter(x => x.num === 1)[0].worked)\n            setValueTuesday(consultant.isPartialTime.week.filter(x => x.num === 2)[0].worked)\n            setValueWednesday(consultant.isPartialTime.week.filter(x => x.num === 3)[0].worked)\n            setValueThursday(consultant.isPartialTime.week.filter(x => x.num === 4)[0].worked)\n            setValueFriday(consultant.isPartialTime.week.filter(x => x.num === 5)[0].worked)\n        }\n    }, [match, consultant, valueEditType]);\n\n    useEffect(() => {\n\n        // Charge default practice for admin Level 0 user\n        if (!practice && userInfo && practiceList) {\n            setPractice(practiceList[0]);\n        }\n\n    }, [\n        userInfo,\n        practice,\n        practiceList,\n        cdm,\n        cdmList\n    ]);\n\n    useEffect(() => {\n        if (errorUpdate) {\n            setErrorMessage({ message: errorUpdate, type: 'danger' });\n            dispatch({ type: CONSULTANT_MY_UPDATE_RESET })\n        }\n        if (successUpdate) {\n            setSuccessMessage({ message: 'Consultant updated', type: 'success' });\n            dispatch({ type: CONSULTANT_MY_UPDATE_RESET })\n        }\n        if (errorCreate) {\n            setErrorMessage({ message: errorCreate, type: 'danger' });\n            dispatch({ type: CONSULTANT_CREATE_RESET })\n        }\n        if (successCreate) {\n            setSuccessMessage({ message: 'Consultant created', type: 'success' });\n            history.push(`/editconsultant/${consultantCreated._id}`);\n            dispatch({ type: CONSULTANT_CREATE_RESET })\n        }\n    }, [dispatch, history, errorUpdate, successUpdate, successCreate, errorCreate, consultantCreated]);\n\n    const submitHandler = (e) => {\n\n        e.preventDefault();\n\n        if (valueEditType === 'edit') {\n\n            const updatedUser = {\n                ...consultant,\n                name: name,\n                matricule: matricule,\n                arrival: new Date(arrival),\n                valued: new Date(valued),\n                leaving: leaving ? new Date(leaving) : null,\n                isCDM: isCDM,\n                grade: grade,\n                cdmId: cdm,\n                isPartialTime: {\n                    value: partialTime,\n                    start: partialTime ? startPartialTime : '',\n                    end: partialTime ? endPartialTime : '',\n                    week: [\n                        { num: 1, worked: partialTime ? valueMonday : 1 },\n                        { num: 2, worked: partialTime ? valueTuesday : 1 },\n                        { num: 3, worked: partialTime ? valueWednesday : 1 },\n                        { num: 4, worked: partialTime ? valueThursday : 1 },\n                        { num: 5, worked: partialTime ? valueFriday : 1 }\n                    ]\n                }\n            }\n            dispatch(updateMyConsultant(updatedUser));\n        }\n\n        if (valueEditType === 'create') {\n            const consultant = {\n                name,\n                email,\n                matricule,\n                arrival,\n                valued,\n                leaving,\n                practice,\n                isCDM,\n                grade: grade,\n                cdmId: cdm,\n                isPartialTime: {\n                    value: partialTime,\n                    start: startPartialTime,\n                    end: endPartialTime,\n                    week: [\n                        { num: 1, worked: valueMonday },\n                        { num: 2, worked: valueTuesday },\n                        { num: 3, worked: valueWednesday },\n                        { num: 4, worked: valueThursday },\n                        { num: 5, worked: valueFriday },\n                    ]\n                }\n            }\n            dispatch(createConsultant(consultant));\n        }\n    }\n\n    const changeValueDateHandler = (e) => {\n        setValued(e.substring(0, 10));\n        setSeniority(((new Date(Date.now()) - new Date(e.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4));\n    }\n\n    const goBackHandler = () => {\n        history.go(-1);\n        setErrorMessage('');\n        setSuccessMessage('');\n    }\n\n    return (\n        <>\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorMessage && <Message variant='danger'>{errorMessage.message}</Message>}\n\n            {errorCDM && <Message variant='danger'>{errorCDM}</Message>}\n            {errorPractice && <Message variant='danger'>{errorPractice}</Message>}\n\n            {loading && <Loader />}\n\n            <Button className='mb-3' onClick={() => goBackHandler()}>\n                Go Back\n            </Button>\n            <DisplayChildren access='editConsultantProfil'>\n\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={8}>\n\n                            <Form onSubmit={submitHandler}>\n                                <h2>{name && name}</h2>\n\n                                <DropDownTitleContainer title='Personal' close={valueEditType !== 'create'}>\n                                    <ListGroup.Item>\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='name'>\n                                                    <Form.Label><b>Name</b></Form.Label>\n                                                    <Form.Control\n                                                        type='name'\n                                                        placeholder='Enter Name'\n                                                        value={name && name}\n                                                        onChange={(e) => setName(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='matricule'>\n                                                    <Form.Label><b>Matricule</b></Form.Label>\n                                                    <Form.Control\n                                                        type='text'\n                                                        placeholder='Enter Matricule'\n                                                        value={matricule && matricule}\n                                                        onChange={(e) => setMatricule(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group controlId='seniority'>\n                                                    <Form.Label><b>Seniority</b> <i>(years)</i></Form.Label>\n                                                    <Form.Control\n                                                        type='text'\n                                                        placeholder='-'\n                                                        value={seniority && seniority}\n                                                        readOnly\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='email'>\n                                                    <Form.Label><b>Email Address</b></Form.Label>\n                                                    <Form.Control\n                                                        type='email'\n                                                        placeholder='Enter email'\n                                                        value={email && email}\n                                                        onChange={(e) => setEmail(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                    </ListGroup.Item>\n                                </DropDownTitleContainer>\n\n                                {consultant && valueEditType !== 'create' && (\n                                    <SkillsDetails consultantId={consultant._id} />\n                                )}\n\n                                <DropDownTitleContainer title='Profil' close={false}>\n                                    <ListGroup.Item>\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='practice'>\n                                                    <Form.Label><b>Practice</b></Form.Label>\n                                                    <InputGroup>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={practice ? practice : userInfo ? userInfo.consultantProfil.practice : \"\"}\n                                                            //disabled={userInfo && !(userInfo.adminLevel === 0)}\n                                                            onChange={(e) => {\n                                                                setPractice(e.target.value)\n                                                            }}\n                                                            required\n                                                        >\n                                                            {!practiceList ? <option value={practice && practice}>{practice}</option>\n                                                                : errorPractice ? <Message variant='Danger'>No Practice found</Message>\n                                                                    : (\n                                                                        practiceList.map(x => (\n                                                                            <option\n                                                                                key={x}\n                                                                                value={x}\n                                                                                disabled={x === '-' ? true : false}\n                                                                            >{x}</option>\n                                                                        ))\n                                                                    )}\n                                                        </Form.Control>\n                                                    </InputGroup>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='grade'>\n                                                    <Form.Label><b>Grade</b></Form.Label>\n                                                    <Form.Control\n                                                        as='select'\n                                                        placeholder='Enter grade'\n                                                        value={grade && grade}\n                                                        onChange={(e) => setGrade(e.target.value)}\n                                                        required\n                                                    >\n                                                        {CONSULTANT_GRADE.map(x => (\n                                                            <option key={x} value={x}>{x}</option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='cdm'>\n                                                    <Form.Label><b>CDM</b></Form.Label>\n                                                    <Form.Control\n                                                        as='select'\n                                                        value={cdm ? cdm : 'default'}\n                                                        //disabled={userInfo && !(userInfo.adminLevel <= 2)}\n                                                        onChange={(e) => setCdm(e.target.value)}\n                                                        required\n                                                    >\n                                                        <option value='default'>Please Select</option>\n                                                        {!cdmList ? 'No cdm'\n                                                            : errorCDM ? <Message variant='danger'>No CDM found, please verify Practice</Message>\n                                                                : cdmList.length && (\n                                                                    cdmList.map((x,val) => (\n                                                                        <option\n                                                                            key={val}\n                                                                            value={x._id}\n                                                                        >{x.name}</option>\n                                                                    ))\n                                                                )}\n                                                    </Form.Control>\n\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId='valued'>\n                                                        <Form.Label><b>Valued date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={valued && valued}\n                                                            onChange={(e) => changeValueDateHandler(e.target.value)}\n                                                            required\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n\n                                                <Col>\n                                                    <Form.Group controlId='arrival'>\n                                                        <Form.Label><b>Arrival date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={arrival && arrival}\n                                                            min={valued}\n                                                            onChange={(e) => {\n                                                                setArrival(e.target.value);\n                                                            }}\n                                                            required\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n\n                                                <Col>\n                                                    <Form.Group controlId='leaving'>\n                                                        <Form.Label><b>Leaving date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={leaving && leaving}\n                                                            min={arrival}\n                                                            onChange={(e) => setLeaving(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Form.Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId=\"partialtime\">\n                                                        <Form.Check\n                                                            type=\"checkbox\"\n                                                            label=\"Partial time\"\n                                                            checked={partialTime ? true : false}\n                                                            onChange={(e) => {\n                                                                setPartialTime(e.target.checked)\n                                                            }} />\n                                                    </Form.Group>\n                                                </Col>\n                                                {partialTime && (\n                                                    <>\n                                                        <Col>\n                                                            <Form.Group controlId='startpartialtime'>\n                                                                <Form.Label>Start</Form.Label>\n                                                                <Form.Control\n                                                                    type=\"Date\"\n                                                                    min={arrival && arrival}\n                                                                    value={startPartialTime && startPartialTime}\n                                                                    onChange={(e) => {\n                                                                        setStartPartialTime(e.target.value.substring(0, 10));\n                                                                        !endPartialTime && setEndPartialTime(e.target.value.substring(0, 10));\n                                                                        (endPartialTime < e.target.value.substring(0, 10)) && setEndPartialTime(e.target.value.substring(0, 10));\n                                                                    }}\n                                                                    required\n                                                                ></Form.Control>\n                                                            </Form.Group>\n                                                        </Col>\n\n                                                        <Col>\n                                                            <Form.Group controlId='endpartialtime'>\n                                                                <Form.Label>End</Form.Label>\n                                                                <Form.Control\n                                                                    type=\"Date\"\n                                                                    value={endPartialTime && endPartialTime}\n                                                                    min={startPartialTime || ''}\n                                                                    onChange={(e) => {\n                                                                        setEndPartialTime(e.target.value.substring(0, 10))\n                                                                    }}\n                                                                    required\n                                                                ></Form.Control>\n                                                            </Form.Group>\n                                                        </Col>\n                                                    </>\n                                                )}\n                                            </Form.Row>\n\n                                            {partialTime && (\n                                                <Form.Row>\n                                                    <Col>\n                                                        <Form.Group controlId='monday'>\n                                                            <Form.Label><b>Monday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueMonday)}\n                                                                onChange={(e) => setValueMonday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='tuesday'>\n                                                            <Form.Label><b>Tuesday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueTuesday)}\n                                                                onChange={(e) => setValueTuesday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='wendnesday'>\n                                                            <Form.Label><b>Wendnesday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueWednesday)}\n                                                                onChange={(e) => setValueWednesday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='thursday'>\n                                                            <Form.Label><b>Thursday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueThursday)}\n                                                                onChange={(e) => setValueThursday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='friday'>\n                                                            <Form.Label><b>Friday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueFriday)}\n                                                                onChange={(e) => setValueFriday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Form.Row>\n                                            )}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId=\"iscdm\">\n                                                        <Form.Check\n                                                            type=\"checkbox\"\n                                                            label=\"Is CDM\"\n                                                            checked={isCDM ? true : false}\n                                                            onChange={(e) => {\n                                                                setIsCDM(e.target.checked);\n                                                            }} />\n                                                    </Form.Group>\n                                                </Col>\n                                            </Form.Row>\n                                        </ListGroup.Item>\n                                    </ListGroup.Item>\n                                </DropDownTitleContainer>\n\n                                <Form.Row className='pt-3'>\n                                    <Col>\n                                        <Button\n                                            type='submit'\n                                            variant='primary'\n                                            block\n                                            disabled={!name || !email || !matricule || !practice || !valued || !arrival}\n                                            //disabled={!name || !email || !matricule || !practice || !cdm || !valued || !arrival}\n                                        >{(loadingUpdate || loadingCreate) ? <Loader /> : valueEditType === 'create' ? \"Create\" : \"Update\"}\n                                        </Button>\n                                    </Col>\n                                </Form.Row>\n                                <Form.Row>\n                                    <Col>\n                                        {successMessage && <Message variant='success'><i className=\"fas fa-check-circle\">  Your information is correctly registered</i></Message>}\n                                    </Col>\n                                </Form.Row>\n\n                            </Form>\n\n\n                        </Col>\n                    </Row>\n                </Container>\n            </DisplayChildren>\n        </>\n    )\n}\n\nexport default ConsultantEditScreen;\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport * as XLSX from 'xlsx';\n\nconst ImportExcelFile = ({setImportData, sheets = 'all'}) => {\n\n    const [fileName, setFileName] = useState('');\n\n    const readFileHandler = async (e) => {\n\n        //const [importData, setImportData] = useState([]);\n\n        let file = e.target.files[0];\n\n        let reader = new FileReader();\n        reader.onload = function (e) {\n\n            let data = e.target.result;\n            let workBook = XLSX.read(data, { type: 'binary' });\n\n            const jsonData = []\n            for (let incr = 0; incr < workBook.SheetNames.length; incr++) {\n                const wsName = workBook.SheetNames[incr];\n                const ws = workBook.Sheets[wsName];\n                jsonData.push(XLSX.utils.sheet_to_json(ws)); //, status:'not imported'}\n            }\n            if (sheets === '1') {\n                setImportData(jsonData[0].map(x => ({...x, status:'not imported'})));\n            }\n            if (sheets === 'all'){\n                setImportData(jsonData);\n            }\n            setFileName(file.name);\n        };\n        reader.readAsBinaryString(file);\n    }\n\n    return (\n        <Form>\n            <Form.File\n                id=\"importData\"\n                custom\n            >\n                <Form.File.Label data-browse=\"Upload\">{fileName ? fileName : '  ...  '}</Form.File.Label>\n                <Form.File.Input onChange={(e) => readFileHandler(e)} />\n            </Form.File>\n        </Form>\n    )\n}\n\nexport default ImportExcelFile\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { uploadConsultantWk, updateConsultantWk } from '../actions/consultantActions';\nimport Form from 'react-bootstrap/Form';\n\nconst FlowImportWKConsultants = (props) => {\n\n    const dispatch = useDispatch();\n\n    const [step, setStep] = useState(0);\n    //const [selectedFile, setSelectedFile] = useState(null);\n\n    const consultantUploadWk = useSelector(state => state.consultantUploadWk);\n    const { loading: loadingUpload, error: errorUpload, path } = consultantUploadWk;\n\n    const consultantUpdateWk = useSelector(state => state.consultantUpdateWk);\n    const { loading: loadingUpdate, error: errorUpdate, message } = consultantUpdateWk;\n\n    const onChangeHandler = (e) => {\n        const data = new FormData();\n        data.append('file', e.target.files[0]);\n        dispatch(uploadConsultantWk(data));\n    };\n\n    const startImportData = () => {\n        if (path) {\n            dispatch(updateConsultantWk(path));\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Row className='align-items-center'>\n                    <Col className='text-center'>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Import consultants data from Wavekeeper\n                        </Modal.Title>\n                    </Col>\n                </Row>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Row className='mb-3'>\n                    <Col><Button className={step >= 0 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(0)} variant='ligth' disabled={step < 0}><strong>1-Guidelines</strong></Button></Col>\n                    <Col><Button className={step >= 1 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(1)} variant='ligth' disabled={step < 1}><strong>2-Upload in App</strong></Button></Col>\n                    <Col><Button className={step >= 2 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(2)} variant='ligth' disabled={step < 2}><strong>3-Start update</strong></Button></Col>\n                    <Col><Button className={step >= 3 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(3)} variant='ligth' disabled={step < 3}><strong>4-Result</strong></Button></Col>\n                </Row>\n\n                <Row className='align-items-center'>\n\n                    <Col>\n                        {step === 0 && (\n                            <Row>\n                                <Col>\n                                    <h4>Process to export from Wavekeeper <a href=\"https://wavekeeper.wavestone-app.com/web#action=534&model=hr.presence&view_type=list&cids=1&menu_id=92\" target=\"_blank\" rel=\"noopener noreferrer\">(link)</a></h4>\n                                    <p>Please connect to Wavekeeper</p>\n                                    <ul>\n                                        <li>Step 1: Go to collaborators</li>\n                                        <li>Step 2: Apply filter to keep only current consultants</li>\n                                        <li>Step 3: Select all lines and go to actions / export</li>\n                                        <li>Step 4: Select filter 'JPR_export_2'</li>\n                                        <li>Step 5: Save the Excel file on you desktop</li>\n                                    </ul>\n                                    <Image src=\"/images/WK_export_consultants_application_filtres.jpg\" rounded fluid />\n                                </Col>\n                            </Row>\n                        )}\n                        {step === 1 && (\n                            <Row className='align-items-center'>\n                                <Col className='text-center'>\n                                    <h4>Upload your file here</h4>\n                                    {loadingUpload ? <Loader /> : (\n                                        <input \n                                            className='my-3' \n                                            type='file' \n                                            name='hr.presence' \n                                            onChange={onChangeHandler} \n                                        />\n                                    )}\n                                    {errorUpload && <Message variant='danger'>{errorUpload}</Message>}\n                                </Col>\n                            </Row>\n                        )}\n                        {step === 2 && (\n                            path ? (\n                                <Row>\n                                    <Col className='text-center'>\n                                        <h4>Do you want to update your consultants ?</h4>\n                                        {loadingUpdate ? <Loader /> : (\n                                            <Button variant='primary' className='m-3' onClick={startImportData}>\n                                                Update\n                                            </Button>\n                                        )}\n                                        <p>Process could take a few minute</p>\n                                        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                                    </Col>\n                                </Row>\n                            ) : (\n                                <Row><Col>Something wrong retry step 2</Col></Row>\n                            )\n                        )}\n                        {step === 3 && (\n                            <Form.Control\n                                as='textarea'\n                                rows={10}\n                                value={message && message}\n                                readOnly\n                            //plaintext\n                            />\n                        )}\n                    </Col>\n                </Row>\n\n\n            </Modal.Body>\n            <Modal.Footer>\n                {step === 3 && (\n                    <Button onClick={props.onHide}>Close</Button>\n                )}\n                {step < 3 && (\n                    <Button\n                        variant='success'\n                        onClick={() => (step + 1 <= 3) && setStep(step + 1)}\n                        disabled={step === 3 || (step === 1 && !path) || (step === 2 && !message)}\n                    >Next</Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default FlowImportWKConsultants;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteConsultant, getAllMyAdminConsultants, consultantImportInMass } from '../actions/consultantActions';\nimport { CONSULTANT_DELETE_RESET } from '../constants/consultantConstants';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport ReactExport from \"react-export-excel\";\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FlowImportWKConsultants from '../components/FlowImportWKConsultants';\nimport DisplayChlidren from '../components/DisplayChildren';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ManageConsultantScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const [pageSize, setPageSize] = useState(10000);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n\n    const [exportExcel, setExportExcel] = useState('');\n\n    const [importData, setImportData] = useState([]);\n\n    //const [selectedFile, setSelectedFile] = useState(null);\n    //const [message, setMessage] = useState('');\n\n    const [showImportConsultant, setShowImportConsultant] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantsMyAdminList = useSelector(state => state.consultantsMyAdminList);\n    const { loading, error, consultantsMyAdmin, pages, page, count } = consultantsMyAdminList;\n\n    const consultantDelete = useSelector(state => state.consultantDelete);\n    const { success: successConsultantDelete } = consultantDelete;\n\n    const consultantsMassImport = useSelector(state => state.consultantsMassImport);\n    const { loading:loadingMassImport, error:errorMassImport, success:successMassImport } = consultantsMassImport;\n\n    /* const consultantUploadWk = useSelector(state => state.consultantUploadWk);\n    const { loading:loadingUpload, error:errorUpload, path } = consultantUploadWk;\n\n    const consultantUpdateWk = useSelector(state => state.consultantUpdateWk);\n    const { loading:loadingUpdate, error:errorUpdate, message } = consultantUpdateWk; */\n\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(getAllMyAdminConsultants(keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, pageNumber, pageSize, keyword, successMassImport]);\n\n    useEffect(() => {\n        if (consultantsMyAdmin) {\n            const exportExcelData = consultantsMyAdmin.map((consultant) => ({\n                'NAME': consultant.name,\n                'EMAIL': consultant.email,\n                'PRACTICE': consultant.practice,\n                'MATRICULE': consultant.matricule,\n                'VALUED': consultant.valued ? consultant.valued.substring(0,10) : '',\n                'ARRIVAL': consultant.arrival ? consultant.arrival.substring(0,10) : '',\n                'LEAVING': consultant.leaving ? consultant.leaving.substring(0,10) : '',\n                'PARTIAL_TIME': consultant.isPartialTime.value,\n                'GRADE': consultant.grade,\n                'IS_CDM': consultant.isCDM,\n                'CDM_MATRICULE': consultant.cdmId && consultant.cdmId.matricule,\n                'CDM_NAME': consultant.cdmId && consultant.cdmId.name,\n                'COMMENT': consultant.comment\n            }));\n            setExportExcel(exportExcelData);\n        }\n    },[consultantsMyAdmin])\n\n    useEffect(() => {\n        if (successConsultantDelete) {\n            dispatch(getAllMyAdminConsultants(keyword, pageNumber, pageSize));\n            dispatch({ type: CONSULTANT_DELETE_RESET });\n        }\n    // eslint-disable-next-line\n    }, [dispatch, successConsultantDelete]);\n\n\n    useEffect(() => {\n        if(importData.length > 0) {\n            dispatch(consultantImportInMass(importData));\n        }\n    },[dispatch, importData]);\n\n    const addConsultantHandler = () => {\n        history.push('/admin/consultant/add');\n    }\n\n    const onClickEditHandler = (consultantId) => {\n        history.push(`/editconsultant/${consultantId}`);\n    };\n\n    const onClickDeleteHandler = (consultant) => {\n        if (window.confirm(`Are you sure to delete user: ${consultant.name} ?`)) {\n            dispatch(deleteConsultant(consultant._id));\n        }\n    }\n\n    return (\n        <>\n            <Meta />\n            {errorMassImport && <Message variant='danger'>{errorMassImport}</Message>}\n\n            <FlowImportWKConsultants \n                show={showImportConsultant}\n                onHide={() => setShowImportConsultant(false)}\n            />\n\n            <DisplayChlidren access='updateConsultantsFromWK'>\n                <Button variant='primary' onClick={() => setShowImportConsultant(true)}>Import WK</Button>\n            </DisplayChlidren>\n\n            <DropDownTitleContainer title='Manage consultants' close={false}>\n                <ListGroup.Item>\n                    \n                    \n                    <Row>\n\n                        <Col xs={6} md={2}>\n                            <Button \n                                className=\"mb-3\" \n                                onClick={() => addConsultantHandler()}\n                            ><i className=\"fas fa-user-edit mr-2\"></i>Add\n                            </Button>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search name'\n                                    value={keyword && keyword}\n                                    onChange={(e) => setKeyword(e.target.value)}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} consultants found` : '0 consultant found'} />\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            {loadingMassImport ? (<Loader />) : (\n                                <ImportExcelFile setImportData={setImportData} />\n                            )}\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            {exportExcel && (\n                                <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                    <ExcelSheet data={exportExcel} name=\"consultantsSheet\">\n                                        <ExcelColumn label=\"NAME\" value=\"NAME\" />\n                                        <ExcelColumn label=\"EMAIL\" value=\"EMAIL\" />\n                                        <ExcelColumn label=\"PRACTICE\" value=\"PRACTICE\" />\n                                        <ExcelColumn label=\"MATRICULE\" value=\"MATRICULE\" />\n                                        <ExcelColumn label=\"VALUED\" value=\"VALUED\" />\n                                        <ExcelColumn label=\"ARRIVAL\" value=\"ARRIVAL\" />\n                                        <ExcelColumn label=\"LEAVING\" value=\"LEAVING\" />\n                                        <ExcelColumn label=\"PARTIAL_TIME\" value=\"PARTIAL_TIME\" />\n                                        <ExcelColumn label=\"GRADE\" value=\"GRADE\" />\n                                        <ExcelColumn label=\"IS_CDM\" value=\"IS_CDM\" />\n                                        <ExcelColumn label=\"CDM_MATRICULE\" value=\"CDM_MATRICULE\" />\n                                        <ExcelColumn label=\"CDM_NAME\" value=\"CDM_NAME\" />\n                                        <ExcelColumn label=\"COMMENT\" value=\"COMMENT\" />\n                                    </ExcelSheet>\n                                </ExcelFile>\n                            )}\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50, 10000].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x === 10000 ? 'All (export)' : `${x} / page`}</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    {consultantsMyAdmin && consultantsMyAdmin.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                        loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n\n                            <Table responsive hover striped>\n                                <thead>\n                                    <tr className='table-primary'>\n                                        <th className='align-middle text-light'>Consultant name</th>\n                                        <th className='align-middle text-light'>Matricule</th>\n                                        <th className='align-middle text-light'>Practice</th>\n                                        <th className='align-middle text-light'>Valued</th>\n                                        <th className='align-middle text-light'>Arrival</th>\n                                        <th className='align-middle text-light'>Leaving</th>\n                                        <th className='align-middle text-light'>Seniority</th>\n                                        <th className='align-middle text-light'></th>\n                                        <th className='align-middle text-light'></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {consultantsMyAdmin && consultantsMyAdmin.map((consultant) => (\n                                        <tr key={consultant._id}>\n                                            <td className='align-middle'>{consultant.name}</td>\n                                            <td className='align-middle'>{consultant.matricule}</td>\n                                            <td className='align-middle'>{consultant.practice}</td>\n                                            <td className='align-middle'>{consultant.valued ? consultant.valued.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{consultant.arrival ? consultant.arrival.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{consultant.leaving ? consultant.leaving.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{\n                                                consultant.valued ? ((new Date(Date.now()) - new Date(consultant.valued.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4) : 0\n                                            } years</td>\n                                            <td className='align-middle'>\n                                                <Button\n                                                    className='btn btn-primary p-1'\n                                                    onClick={() => onClickEditHandler(consultant._id)}\n                                                    size='sm'\n                                                ><i className=\"fas fa-user-edit\"></i>\n                                                </Button>\n                                            </td>\n                                            <td className='align-middle'>\n                                                <Button\n                                                    className='btn btn-danger p-1'\n                                                    onClick={() => onClickDeleteHandler(consultant)}\n                                                    size='sm'\n                                                ><i className=\"fas fa-user-times\"></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n\n                        )}\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(getAllMyAdminConsultants(keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageConsultantScreen;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Message from '../components/Message';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { deleteUser, listUsers } from '../actions/userActions';\n\nconst ManageUsersScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userList = useSelector(state => state.userList);\n    const { users, pages, page, count } = userList;\n\n    const userDelete = useSelector(state => state.userDelete);\n    const { error, success } = userDelete;\n\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(listUsers(userInfo.consultantProfil.practice, keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, success, keyword, pageNumber, pageSize]);\n\n\n    const onClickEditHandler = (userId) => {\n        history.push(`/admin/edituser/${userId}`);\n    };\n\n    const onClickDeleteHandler = (user) => {\n        //console.log('delete user');\n        if (window.confirm(`Are you sure to delete user: ${user.name} ?`)) {\n            dispatch(deleteUser(user._id));\n        }\n    };\n\n    return (\n        <>\n            {error && (<Message variant='danger'>{error}</Message>)}\n\n            <Row><Col className='text-right'>\n                <Button onClick={() => history.push('/admin/add-users')}><i className=\"far fa-user\"></i>  Create users</Button>\n            </Col></Row>\n\n            <DropDownTitleContainer title='Manage users' close={false}>\n                <ListGroup.Item>\n                    <Row>\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search name'\n                                    value={keyword && keyword}\n                                    onChange={(e) => setKeyword(e.target.value)}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={6}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} consultants found` : '0 consultant found'} />\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x} / page</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    <Table responsive hover striped>\n                        <thead>\n                            <tr className='table-primary'>\n                                <th className='align-middle text-light'>User name</th>\n                                <th className='align-middle text-light'>Matricule</th>\n                                <th className='align-middle text-light text-center'>Practice</th>\n                                <th className='align-middle text-light text-center'>Created at</th>\n                                <th className='align-middle text-light text-center'>Last connection</th>\n                                <th className='align-middle text-light text-center'>Status</th>\n                                <th className='align-middle text-light text-center'>User Profil</th>\n                                <th className='align-middle text-light'></th>\n                                <th className='align-middle text-light'></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {users && users.map((user) => (\n                                <tr key={user._id}>\n                                    <td className='align-middle'><b>{user.name && user.name}</b></td>\n                                    <td className='align-middle'>{user.consultantProfil && user.consultantProfil.matricule}</td>\n                                    <td className='align-middle text-center'>{user.consultantProfil && user.consultantProfil.practice}</td>\n                                    <td className='align-middle text-center'>{user.createdAt && user.createdAt.toString().substring(0, 10)}</td>\n                                    <td className='align-middle text-center'>{user.lastConnexion && user.lastConnexion.toString().substring(0, 10)}</td>\n                                    <td className='align-middle text-center'>\n                                        {\n                                            user.status && user.status === 'Waiting approval' ?\n                                                <i className=\"far fa-clock\" style={{ color: 'orange' }}></i>\n                                                : user.status === 'Validated' ?\n                                                    <i className=\"fas fa-check-circle\" style={{ color: 'green' }} ></i>\n                                                    : user.status === 'Refused' ?\n                                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i> : 'unknown'\n\n                                        }</td>\n                                    <td className='align-middle text-center'>{user.profil && user.profil.profil && user.profil.profil}</td>\n                                    <td className='align-middle'>\n                                        <Button\n                                            className='btn btn-primary p-1'\n                                            onClick={() => onClickEditHandler(user._id)}\n                                            size='sm'\n                                        ><i className=\"fas fa-user-edit\"></i>\n                                        </Button>\n                                    </td>\n                                    <td className='align-middle'>\n                                        <Button\n                                            className='btn btn-danger p-1'\n                                            onClick={() => onClickDeleteHandler(user)}\n                                            size='sm'\n                                        ><i className=\"fas fa-user-times\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(listUsers(userInfo.consultantProfil.practice, keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageUsersScreen;\n","import axios from 'axios';\nimport { \n    ACCESS_LIST_FAIL, \n    ACCESS_LIST_REQUEST, \n    ACCESS_LIST_SUCCESS, \n    ACCESS_UPDATE_FRONTACCESS_FAIL, \n    ACCESS_UPDATE_FRONTACCESS_REQUEST,\n    ACCESS_UPDATE_FRONTACCESS_SUCCESS\n} from '../constants/accessConstants';\n\nexport const getAllAccess = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: ACCESS_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/access`, config);\n        dispatch({ type: ACCESS_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: ACCESS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateprofilFrontAcessRule = (rule) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: ACCESS_UPDATE_FRONTACCESS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/access`, rule, config);\n        dispatch({ type: ACCESS_UPDATE_FRONTACCESS_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: ACCESS_UPDATE_FRONTACCESS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup'\n//import Alert from 'react-bootstrap/Alert';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { getAllMyAdminConsultants } from '../actions/consultantActions';\nimport { USER_STATUS, USER_UPDATE_RESET } from '../constants/userConstants';\nimport { getAllAccess } from '../actions/accessActions';\n\nconst UserEditScreen = ({ match, history }) => {\n\n    const userId = match.params.id;\n\n    const dispatch = useDispatch();\n    \n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [linkConsultant, setLinkConsultant] = useState('');\n    const [profil, setProfil] = useState('');\n    const [status, setStatus] = useState('');\n    \n    //const [message, setMessage] = useState('');\n    \n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    \n    const userDetails = useSelector(state => state.userDetails);\n    const { error, loading, user } = userDetails;\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const { error: errorUpdate, success: successUpdate } = userUpdate;\n\n    const consultantsMyAdminList = useSelector(state => state.consultantsMyAdminList);\n    const { error:errorMyAdmin, consultantsMyAdmin } = consultantsMyAdminList;\n\n    const accessList = useSelector(state => state.accessList);\n    const { access } = accessList;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n\n        if (!loading && !error && (!user || user._id !== userId)) {\n            dispatch(getUserDetails(userId));\n        }\n\n    }, [dispatch, user, error, userId, loading]);\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setProfil(user.profil);\n            setStatus(user.status);\n            if (user.consultantProfil) {\n                setLinkConsultant(user.consultantProfil._id);\n            } else {\n                setLinkConsultant('');\n            }\n            //console.log(user.profil);\n        }\n\n    }, [user]);\n\n    /*\n    useEffect(() => {\n\n        if (error) {\n            setMessage({ message: error, type: 'danger' });\n        }\n        if (errorMyAdmin) {\n            setMessage({ message: errorMyAdmin, type: 'danger' });\n        }\n        if (errorUpdate) {\n            setMessage({ message: errorUpdate, type: 'danger' });\n        }\n        if (successUpdate) {\n            setMessage({ message: 'User profil updated', type: 'success' });\n            dispatch({type: USER_UPDATE_RESET});\n        }\n\n    }, [dispatch, error, errorMyAdmin, errorUpdate, successUpdate]);\n    */\n\n    useEffect(() => {\n\n        if (user && user._id === userId) {\n            dispatch(getAllMyAdminConsultants('','',10000));\n        }\n\n    }, [dispatch, user, userId]);\n\n    useEffect(() => {\n        if (!access) {\n            dispatch(getAllAccess());\n        }\n        //console.log(access)\n    },[dispatch, access]);\n\n    const updateProfilHandler = (profil) => {\n        const newProfil = access.filter(x => x.profil === profil)[0];\n        setProfil(newProfil);\n        //console.log('updateProfil');\n    }\n\n    const goBackHandler = () => {\n        history.go(-1);\n        dispatch({type: USER_UPDATE_RESET});\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const updatedUser = {\n            ...user,\n            name: name,\n            email: email,\n            consultantProfil: linkConsultant,\n            profil: profil._id,\n            status: status\n        };\n        dispatch(updateUser(updatedUser));\n\n    };\n\n    return (\n        <>\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorMyAdmin && <Message variant='danger'>{errorMyAdmin}</Message>}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {successUpdate && <Message variant='success'>User updated with success</Message>}\n\n            <Button className='mb-3' onClick={() => goBackHandler()}>\n                Go Back\n            </Button>\n\n            <FormContainer>\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label><b>Name</b></Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            value={name && name}\n                            onChange={(e) => setName(e.target.value)}\n                            required\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label><b>Email address</b></Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter email'\n                            value={email && email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='consultantProfil'>\n                        <Form.Label><b>Linked Consultant Profil</b></Form.Label>\n                        <InputGroup>\n                            <Form.Control\n                                as='select'\n                                placeholder='Enter consultant to link'\n                                value={linkConsultant && linkConsultant}\n                                onChange={(e) => setLinkConsultant(e.target.value)}\n                                required\n                            >\n                                {consultantsMyAdmin && consultantsMyAdmin.map(\n                                    x => (\n                                        <option\n                                            key={x._id}\n                                            value={x._id}\n                                        >{x.name}</option>\n                                    )\n                                )}\n                            </Form.Control>\n                            <InputGroup.Append>\n                                <Button onClick={() => history.push(`/editconsultant/${linkConsultant}`)}>Edit user</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n\n                    </Form.Group>\n\n                    <Form.Group controlId='user-profil'>\n                        <Form.Label><b>User profil</b></Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={profil && profil.profil ? profil.profil : ''}\n                            onChange={(e) => updateProfilHandler(e.target.value)}\n                            required\n                        >\n                            <option value=''>--Select--</option>\n                            {access && access.map( x => (\n                                <option\n                                    key={x._id}\n                                    value={x.profil}\n                                >{x.profil}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='status'>\n                        <Form.Label><b>Account Status</b></Form.Label>\n                        <Form.Control\n                            as='select'\n                            placeholder='Select status for account'\n                            value={status && status}\n                            onChange={(e) => setStatus(e.target.value)}\n                            required\n                        >\n                            {USER_STATUS.map( x => (\n                                <option\n                                    key={x}\n                                    value={x}\n                                >{x}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n\n\n                </Form>\n            </FormContainer>\n\n        </>\n    )\n};\n\nexport default UserEditScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'; \nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect);\n            // If user is authenticate, there is no search and user is redirect to home page\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            // Dispatch Register\n            setMessage(null); // to reinitialize the message before testing\n            if (password !== confirmPassword) {\n                setMessage('Passwords do not match')\n            } else {\n                dispatch(register(name, email, password));\n            }\n        }\n    };\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Adress</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='confirm-password'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variat='primary'>\n                    Register\n                </Button>\n\n                <Row className='py-3'>\n                    <Col>\n                        Have an account ? \n                        <Link to={redirect ? \n                            `/login?reditect=${redirect}`\n                        : '/login'}>\n                            Login\n                        </Link>\n                    </Col>\n                </Row>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport ViewStaffs from '../components/ViewStaffs';\nimport ViewOldStaffs from '../components/ViewOldStaffs';\nimport SkillsDetails from './SkillsDetails';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport { getConsultantCdm } from '../actions/consultantActions';\nimport DisplayChildren from '../components/DisplayChildren';\n\n\nconst StaffAConsultant = ({ history, onHide, show, consultant, loadingData={}, mode, addStaffHandler }) => {\n\n    const dispatch = useDispatch();\n\n    const [sdResponsability, setSdResponsability] = useState(loadingData.responsability ? loadingData.responsability : '');\n    const [sdPriority, setSdPriority] = useState(loadingData.priority ? loadingData.priority : '');\n    const [sdInformation, setSdInformation] = useState(loadingData.information ? loadingData.information : '');\n    //console.log('consultant', consultant)\n\n\n    const consultantGetCdm = useSelector(state => state.consultantGetCdm);\n    const { cdm } = consultantGetCdm;\n\n    useEffect(() => {\n        if(show) {\n            dispatch(getConsultantCdm(consultant._id))\n        }\n    }, [dispatch, consultant, show])\n\n    return (\n\n        <Modal\n            show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            onHide={onHide}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    {consultant.name ? consultant.name + ' - ' + consultant.grade + (cdm ? ' (' + cdm.name + ')' : '') : ''}\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                {mode === 'staffing' && (\n                    <DisplayChildren access='editStaff'>\n                        <Row>\n                            <Col className='mt-3'>\n                                <label htmlFor='sd-responsability'><strong>Responsability *</strong></label>\n                                <InputGroup id='sd-responsability'>\n                                    <FormControl\n                                        as='select'\n                                        value={sdResponsability}\n                                        onChange={(e) => setSdResponsability(e.target.value)}\n                                    >\n                                        <option value=''>--Select--</option>\n                                        <option value={'Project director'}>Project director</option>\n                                        <option value={'Project manager'}>Project manager</option>\n                                        <option value={'Project leader'}>Project leader</option>\n                                        <option value={'X'}>X</option>\n                                        <option value={'Intern'}>Intern</option>\n\n                                    </FormControl>\n                                </InputGroup>\n                            </Col>\n\n                            <Col className='mt-3'>\n                                <label htmlFor='sd-priority'><strong>Priority *</strong></label>\n                                <InputGroup id='sd-priority'>\n                                    <FormControl\n                                        as='select'\n                                        value={sdPriority}\n                                        onChange={(e) => setSdPriority(e.target.value)}\n                                    >\n                                        <option value=''>--Select--</option>\n                                        <option value={'P1'}>P1</option>\n                                        <option value={'P2'}>P2</option>\n                                        <option value={'P3'}>P3</option>\n\n                                    </FormControl>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='mt-3'>\n                                <label><strong>Comment</strong></label>\n                                <InputGroup id='sd-information'>\n                                    <FormControl\n                                        as='textarea'\n                                        rows={3}\n                                        value={sdInformation}\n                                        onChange={(e) => setSdInformation(e.target.value)}\n                                    ></FormControl>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n                    </DisplayChildren>\n                )}\n\n                <DisplayChildren access='viewSkills'>\n                    <SkillsDetails\n                        consultantId={consultant._id}\n                        editable={false}\n                        close={(mode === 'consultation') ? false : true}\n                    />\n                </DisplayChildren>\n\n                <DisplayChildren access='viewStaffings'>\n                    <DropDownTitleContainer title='Others staffings' close={false}>\n                        <ViewStaffs\n                            history={history}\n                            consultantId={consultant._id}\n                            onNavigate={onHide}\n                        />\n                    </DropDownTitleContainer>\n                </DisplayChildren>\n\n                <DropDownTitleContainer title='Old staffings' close={true}>\n                    <ViewOldStaffs\n                        history={history}\n                        consultantId={consultant._id}\n                        onNavigate={onHide}\n                    />\n                </DropDownTitleContainer>\n                \n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button onClick={onHide} variant='secondary'>Cancel</Button>\n                <DisplayChildren access='editStaff'>\n                    {mode === 'staffing' && (\n                        <Button\n                            onClick={() => {\n                                addStaffHandler(consultant, sdResponsability, sdPriority, sdInformation);\n                                onHide();\n                            }}\n                            variant='primary'\n                            disabled={!(sdResponsability !== '' && sdPriority !== '')}\n                        >Staff</Button>\n                    )}\n                </DisplayChildren>\n            </Modal.Footer>\n\n        </Modal>\n    )\n}\n\nexport default StaffAConsultant;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst SelectComponent = ({ editRequest, label, id, value, onChange, required, options }) => {\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            {label && <Form.Label as='h5'>{label} {editRequest && required && '*'}</Form.Label>}\n            {editRequest ? (\n                <Form.Control\n                    as='select'\n                    className='custom-select border border-light border-top-0 border-right-0 border-left-0'\n                    value={value ? value : ''}\n                    onChange={(e) => onChange(e.target.value) }\n                    required={required}\n                >\n                    {options}\n                </Form.Control>\n            ) : (\n                <Form.Control\n                    type='text'\n                    className='pl-3 border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    plaintext\n                    value={value ? value : ''}\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default SelectComponent;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({ options, value, setValue, disabled, multi }) => {\n\n    const handleChange = (e) => {\n        let valuesSelected = [];\n        if(multi) {\n            valuesSelected = e.map(x => ({id: x.value, value: x.label}));\n        } else {\n            valuesSelected = [{id: e.value, value: e.label}]\n        }\n        setValue(valuesSelected);\n    }\n\n    return (\n        <div>\n            <Select\n                closeMenuOnSelect={true}\n                placeholder='Select...'\n                value={value ? value : null}\n                isMulti={multi}\n                options={options ? options : []}\n                onChange={handleChange}\n                isDisabled={disabled}\n            />\n        </div>\n    )\n}\n\nexport default SelectInput;\n","import axios from 'axios';\nimport {\n    SKILL_LIST_REQUEST,\n    SKILL_LIST_SUCCESS,\n    SKILL_LIST_FAIL,\n    SKILL_DELETE_REQUEST,\n    SKILL_DELETE_FAIL,\n    SKILL_DELETE_SUCCESS,\n    SKILL_CREATE_REQUEST,\n    SKILL_CREATE_SUCCESS,\n    SKILL_CREATE_FAIL\n } from '../constants/skillsConstants';\n\nexport const getAllSkills = (category = '', name = '', pageNumber = '', pageSize = '15') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: SKILL_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/skills?category=${category}&name=${name}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        dispatch({ type: SKILL_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteSkill = (skillId) => async (dispatch, getState) => {\n    \n    // TO FINISH : if delete a skill, you need to delete on all consultant associated profils\n    \n    try {\n\n        dispatch({ type: SKILL_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/skills/${skillId}`, config);\n        dispatch({ type: SKILL_DELETE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const createSkills = (skill) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: SKILL_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/skills', skill, config);\n        dispatch({ type: SKILL_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { getAvailabilities } from '../actions/pxxActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport StaffAConsultant from './StaffAConsultant';\nimport DisplayChildren from '../components/DisplayChildren';\nimport SelectComponent from '../components/SelectComponent';\n\nimport SelectInput from '../components/SelectInput';\nimport { getAllSkills } from '../actions/skillActions';\n\nconst ConsoDispo = ({ \n    //practice, \n    start, end, mode, addStaffHandler, history }) => {\n\n    const dispatch = useDispatch();\n\n    const [focus, setFocus] = useState('');\n    const [searchExperienceStart, setSearchExperienceStart] = useState('');\n    const [searchExperienceEnd, setSearchExperienceEnd] = useState('');\n    const [practice, setPractice] = useState('');\n\n    const [searchSkillsList, setSearchSkillsList] = useState([]);\n\n    const [searchMode, setSearchMode] = useState('filterAvailable');\n\n    const [modalWindowShow, setModalWindowShow] = useState(false);\n    const [sdConsultant, setSdConsultant] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxAvailabilities = useSelector(state => state.pxxAvailabilities);\n    const { loading: loadingAvailabilities, error: errorAvailabilities, availabilities } = pxxAvailabilities;\n\n    const skillList = useSelector(state => state.skillList);\n    const { skills } = skillList;\n\n    useEffect(() => {\n        if(userInfo.consultantProfil.practice) {\n            setPractice(userInfo.consultantProfil.practice);\n        }\n    }, [userInfo.consultantProfil.practice]);\n\n    useEffect(() => {\n        if (practice) {\n            dispatch(getAvailabilities(practice, start, end, searchSkillsList.map(skill => skill.value).join(';'), searchExperienceStart, searchExperienceEnd, searchMode));\n        }\n    }, [dispatch, practice, start, end, searchMode, searchSkillsList, searchExperienceStart, searchExperienceEnd]);\n\n    useEffect(() => {\n        dispatch(getAllSkills('','',1,10000));\n    },[dispatch]);\n\n    const removeFilterAction = () => {\n        setSearchSkillsList([]);\n        setSearchExperienceStart('');\n        setSearchExperienceEnd('');\n        //dispatch(getAvailabilities(practice, start, end, '', '', '', searchMode));\n    };\n\n    const handlerSkillsSubmit = (e) => {\n        e.preventDefault();\n        dispatch(getAvailabilities(practice, start, end, searchSkillsList.map(skill => skill.value).join(';'), searchExperienceStart, searchExperienceEnd, searchMode));\n    };\n\n    const moreConsultantDetails = (consultant) => {\n        setModalWindowShow(true);\n        setSdConsultant(consultant);\n    };\n\n    return (\n        <>\n            {modalWindowShow && (\n                <StaffAConsultant\n                    show={modalWindowShow}\n                    onHide={() => setModalWindowShow(false)}\n                    consultant={sdConsultant}\n                    mode={mode}\n                    addStaffHandler={addStaffHandler}\n                    history={history}\n                />\n            )}\n\n            <Row className='mt-5'>\n                <Col>\n                    <Form.Group controlId='switch-practices' className='my-0'>\n                        <Form.Check\n                            type='switch'\n                            id='switch-all-practices'\n                            label='All practices'\n                            checked={practice === 'all' ? true : false}\n                            onChange={(e) => { e.target.checked === true ? setPractice('all') : setPractice(userInfo.consultantProfil.practice) }}\n                        ></Form.Check>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Row className='mt-3'>\n                <Col md={12}>\n                    <Form onSubmit={handlerSkillsSubmit}>\n\n                        <Form.Row className='align-items-center mb-3'>\n                            <Col md={1}>\n                                {( searchExperienceStart || searchExperienceEnd) ? (\n                                    <Button \n                                        variant='secondary'\n                                        onClick={removeFilterAction}\n                                        block\n                                    ><i className=\"fas fa-minus-circle\"></i></Button>\n                                ) : (\n                                    <Button \n                                        variant='primary'\n                                        disabled\n                                        block\n                                    ><i className=\"fas fa-keyboard\"></i></Button>\n                                )}\n                            </Col>\n\n                            <Col md={4}>\n                                <Form.Group controlId='skill-search' className='my-0'>\n                                    <SelectInput\n                                        options={skills ? skills.map(skill => ({ value: skill._id, label: skill.name })) : []}\n                                        value={searchSkillsList.length ? searchSkillsList.map(skill => ({ value: skill._id, label: skill.value })) : []}\n                                        setValue={setSearchSkillsList}\n                                        multi={true}\n                                        disabled={false}\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='experience-search-start' className='my-0'>\n                                    <Form.Control\n                                        type='number'\n                                        min={0}\n                                        step={0.5}\n                                        placeholder='From (year)'\n                                        value={searchExperienceStart && searchExperienceStart}\n                                        onChange={(e) => setSearchExperienceStart(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='experience-search-end' className='my-0'>\n                                    <Form.Control\n                                        type='number'\n                                        step={0.5}\n                                        min={searchExperienceStart || 0}\n                                        placeholder='To (year)'\n                                        value={searchExperienceEnd && searchExperienceEnd}\n                                        onChange={(e) => setSearchExperienceEnd(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='switch-only-available'  className='my-0'>\n                                    <SelectComponent \n                                        editRequest={true}\n                                        label=''\n                                        id='select-filter'\n                                        value={searchMode}\n                                        onChange={setSearchMode}\n                                        required={true}\n                                        options={\n                                            <>\n                                                <option value='filterAvailable'>Is available</option>\n                                                <option value='notAvailable'>Is not available</option>\n                                                <option value='notProd'>Has not prod</option>\n                                            </>\n                                        }\n                                    />\n                                    {/* <Form.Check\n                                        type='switch'\n                                        id='switch-only-available'\n                                        label='Not available'\n                                        checked={searchMode === 'filterAvailable' ? false : true}\n                                        onChange={(e) => {e.target.checked === true ? setSearchMode('all') : setSearchMode('filterAvailable')}}\n                                    ></Form.Check> */}\n                                </Form.Group>\n\n                            </Col>\n\n                            <Col md={1}>\n                                <Button\n                                    type='submit'\n                                    variant='primary'\n                                    block\n                                >Search</Button>\n                            </Col>\n                        </Form.Row>\n                    </Form>\n\n                </Col>\n            </Row>\n\n            <Tabs defaultActiveKey=\"Analysts\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"Intern\" title=\"Intern\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col sm={12} md={4} key={xVal}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Intern']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Analysts\" title=\"Analysts\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Analyst']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Consultants\" title=\"Consultants\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Consultant']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Senior consultants\" title=\"Senior consultants\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Senior consultant']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Managers\" title=\"Managers and +\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Manager', 'Senior manager', 'Director', 'Partner']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n            </Tabs>\n        </>\n    )\n}\n\n\nconst ConsoDispoUnit = ({monthData, grades, mode, addStaff, focus, setFocus}) => {\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    \n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    const calculateExperience = (date) => {\n\n        if (date) {\n            return ((Date.now() - new Date(date)) / (1000 * 24 * 3600 * 365.25)).toString().substring(0, 4)\n        } else {\n            return '-';\n        }\n    }\n\n    return (\n        <Card className='my-1 rounded' >\n            <Card.Header as=\"h5\">{monthData.month.firstDay.toString().substring(0, 7)}</Card.Header>\n            <Card.Body>\n                {monthData.availabilities.map((consultantData, yVal) => (\n                    grades.includes(consultantData.grade) && (\n                        <Row key={yVal} className='align-items-middle'>\n                            {(mode === 'staffing' || mode === 'consultation') && (\n                                <Col sm={1}>\n                                    <Button\n                                        size='sm'\n                                        variant='ligth'\n                                        className='mx-0 px-0'\n                                        onClick={() => addStaff(consultantData)}\n                                    ><i className=\"fas fa-search\"></i></Button>\n                                </Col>\n                            )}\n                            <Col sm={10}>\n\n                                <OverlayTrigger\n                                    overlay={\n                                        <Tooltip id=\"tooltip-disabled\" html=\"true\">\n                                            <DisplayChildren access='viewComment'>\n                                                {userInfo && userInfo.consultantProfil._id !== consultantData._id ? (\n                                                    (\n                                                        <div>\n                                                            <div><p className='m-0 p-0 text-left'><strong>Information</strong></p>{consultantData.comment && consultantData.comment.split('\\n').map((x, val) => (<p key={val} className='m-0 p-0 text-left'>{x}</p>))}</div>\n                                                            <div><p className='m-0 mt-3 p-0 text-left'><strong>Availability comment</strong></p>{consultantData.availabilityComment && consultantData.availabilityComment.split('\\n').map((x, val) => (<p key={val} className='m-0 p-0 text-left'>{x}</p>))}</div>\n                                                            <div><p className='m-0 mt-3 p-0 text-left'><strong>Not Prod comment</strong></p>{consultantData.notProdComment && consultantData.notProdComment.split('\\n').map((x, val) => (<p key={val} className='m-0 p-0 text-left'>{x}</p>))}</div>\n                                                        </div>\n                                                    )\n                                                ) : 'No access to this data'}\n                                            </DisplayChildren>\n                                        </Tooltip>\n                                    }>\n                                    <Form.Control\n                                        plaintext\n                                        readOnly\n                                        id={consultantData.email}\n                                        value={consultantData.availableDay.toString() + ' days : ' + formatName(consultantData.name) + ' (' + calculateExperience(consultantData.valued) + ' years)'}\n                                        style={(consultantData.email === focus) ? { background: '#464277', color: 'white' } : { color: 'black' }}\n                                        onFocus={(e) => {\n                                            setFocus(e.target.id)\n                                        }}\n                                    />\n                                </OverlayTrigger>\n\n                            </Col>\n                        </Row>\n                    )\n                ))}\n            </Card.Body>\n        </Card>\n    )\n}\n\n\nexport default ConsoDispo\n","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport DisplayChildren from '../components/DisplayChildren';\nimport { createTaceData } from '../actions/taceActions';\n\n\nconst Tace = ({ tace, practice }) => {\n\n    const dispatch = useDispatch();\n\n    const [target, setTarget] = useState(tace.target);\n    const [bid, setBid] = useState(tace.bid);\n    const [editRequest, setEditRequest] = useState(false);\n    const [update, setUpdate] = useState(false);\n\n    const [missingFTEToBid, setMissingFTEToBid] = useState('');\n    const [missingFTEToTarget, setMissingFTEToTarget] = useState('');\n\n    const createTace = useSelector(state => state.createTace);\n    //const { success } = createTace;\n\n    useEffect(() => {\n        if(update) {\n            dispatch(createTaceData({\n                month:tace.month._id,\n                practice: practice,\n                target: target,\n                bid: bid,\n            }))\n            setUpdate(false);\n        }\n    }, [dispatch, createTace, update, practice, tace, target, bid]);\n\n    useEffect(() => {\n        \n        const prodDay = Number(tace.totalProdDay);\n        const totalProdDayToBid = Number(bid) / 100 * (Number(tace.totalProdDay) + Number(tace.totalNotProdDay) + Number(tace.totalAvailableDay));\n        const totalProdDayToTarget = Number(target) / 100 * (Number(tace.totalProdDay) + Number(tace.totalNotProdDay) + Number(tace.totalAvailableDay));\n    \n        //console.log('firstDay', tace.month.firstDay);\n        const today = new Date(Math.max(new Date(Date.now()), new Date(tace.month.firstDay)));\n        //console.log(today);\n        const lastMonthDay = new Date(Math.max(new Date(Date.now()), new Date(tace.month.firstDay)));\n        //console.log(lastMonthDay);\n        lastMonthDay.setUTCMonth(lastMonthDay.getUTCMonth() + 1);\n        lastMonthDay.setUTCDate(1);\n\n        const todayToEnd = (lastMonthDay - today) / (3600 * 24 * 1000);\n\n        if(bid) {\n            const missingFTEToBidCalculated = (prodDay - totalProdDayToBid) / todayToEnd;\n            setMissingFTEToBid(missingFTEToBidCalculated);\n        }\n        if(target){\n            const missingFTEToTargetCalculated = (prodDay - totalProdDayToTarget) / todayToEnd;\n            setMissingFTEToTarget(missingFTEToTargetCalculated);\n        }\n\n    },[tace, bid, target]);\n\n\n    return (\n\n        <Col sm={12} md={4}>\n            <Card className='my-3 p-3 rounded'>\n                <Card.Header as=\"h5\">{tace.month.firstDay.toString().substring(0, 7)}</Card.Header>\n                <Card.Body className='p-1 mt-3'>\n                    <Card.Text as='h4'>Tace <DisplayChildren access='editTace'><Button \n                                                size='sm' \n                                                variant='ligth'\n                                                onClick={() => {\n                                                    if(editRequest) {\n                                                        setUpdate(true)\n                                                    }\n                                                    setEditRequest(!editRequest)}\n                                                }\n                                                ><i className=\"fas fa-edit\"></i></Button></DisplayChildren>\n                    </Card.Text>\n\n                    <ListGroup>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col className='text-center' xs={4}><strong>Current</strong></Col>\n                                <Col className='text-center' xs={4}><strong>Target</strong></Col>\n                                <Col className='text-center' xs={4}><strong>Bid</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row className='align-items-center'>\n                                <Col className='text-center' xs={4}>{(Number(tace.totalTACE) * 100).toFixed(1)} %</Col>\n                                \n                                <Col className='text-center' xs={4}>\n                                    <Form.Group controlId='tace-target' className='mb-0'>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='Number'\n                                                className='text-center'\n                                                min={0}\n                                                max={100}\n                                                step={0.1}\n                                                value={target}\n                                                onChange={(e) => setTarget(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Row className='align-items-center'>\n                                                    <Col className='m-0 p-0'>\n                                                        <Form.Control\n                                                            type='text'\n                                                            className='text-right'\n                                                            plaintext\n                                                            value={target}\n                                                            readOnly\n                                                        ></Form.Control>\n                                                    </Col>\n                                                    <Col className='m-0 p-0 text-left'>&nbsp;%</Col>\n                                                </Row>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n\n                                <Col className='text-center' xs={4}>\n                                    <Form.Group controlId='title' className='mb-0'>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='Number'\n                                                className='text-center'\n                                                min={0}\n                                                max={100}\n                                                step={0.1}\n                                                value={bid}\n                                                onChange={(e) => setBid(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Row className='align-items-center'>\n                                                    <Col className='m-0 p-0'>\n                                                        <Form.Control\n                                                            type='text'\n                                                            className='text-right'\n                                                            plaintext\n                                                            value={bid}\n                                                            readOnly\n                                                        ></Form.Control>\n                                                    </Col>\n                                                    <Col className='m-0 p-0 text-left'>&nbsp;%</Col>\n                                                </Row>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col xs={4}>&Delta; FTE</Col>\n                                <Col xs={4} className='text-center'>{missingFTEToTarget && missingFTEToTarget.toFixed(2)}</Col>\n                                <Col xs={4} className='text-center'>{missingFTEToBid && missingFTEToBid.toFixed(2)}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup className='mt-3'>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col><strong>Leaving</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col className='text-right'>{(Number(tace.totalLeaving) * 100).toFixed(2)} %</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup className='mt-3'>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col><strong>FTE</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col className='text-right'>{tace.totalETP && tace.totalETP.toFixed(2)}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>  \n                </Card.Body>\n                <Card.Footer className='mt-3'>\n                    <DisplayChildren access='tace'>\n                        <Link to={`/pxxdetails/${tace.month._id}`}>View details</Link>\n                    </DisplayChildren>\n                </Card.Footer>\n            </Card>\n        </Col>\n\n    )\n}\n\nexport default Tace;\n","import axios from 'axios';\nimport { \n    TACE_CREATE_FAIL,\n    TACE_CREATE_REQUEST, \n    TACE_CREATE_SUCCESS, \n} from '../constants/taceConstants';\n\nexport const createTaceData = (taceData) => async(dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: TACE_CREATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/tace', taceData, config);\n\n        dispatch({\n            type: TACE_CREATE_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: TACE_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { getTace } from '../actions/pxxActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport ConsoDispo from '../components/ConsoDispo';\nimport Tace from '../components/Tace';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer'\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst DashboardScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // initialization of default constants\n    const duration = 3;\n    let startDefault = new Date(Date.now());\n    startDefault.setUTCDate(1);\n    startDefault.setUTCMonth(startDefault.getUTCMonth());\n    startDefault = startDefault.toISOString().substring(0, 10);\n\n    let endDefault = new Date(Date.now());\n    endDefault.setUTCDate(1);\n    endDefault.setUTCMonth(endDefault.getUTCMonth() + duration - 1);\n    endDefault = endDefault.toISOString().substring(0, 10);\n\n    const [start, setStart] = useState(startDefault);\n    const [end, setEnd] = useState(endDefault);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxTACE = useSelector(state => state.pxxTACE);\n    const { loading: loadingTACE, error: errorTACE, tace } = pxxTACE;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } \n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (userInfo && !loadingTACE) {\n            dispatch(getTace(userInfo.consultantProfil.practice, start, end));\n        }\n        // eslint-disable-next-line\n    }, [ dispatch, start, end, userInfo.consultantProfil.practice ]);\n    \n    const navigationMonthHandler = (val) => {\n        const startDate = new Date(start);\n        const endDate = new Date(end);\n        startDate.setUTCMonth(startDate.getUTCMonth() + val);\n        endDate.setUTCMonth(endDate.getUTCMonth() + val);\n\n        setStart(startDate.toISOString().substring(0, 10));\n        setEnd(endDate.toISOString().substring(0, 10));\n    }\n\n    return (\n        <>\n            <Meta />\n\n            <Row>\n\n                <Col className=\"text-center\" xs={2}>\n                    <Button\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                    ><i className=\"fas fa-caret-left\"></i>\n                    </Button>\n                </Col>\n\n                <Col>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            id='start-date'\n                            className='form-control-lg mb-3 text-right'\n                            plaintext\n                            value={start && `From: ${start.substring(0, 7).replace('-', '/')}`}\n                            readOnly\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            id='date-end'\n                            className='form-control-lg mb-3 text-left'\n                            plaintext\n                            value={end && `To: ${end.substring(0, 7).replace('-', '/')}`}\n                            readOnly\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col className=\"text-center\" xs={2}>\n                    <Button\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                    ><i className=\"fas fa-caret-right\"></i>\n                    </Button>\n                </Col>\n            </Row>\n            \n            <DisplayChildren access={'tace'}>\n                <DropDownTitleContainer title='TACE' close={false}>\n                    <Row className='mt-3'>\n                        <Col>\n                            <h4>TACE ({userInfo && userInfo.consultantProfil.practice})</h4>\n                        </Col>\n                    </Row>\n\n                    <Row className='mt-1'>\n                        {loadingTACE ? <Loader /> : errorTACE ? <Message variant='danger'>{errorTACE}</Message> : (\n                            tace && tace.map((x, val) => (\n                                <Tace key={val} tace={x} practice={userInfo && userInfo.consultantProfil.practice} />\n                            ))\n                        )}\n                    </Row>\n                </DropDownTitleContainer>\n            </DisplayChildren>\n\n            <DisplayChildren access={'consoDispo'}>\n                <DropDownTitleContainer title='Availabilities' close={true}>\n                    <Row>\n                        <Col>\n                            <ConsoDispo\n                                //practice={practice}\n                                start={start}\n                                end={end}\n                                mode='consultation'\n                                history={history}\n                            />\n                        </Col>\n                    </Row>\n                </DropDownTitleContainer>\n            </DisplayChildren>\n        </>\n    )\n}\n\nexport default DashboardScreen;\n","import axios from 'axios';\nimport { \n    CLIENT_ALL_FAIL, \n    CLIENT_ALL_REQUEST, \n    CLIENT_ALL_SUCCESS, \n    CLIENT_CREATE_FAIL, \n    CLIENT_CREATE_REQUEST,\n    CLIENT_CREATE_SUCCESS,\n    CLIENT_DELETE_FAIL,\n    CLIENT_DELETE_REQUEST,\n    CLIENT_DELETE_SUCCESS,\n    CLIENT_UPDATE_FAIL,\n    CLIENT_UPDATE_REQUEST,\n    CLIENT_UPDATE_SUCCESS\n} from '../constants/clientConstants';\n\nexport const getAllClients = (name='', pageNumber='', pageSize='') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_ALL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/clients?clientName=${name}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        dispatch({ type: CLIENT_ALL_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_ALL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const createAClient = (clients) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/clients`, clients, config);\n        dispatch({ type: CLIENT_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateAClient = (clients) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/clients`, clients, config);\n        dispatch({ type: CLIENT_UPDATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteAClient = (clientsId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.delete(`/api/clients/${clientsId}`, config);\n        dispatch({ type: CLIENT_DELETE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { createAClient, getAllClients } from '../actions/clientActions';\n\nimport CreatableSelect from 'react-select/creatable';\n\nconst SelectCompany = ({ company, setCompany, editRequest }) => {\n\n    const dispatch = useDispatch();\n\n    const clientAll = useSelector(state => state.clientAll);\n    const { clients: companies } = clientAll;\n\n    const clientCreate = useSelector(state => state.clientCreate);\n    const { success } = clientCreate;\n\n    useEffect(() => {\n        //dispatch(getAllClients(searchCompany));\n        dispatch(getAllClients(''));\n    }, [dispatch, success]);\n\n    const handleChange = (e) => {\n        //console.log('e', e);\n        if (e) {\n            const currentCompaniesId = companies.map(x => x._id);\n            //console.log('currentCompaniesId', currentCompaniesId);\n            if (currentCompaniesId.includes(e.value)) {\n                setCompany(e.label);\n            } else {\n                //console.log('create a compay');\n                dispatch(createAClient([{name:e.label, commercialTeam:[]}]));\n                setCompany(e.label);\n            }\n        } else {\n            setCompany('');\n        }\n    }\n\n    return (\n        <Row className='align-items-end'>\n            <Col>\n                <CreatableSelect\n                    placeholder='Select a company'\n                    isClearable\n                    onChange={handleChange}\n                    value={(company && company.label !=='') ? company : null}\n                    options={companies && companies.map(company => ({ value: company._id, label: company.name }))}\n                    isDisabled={!editRequest}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nexport default SelectCompany\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst DateComponent = ({ label, id, placeholder, value, onChange, required, editMode }) => {\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            <Form.Label>{label} {editMode && required && '*'}</Form.Label>\n            {editMode ? (\n                <Form.Control\n                    className='border border-light border-top-0 border-right-0 border-left-0'\n                    type='date'\n                    placeholder={placeholder}\n                    value={value ? value : ''}\n                    onChange={(e) => onChange(e.target.value)}\n                    required={required}\n                ></Form.Control>\n            ) : (\n                <Form.Control\n                    className='border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    type='date'\n                    value={value ? value : ''}\n                    plaintext\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default DateComponent\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst NumberComponent = ({ label, placeholder, id, min, max, step, value, onChange, required, editRequest  }) => {\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            <Form.Label>{label} {editRequest && required && '*'}</Form.Label>\n            {editRequest ? (\n                <Form.Control\n                    className='border border-light border-top-0 border-right-0 border-left-0'\n                    type='number'\n                    placeholder={placeholder}\n                    min={Number(min)}\n                    step={Number(step)}\n                    value={value ? Number(value) : 0}\n                    onChange={(e) => onChange(e.target.value)}\n                    required={required}\n                ></Form.Control>\n            ) : (\n                <Form.Control\n                    type='number'\n                    className='border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    value={value ? value : 0}\n                    plaintext\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n};\n\nexport default NumberComponent;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst TextComponent = ({ label, id, placeholder, value, onChange, required, editRequest, formInline }) => {\n    return (\n        <Form.Group controlId={id} className={formInline ? 'mb-0 form-inline' : 'mb-0 '}>\n            <Form.Label as='h5'>{label} {editRequest && required && '*'}</Form.Label>\n            {editRequest ? (\n                <Form.Control\n                    type='text'\n                    className='border border-light border-top-0 border-right-0 border-left-0'\n                    placeholder={placeholder}\n                    value={value ? value : ''}\n                    onChange={(e) => onChange(e.target.value)}\n                    required={required}\n                ></Form.Control>\n            ) : (\n                <Form.Control\n                    type='text'\n                    className='pl-3 border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    plaintext\n                    value={value ? value : ''}\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default TextComponent;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst SelectMultipleComponent = ({ label, id, editRequest, required, value, onChange, options }) => {\n\n    const updateOthersPractices = () => {\n        const selectedList = [];\n        const selectBox = document.getElementById(id);\n        for (let i = 0; i < selectBox.options.length; i++) {\n            if (selectBox.options[i].selected) {\n                selectedList.push(selectBox.options[i].value);\n            }\n        }\n        onChange(selectedList);\n    }\n\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            <Form.Label as='h5'>{label} {editRequest && required && '*'}</Form.Label>\n            {editRequest ? (\n                <Form.Control\n                    as='select'\n                    className='custom-select border border-light border-top-0 border-right-0 border-left-0'\n                    multiple\n                    value={value ? value : []}\n                    onChange={(e) => updateOthersPractices()}\n                >\n                    {options}\n                </Form.Control>\n            ) : (\n                <Form.Control\n                    type='text'\n                    className='pl-3 border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    value={value ? value.join(', ') : ''}\n                    plaintext\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default SelectMultipleComponent;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst TextAreaComponent = ({ label, id, editRequest, required, placeholder, value, onChange, rows}) => {\n    return (\n        <Form.Group controlId={id} className='mb-0'>\n            <Form.Label as='h5'>{label} {editRequest && required && '*'}</Form.Label>\n            {editRequest ? (\n                <Form.Control\n                    as='textarea'\n                    rows={rows}\n                    className='custom-select border border-light border-top-0 border-right-0 border-left-0'\n                    placeholder={placeholder}\n                    value={value ? value : ''}\n                    onChange={(e) => onChange(e.target.value)}\n                    required={required}\n                ></Form.Control>\n            ) : (\n                <Form.Control\n                    as='textarea'\n                    className='pl-3 border border-light border-top-0 border-right-0 border-left-0 bg-light text-secondary'\n                    rows={rows}\n                    value={value ? value : ''}\n                    plaintext\n                    readOnly\n                ></Form.Control>\n            )}\n        </Form.Group>\n    )\n}\n\nexport default TextAreaComponent;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport { createDeal, getDealToEdit, updateDeal } from '../actions/dealActions';\nimport { getAllLeaders, getAllPractice } from '../actions/consultantActions';\nimport { DEAL_CREATE_RESET, DEAL_PROBABILITY, DEAL_STATUS, DEAL_UPDATE_RESET, TYPE_BUSINESS } from '../constants/dealConstants';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ConsoDispo from '../components/ConsoDispo';\nimport ViewStaffs from '../components/ViewStaffs';\nimport SelectCompany from '../components/SelectCompany';\nimport { REQUEST_STATUS } from '../constants/dealConstants';\nimport StaffAConsultant from '../components/StaffAConsultant';\nimport DisplayChildren from '../components/DisplayChildren';\nimport SelectInput from '../components/SelectInput';\nimport DateComponent from '../components/DateComponent';\nimport NumberComponent from '../components/NumberComponent';\nimport TextComponent from '../components/TextComponent';\nimport SelectComponent from '../components/SelectComponent';\nimport SelectMultipleComponent from '../components/SelectMultipleComponent';\nimport TextAreaComponent from '../components/TextAreaComponent';\n\nconst StaffingEditScreen = ({ match, history }) => {\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealCreate = useSelector(state => state.dealCreate);\n    const { loading, error, success, createId } = dealCreate;\n\n    const dealUpdate = useSelector(state => state.dealUpdate);\n    const { loading: loadingUpdate, error: errorUpdate } = dealUpdate;\n\n    const dealEdit = useSelector(state => state.dealEdit);\n    const { success: successEdit, deal: dealToEdit } = dealEdit;\n\n    const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    const { practiceList } = consultantPracticeList;\n\n    const consultantsAllLeaders = useSelector(state => state.consultantsAllLeaders);\n    const { leaderslist } = consultantsAllLeaders;\n\n    const [title, setTitle] = useState('');\n    const [company, setCompany] = useState('');\n    const [client, setClient] = useState('');\n    const [type, setType] = useState('');\n    const [status, setStatus] = useState('');\n    const [probability, setProbability] = useState('');\n    const [description, setDescription] = useState('');\n    const [proposalDate, setProposalDate] = useState('');\n    const [presentationDate, setPresentationDate] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [mainPractice, setMainPractice] = useState('');\n    const [othersPractices, setOthersPractices] = useState([]);\n    const [location, setLocation] = useState('');\n    const [srInstruction, setSrInstruction] = useState('');\n    const [srStatus, setSrStatus] = useState('');\n    const [srRessources, setSrRessources] = useState([]);\n    const [comments, setComments] = useState([]);\n    const [duration, setDuration] = useState('');\n    const [othersContacts, setOthersContacts] = useState('');\n\n    const [newComment, setNewComment] = useState('');\n\n    const [sdInstructions] = useState('');\n    const [sdStatus, setSdStatus] = useState('');\n    const [sdStaff, setSdStaff] = useState([]);\n\n    const [wonDate, setWonDate] = useState('');\n\n    const [modalWindowShow, setModalWindowShow] = useState(false);\n    const [sdConsultant, setSdConsultant] = useState('');\n    const [loadingSdConsultantData, setLoadingSdConsultantData] = useState({})\n\n    const [editRequest, setEditRequest] = useState(match.params.id ? false : true);\n\n    const [dealChange, setDealChange] = useState(false);\n\n    const [leader, setLeader] = useState([]);\n\n    const [coLeaders, setCoLeaders] = useState([]);\n\n\n    const [companyMessage, setCompanyMessage] = useState(null);\n\n    //ConsoDispo\n    const analyseTime = 3;\n    let startDefault = new Date(Date.now());\n    startDefault.setUTCDate(1);\n    startDefault.setUTCMonth(startDefault.getUTCMonth());\n    startDefault = startDefault.toISOString().substring(0, 10);\n\n    let endDefault = new Date(Date.now());\n    endDefault.setUTCDate(1);\n    endDefault.setUTCMonth(endDefault.getUTCMonth() + analyseTime - 1);\n    endDefault = endDefault.toISOString().substring(0, 10);\n\n    const [start] = useState(startDefault);\n    const [end] = useState(endDefault);\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (!practiceList) {\n            dispatch(getAllPractice());\n        }\n    }, [dispatch, practiceList]);\n\n    useEffect(() => {\n        if (match.params.id) {\n            dispatch(getDealToEdit(match.params.id));\n        }\n    }, [dispatch, match])\n\n\n    useEffect(() => {\n        dispatch(getAllLeaders());\n\n    }, [dispatch]);\n\n\n    useEffect(() => {\n        if (match.params.id && successEdit) {\n            setTitle(dealToEdit.title);\n            setCompany(dealToEdit.company);\n            setClient(dealToEdit.client);\n            setStatus(dealToEdit.status);\n            setType(dealToEdit.type);\n            setProbability(dealToEdit.probability);\n            setDescription(dealToEdit.description);\n            setProposalDate(dealToEdit.proposalDate ? dealToEdit.proposalDate.substring(0, 10) : \"\");\n            setPresentationDate(dealToEdit.presentationDate ? dealToEdit.presentationDate.substring(0, 10) : \"\");\n            setStartDate(dealToEdit.startDate ? dealToEdit.startDate.substring(0, 10) : \"\");\n            setMainPractice(dealToEdit.mainPractice);\n            setOthersPractices(dealToEdit.othersPractices ? dealToEdit.othersPractices : []);\n            setLocation(dealToEdit.location);\n            setSrInstruction(dealToEdit.staffingRequest.instructions);\n            setSrStatus(dealToEdit.staffingRequest.requestStatus);\n            setSrRessources(dealToEdit.staffingRequest.ressources ? dealToEdit.staffingRequest.ressources : []);\n            setSdStatus(dealToEdit.staffingDecision.staffingStatus ? dealToEdit.staffingDecision.staffingStatus : '');\n            setSdStatus(dealToEdit.staffingDecision.instructions ? dealToEdit.staffingDecision.instructions : '');\n            setSdStaff(dealToEdit.staffingDecision.staff ? dealToEdit.staffingDecision.staff : []);\n            setLeader(dealToEdit.contacts.primary ?\n                [{ id: dealToEdit.contacts.primary._id, value: dealToEdit.contacts.primary.name }] : ['']);\n            setCoLeaders(dealToEdit.contacts.secondary ?\n                dealToEdit.contacts.secondary.map(coLeader => ({ id: coLeader._id, value: coLeader.name })) : []);\n            setComments(dealToEdit.comments ? dealToEdit.comments : []);\n            setDuration(dealToEdit.duration ? dealToEdit.duration : '');\n            setOthersContacts(dealToEdit.othersContacts ? dealToEdit.othersContacts : '');\n        }\n    }, [successEdit, dealToEdit, userInfo, match])\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/staffing/${createId}`);\n            dispatch({ type: DEAL_CREATE_RESET });\n        }\n    }, [dispatch, history, success, createId]);\n\n    useEffect(() => {\n        if (match.params.id && dealChange) {\n            if (!company) {\n                setCompanyMessage('Please select a company');\n                setEditRequest(true);\n                return\n            } else {\n                setCompanyMessage('')\n            }\n            const deal = {\n                company: company,\n                client: client,\n                title: title,\n                type: type,\n                status: status,\n                contacts: {\n                    primary: leader.length ? leader[0].id : null,\n                    secondary: coLeaders.length ? coLeaders.map(x => x.id) : [],\n                },\n                probability: probability,\n                description: description,\n                proposalDate: proposalDate,\n                presentationDate: presentationDate,\n                wonDate: wonDate,\n                startDate: startDate,\n                duration: duration,\n                mainPractice: mainPractice,\n                othersPractices: othersPractices,\n                location: location,\n                staffingRequest: {\n                    instructions: srInstruction,\n                    requestStatus: srStatus,\n                    ressources: srRessources\n                },\n                staffingDecision: {\n                    instructions: sdInstructions,\n                    staffingStatus: sdStatus,\n                    staff: sdStaff.map(staff => ({\n                        responsability: staff.responsability,\n                        idConsultant: staff.idConsultant._id,\n                        priority: staff.priority,\n                        information: staff.information\n                    }))\n                },\n                comments: comments,\n                othersContacts: othersContacts\n            }\n            dispatch(updateDeal(match.params.id, deal));\n            setDealChange(false);\n            setNewComment('');\n        }\n\n    }, [match, dispatch, userInfo, dealChange, company, type, client, title, status, probability, description, proposalDate, presentationDate,\n        wonDate, startDate, duration, mainPractice, othersPractices, location, srInstruction, srStatus, srRessources, sdInstructions,\n        sdStatus, sdStaff, leader, coLeaders, comments, othersContacts\n    ]);\n\n    const removeStaffHandler = (id) => {\n        let tampon = new Array(...sdStaff);\n        tampon = tampon.filter(consultant => consultant.idConsultant._id !== id);\n        setSdStaff(tampon);\n        setDealChange(true);\n    }\n\n    const addStaffHandler = (consultant, responsability, priority, information) => {\n\n        let tampon = new Array(...sdStaff);\n\n        // Rule if consultant already added in staff\n        if (sdStaff.map(x => x.idConsultant._id).includes(consultant._id)) {\n            tampon = tampon.filter(x => x.idConsultant._id !== consultant._id);\n        }\n\n        tampon.push({\n            idConsultant: {\n                _id: consultant._id,\n                name: consultant.name,\n            },\n            responsability: responsability,\n            priority: priority,\n            information: information\n        });\n\n        //tampon.sort((a,b) => a.priority - b.priority)\n\n        setSdStaff(tampon);\n        setDealChange(true);\n    }\n\n    const prepareDeal = () => {\n        return {\n            company: company,\n            client: client,\n            title: title,\n            contacts: {\n                primary: leader.length ? leader[0].id : null,\n                secondary: coLeaders.length ? coLeaders.map(x => x.id) : [],\n            },\n            type: type,\n            status: status,\n            probability: probability,\n            description: description,\n            proposalDate: proposalDate,\n            presentationDate: presentationDate,\n            wonDate: wonDate,\n            startDate: startDate,\n            duration: duration,\n            mainPractice: mainPractice,\n            othersPractices: othersPractices,\n            location: location,\n            staffingRequest: {\n                instructions: srInstruction,\n                requestStatus: srStatus,\n                ressources: srRessources\n            },\n            staffingDecision: {\n                instructions: sdInstructions,\n                staffingStatus: sdStatus,\n                staff: sdStaff.map(staff => ({\n                    responsability: staff.responsability,\n                    idConsultant: staff.idConsultant._id,\n                    priority: staff.priority,\n                    information: staff.information\n                }))\n            },\n            comments: comments,\n            othersContacts: othersContacts\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!company) {\n            setCompanyMessage('Please select a company');\n            return;\n        } else {\n            setCompanyMessage(null)\n        }\n        const deal = prepareDeal();\n\n        if (match.params.id) {\n            dispatch(updateDeal(match.params.id, deal));\n        } else {\n            dispatch(createDeal(deal));\n        }\n    };\n\n    const addCommentHandler = () => {\n        const newComments = comments.slice();\n        newComments.push({\n            message: newComment,\n            sender: {\n                _id: userInfo._id,\n                name: userInfo.name\n            },\n            date: new Date(Date.now()).toISOString()\n        });\n        newComments.sort((a, b) => (Date.parse(b.date) - Date.parse(a.date)));\n        setComments(newComments);\n        setDealChange(true);\n    };\n\n    const deleteCommentHandler = (value) => {\n        let newComments = comments.slice();\n        newComments = newComments.filter(x => x.date !== value);\n        setComments(newComments);\n        setDealChange(true);\n    };\n\n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    const updateStatusHandler = (value) => {\n        if (value === 'Won') {\n            setWonDate(new Date(Date.now()));\n        }\n        else {\n            setWonDate('');\n        }\n        setStatus(value);\n    };\n\n    const srStatusHandler = (value) => {\n        setSrStatus(value);\n        setDealChange(true);\n    };\n\n    return (\n        <>\n            <Meta />\n            {modalWindowShow && (\n                <StaffAConsultant\n                    show={modalWindowShow}\n                    onHide={() => setModalWindowShow(false)}\n                    consultant={sdConsultant}\n                    loadingData={loadingSdConsultantData}\n                    mode='staffing'\n                    addStaffHandler={addStaffHandler}\n                    history={history}\n                />\n            )}\n\n            <h1>Staffing request</h1>\n            <Form onSubmit={submitHandler}>\n                <Row className='mt-3'>\n                    <Col xs={6} md={2}>\n                        {match.params.id && (\n                            <Button\n                                type='button'\n                                variant='primary'\n                                onClick={() => {\n                                    history.go(-1);\n                                    dispatch({ type: DEAL_UPDATE_RESET })\n                                }}\n                                block\n                            >Go Back</Button>\n                        )}\n                    </Col>\n                    <Col xs={0} md={8}></Col>\n                    <Col xs={6} md={2}>\n                        {match.params.id && loadingUpdate && <Loader />}\n                        {match.params.id && !loadingUpdate && (\n                            <>\n                                <Button\n                                    onClick={() => {\n                                        setEditRequest(!editRequest);\n                                        editRequest && setDealChange(true);\n                                    }}\n                                    variant={editRequest ? 'warning' : 'light'}\n                                    block\n                                >{editRequest ? (\n                                    <><span>Save  </span><i className=\"far fa-check-circle\"></i></>\n                                    ) : (\n                                    <><span>Edit  </span><i className=\"far fa-edit\"></i></>\n                                )}\n                                </Button>\n                                {errorUpdate && (<Message variant='danger'>{errorUpdate}</Message>)}\n                            </>\n                        )}\n                    </Col>\n                </Row>\n                {error && (<Row><Col><Message variant='danger'>{error}</Message></Col></Row>)}\n\n                <Row className='mt-2'>\n\n                    <Col xs={12} md={4}>\n\n                        <ListGroup.Item>\n                            <TextComponent\n                                label='Title'\n                                id=\"title\"\n                                placeholder='Staffing request object'\n                                value={title}\n                                onChange={setTitle}\n                                required={true}\n                                editRequest={editRequest}\n                                formInline={false}\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n\n                            <Form.Group controlId='select-company' className='mb-0'>\n                                <Form.Label as='h5'>Company *</Form.Label>\n                                <SelectCompany\n                                    company={{ value: company, label: company }}\n                                    setCompany={setCompany}\n                                    editRequest={editRequest}\n                                />\n                            </Form.Group>\n\n                            {companyMessage && <Message variant='danger'>{companyMessage}</Message>}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <TextComponent\n                                label='Client contact'\n                                id=\"contact-client\"\n                                placeholder='Client contact'\n                                value={client}\n                                onChange={setClient}\n                                required={false}\n                                editRequest={editRequest}\n                                formInline={false}\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectComponent\n                                editRequest={editRequest}\n                                id=\"business-type\"\n                                label='Type of business'\n                                value={type}\n                                onChange={setType}\n                                required={true}\n                                options={\n                                    <>\n                                        <option value=''>--Select--</option>\n                                        {TYPE_BUSINESS.map(type => (\n                                            <option\n                                                key={type.name}\n                                                value={type.name}\n                                            >{type.name}</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectComponent\n                                editRequest={editRequest}\n                                id=\"deal-status\"\n                                label='Status'\n                                value={status}\n                                onChange={updateStatusHandler}\n                                required={true}\n                                options={\n                                    <>\n                                        <option value=''>--Select--</option>\n                                        {DEAL_STATUS.map(status => (\n                                            <option\n                                                key={status.name}\n                                                value={status.name}\n                                            >{status.name}</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectComponent\n                                editRequest={editRequest}\n                                id=\"probability\"\n                                label='Probability (%)'\n                                value={probability}\n                                onChange={setProbability}\n                                required={true}\n                                options={\n                                    <>\n                                        <option value=''>--Select--</option>\n                                        {DEAL_PROBABILITY.map(prob => (\n                                            <option\n                                                key={prob.name}\n                                                value={prob.name}\n                                            >{prob.name} %</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <TextComponent\n                                label='Location'\n                                id=\"location\"\n                                placeholder='Location'\n                                value={location}\n                                onChange={setLocation}\n                                required={false}\n                                editRequest={editRequest}\n                                formInline={false}\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectComponent\n                                editRequest={editRequest}\n                                id=\"main-practice\"\n                                label='Main practice'\n                                value={mainPractice}\n                                onChange={setMainPractice}\n                                required={true}\n                                options={\n                                    <>\n                                        <option value=''>--Select--</option>\n                                        {practiceList && practiceList.map((practice, val) => (\n                                            <option\n                                                value={practice}\n                                                key={val}\n                                            >{practice}</option>\n                                        ))}\n                                    </>\n                                }\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <SelectMultipleComponent\n                                label=\"Others Practices\"\n                                id=\"'others-practices'\"\n                                editRequest={editRequest}\n                                required={false}\n                                value={othersPractices}\n                                onChange={setOthersPractices}\n                                options={\n                                    practiceList && practiceList.map((practice, val) => (\n                                        (practice !== mainPractice) && (\n                                            <option\n                                                value={practice}\n                                                key={val}\n                                            >{practice}</option>\n                                        )\n                                    ))\n                                }\n                            />\n                        </ListGroup.Item>\n\n                    </Col>\n\n                    <Col xs={12} md={8}>\n\n                        <ListGroup.Item>\n                            <Row className='align-items-start'>\n                                <Col xs={12} md={4}>\n\n                                    <Form.Group controlId='select-leader' className='mb-0'>\n                                        <Form.Label as='h5'>Leader</Form.Label>\n                                        <SelectInput\n                                            options={leaderslist ? leaderslist.map(consultant => ({ value: consultant._id, label: consultant.name })) : []}\n                                            value={leader.length ? { value: leader[0].id, label: leader[0].value } : {}}\n                                            setValue={setLeader}\n                                            multi={false}\n                                            disabled={!editRequest}\n                                        />\n                                    </Form.Group>\n\n                                </Col>\n\n                                <Col xs={12} md={4}>\n\n                                    <Form.Group controlId='others' className='mb-0'>\n                                        <Form.Label as='h5'>Co-Leader(s)</Form.Label>\n                                        <SelectInput\n                                            options={leaderslist ? leaderslist.map(consultant => ({ value: consultant._id, label: consultant.name })) : []}\n                                            value={coLeaders ? coLeaders.map(x => ({ value: x.id, label: x.value })) : []}\n                                            setValue={setCoLeaders}\n                                            multi={true}\n                                            disabled={!editRequest}\n                                        />\n                                    </Form.Group>\n                                </Col>\n\n                                <Col xs={12} md={4}>\n\n                                    <TextComponent\n                                        label=\"Others contacts\"\n                                        id=\"others-contacts\"\n                                        placeholder=\"email1@mail.com;email2@mail.com\"\n                                        value={othersContacts}\n                                        onChange={setOthersContacts}\n                                        required={false}\n                                        editRequest={editRequest}\n                                        formInline={false}\n                                    />\n                                </Col>\n\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <TextAreaComponent\n                                label=\"Description\"\n                                id='staffing-description'\n                                editRequest={editRequest}\n                                required={true}\n                                placeholder=\"Please describe the mission context\"\n                                value={description}\n                                onChange={setDescription}\n                                rows={3}\n                            />\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h5>Sheduling</h5>\n                            <Row className='align-items-end'>\n                                <Col>\n                                    <DateComponent\n                                        label='Proposal'\n                                        id=\"proposal-date\"\n                                        placeholder='proposal date'\n                                        value={proposalDate}\n                                        onChange={setProposalDate}\n                                        required={true}\n                                        editMode={editRequest}\n                                    />\n                                </Col>\n\n                                <Col>\n                                    <DateComponent\n                                        label='Presentation'\n                                        id=\"presentation-date\"\n                                        placeholder='presentation date'\n                                        value={presentationDate}\n                                        onChange={setPresentationDate}\n                                        required={true}\n                                        editMode={editRequest}\n                                    />\n                                </Col>\n\n                                <Col>\n                                    <DateComponent\n                                        label='Start'\n                                        id=\"start-date\"\n                                        placeholder='start date'\n                                        value={startDate}\n                                        onChange={setStartDate}\n                                        required={true}\n                                        editMode={editRequest}\n                                    />\n                                </Col>\n\n                                <Col>\n                                    <NumberComponent\n                                        label='duration (month)'\n                                        placeholder='duration'\n                                        min={0}\n                                        step={0.5}\n                                        value={duration}\n                                        onChange={setDuration}\n                                        required={true}\n                                        editRequest={editRequest}\n                                    />\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col xs={12} md={8}>\n                                    <TextAreaComponent\n                                        label=\"Staffing instructions\"\n                                        id='staffing-instructions'\n                                        editRequest={editRequest}\n                                        required={true}\n                                        placeholder=\"Please describe your staffing request\"\n                                        value={srInstruction}\n                                        onChange={setSrInstruction}\n                                        rows={3}\n                                    />\n                                </Col>\n\n                                <Col xs={12} md={4}>\n                                    <SelectComponent\n                                        editRequest={true}\n                                        label=\"Status\"\n                                        id=\"sr-status\"\n                                        value={srStatus}\n                                        onChange={srStatusHandler}\n                                        required={true}\n                                        options={\n                                            <>\n                                                <option value=''>--Select--</option>\n                                                {REQUEST_STATUS.map(({ name }) => (\n                                                    <option\n                                                        key={name}\n                                                        value={name}\n                                                    >{name}</option>\n                                                ))}\n                                            </>\n                                        }\n                                    />\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        {match.params.id && (\n                            <ListGroup.Item>\n                                <h5>Staffing decision</h5>\n                                {sdStaff && [...new Set(sdStaff.map(x => x.priority))].sort().map(priority => (\n                                    <ListGroup.Item key={priority}>\n                                        <Row key={priority}>\n                                            <Col sm={1}>\n                                                <Row className='my-1'><Col>{priority}</Col></Row>\n                                            </Col>\n                                            <Col sm={11}>\n                                                {sdStaff.filter(x => x.priority === priority).map(staff => (\n                                                    <Row key={staff.idConsultant._id} className='my-1'>\n                                                        <Col sm={10}>\n                                                            <OverlayTrigger\n                                                                placement=\"top\"\n                                                                trigger='click'\n                                                                overlay={\n                                                                    <Popover\n                                                                        id='popover-others-staffs'\n                                                                        style={{ 'maxWidth': '40%' }}\n                                                                    >\n                                                                        <Popover.Title id=\"contained-modal-title-vcenter\">\n                                                                            Others staffs\n                                                                        </Popover.Title>\n\n                                                                        <Popover.Content>\n                                                                            <ViewStaffs\n                                                                                history={history}\n                                                                                consultantId={staff.idConsultant._id}\n                                                                                onNavigate={() => ('')}\n                                                                                displayedDeal={match.params.id}\n                                                                            />\n                                                                        </Popover.Content>\n                                                                    </Popover>\n                                                                }\n                                                            >\n                                                                <div><strong>{`${staff.responsability}: `}</strong>{`${formatName(staff.idConsultant.name)}`}<i>{` (${staff.information})`}</i></div>\n                                                            </OverlayTrigger>\n                                                        </Col>\n                                                        <Col sm={2} className='px-0'>\n                                                            <DisplayChildren access='editStaff'>\n                                                                <Button\n                                                                    onClick={() => {\n                                                                        setSdConsultant(staff.idConsultant)\n                                                                        setLoadingSdConsultantData({\n                                                                            information: staff.information,\n                                                                            priority: staff.priority,\n                                                                            responsability: staff.responsability\n                                                                        })\n                                                                        setModalWindowShow(true)\n                                                                    }}\n                                                                    variant='secondary'\n                                                                    className='text-center mx-1'\n                                                                    size='sm'\n                                                                ><i className=\"fas fa-edit\"></i></Button>\n                                                            </DisplayChildren>\n                                                            <DisplayChildren access='editStaff'>\n                                                                <Button\n                                                                    onClick={() => removeStaffHandler(staff.idConsultant._id)}\n                                                                    variant='danger'\n                                                                    className='text-center mx-1'\n                                                                    size='sm'\n                                                                ><i className=\"fas fa-times\"></i></Button>\n                                                            </DisplayChildren>\n                                                        </Col>\n                                                    </Row>\n                                                ))}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup.Item>\n                        )}\n\n                        {!match.params.id && (\n                            <Row className='mt-3'>\n                                <Col className='text-right'>\n                                    <Button\n                                        type='submit'\n                                        variant='primary'\n                                    >{(loading) ? <Loader /> : 'Submit staffing'}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        )}\n\n                        {dealToEdit && match.params.id && (\n                            <ListGroup.Item>\n                                <Row className='my-1'>\n                                    <Col>\n                                        <strong>Last update at: </strong>{dealToEdit.updatedAt.substring(0, 19).replace('T', ' ')}\n                                        <Row className='align-items-center my-3'>\n                                            <Col xs={11} >\n                                                <Form.Group controlId='comment' className='mb-0'>\n                                                    <Form.Control\n                                                        type='text'\n                                                        placeholder='Add a comment'\n                                                        value={newComment ? newComment : ''}\n                                                        onChange={(e) => setNewComment(e.target.value)}\n                                                        onKeyUp={(e) => (e.key === 'Enter') && addCommentHandler()}\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={1}>\n                                                <Button\n                                                    variant='primary'\n                                                    onClick={() => addCommentHandler()}\n                                                    size='sm'\n                                                ><i className=\"fas fa-plus\"></i></Button>\n                                            </Col>\n                                        </Row>\n                                        <ListGroup className='py-3'>\n                                            {comments && comments.map((comment, index) => (\n                                                <ListGroup.Item\n                                                    key={index}\n                                                    className='mb-0 py-2'\n                                                >\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                value={comment.message}\n                                                                readOnly\n                                                            />\n                                                            {/*comment.message*/}</Col>\n                                                    </Row>\n                                                    <p style={{ textAlign: 'right', marginBottom: '0' }}><i>By {comment.sender.name} the {comment.date.substring(0, 19).replace('T', ' at ')}  {comment.sender._id === userInfo._id && (\n                                                        <Button\n                                                            size='sm'\n                                                            variant='ligth'\n                                                            className='text-danger mx-0'\n                                                            //style={{ color: 'red' }}\n                                                            onClick={() => deleteCommentHandler(comment.date)}\n                                                        >--delete--</Button>\n                                                    )}</i></p>\n                                                </ListGroup.Item>\n                                            ))}\n                                        </ListGroup>\n                                        <strong>Created at: </strong>{dealToEdit.createdAt.substring(0, 19).replace('T', ' ')} <br />\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        )}\n\n                    </Col>\n                </Row>\n            </Form>\n\n            {match.params.id && (\n                <DropDownTitleContainer title='Availabilities' close={false}>\n                    <ConsoDispo\n                        start={start}\n                        end={end}\n                        mode='staffing'\n                        addStaffHandler={addStaffHandler}\n                        history={history}\n                    />\n                </DropDownTitleContainer>\n            )}\n        </>\n    )\n}\n\nexport default StaffingEditScreen;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { createSkills, deleteSkill, getAllSkills } from '../actions/skillActions';\nimport { getAllConsultantSkills } from '../actions/consultantActions';\n\nconst ManageSkillsScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const category = ''; // to implement if you want to search on specific category\n    const [name, setName] = useState('');\n\n    // local states to add a category\n    const [skillCategoryList, setSkillCategoryList] = useState([]);\n    const [skillCategory, setSkillCategory] = useState('default');\n    const [skillName, setSkillName] = useState('');\n    const [skillDescription, setSkillDescription] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const skillList = useSelector(state => state.skillList);\n    const { loading, skills, pages, page, count } = skillList;\n\n    const skillDelete = useSelector(state => state.skillDelete);\n    const { error, success } = skillDelete;\n\n    const skillCreate = useSelector(state => state.skillCreate);\n    const { loading: loadingCreateSkill, error: errorCreateSkill, success: successCreateSkill } = skillCreate;\n\n    const consultantAllSkills = useSelector(state => state.consultantAllSkills);\n    const { loading: loadingSkills, skills: skillsList } = consultantAllSkills;\n\n    useEffect(() => {\n        if (!userInfo || !['admin', 'coordinator'].includes(userInfo.profil.profil)) {\n            history.push('/login');\n        } else {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    }, [dispatch, history, userInfo, category, name, pageNumber, pageSize]);\n\n    useEffect(() => {\n        if (success) {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    // eslint-disable-next-line\n    }, [dispatch, success]);\n\n    useEffect(() => {\n        if (successCreateSkill) {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    // eslint-disable-next-line\n    }, [dispatch, successCreateSkill]);\n\n    useEffect(() => {\n        if (!skillsList) {\n            if (!loadingSkills) {\n                dispatch(getAllConsultantSkills());\n            }\n        } else {\n            let categoryList = skillsList.map(x => x.category);\n            categoryList = [...new Set(categoryList)];\n            setSkillCategoryList(categoryList);\n        }\n    }, [dispatch, skillsList, loadingSkills]);\n\n\n    const handlerAddSkill = (e) => {\n        e.preventDefault();\n        const skillToCreate = {\n            category: skillCategory,\n            name: skillName,\n            description: skillDescription\n        };\n        dispatch(createSkills(skillToCreate));\n    };\n\n    const onClickDeleteHandler = (skill) => {\n        if (window.confirm(`Are you sure to delete skill: ${skill.name} ?`)) {\n            dispatch(deleteSkill(skill._id));\n        }\n    }\n\n    return (\n        <>\n            <DropDownTitleContainer title='Create Skills' close={true}>\n                <ListGroup.Item>\n                <Row className='mt-3'>\n                    <Col>\n                        <Form onSubmit={handlerAddSkill}>\n                            <Form.Row>\n                                <Col md={3}>\n                                    <Form.Group controlId='skillCategory'>\n                                        <Form.Control\n                                            as='select'\n                                            value={skillCategory ? skillCategory : 'default'}\n                                            onChange={(e) => setSkillCategory(e.target.value)}\n                                            required\n                                        >\n                                            <option value='default'>Please Select</option>\n                                            {skillCategoryList && (\n                                                skillCategoryList.map((x, val) => (\n                                                    <option\n                                                        value={x}\n                                                        key={val}\n                                                        onChange={(e) => { setSkillCategory(e.target.value) }}\n                                                    >{x}</option>\n                                                )))}\n\n\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={3}>\n                                    <Form.Group controlId='name-skill'>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Skill'\n                                            value={skillName && skillName}\n                                            onChange={(e) => setSkillName(e.target.value)}\n                                            disabled={skillCategory === 'default'}\n                                            required\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group controlId='description-skill'>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Skill description'\n                                            value={skillDescription && skillDescription}\n                                            onChange={(e) => setSkillDescription(e.target.value)}\n                                            disabled={skillCategory === 'default'}\n                                            required\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col className='text-right'>\n                                    <Button type='submit' variant='primary' block>\n                                        {loadingCreateSkill ? <Loader /> : 'Add'}\n                                    </Button>\n                                </Col>\n                            </Form.Row>\n                            {errorCreateSkill && <Message variant='danger'>{errorCreateSkill}</Message>}\n                        </Form>\n\n                    </Col>\n                </Row>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n            \n            <DropDownTitleContainer title='Search Skills' close={false}>\n                <ListGroup.Item>\n                <Row className='mt-3'>\n\n                    <Col xs={6} md={2}>\n                        <InputGroup>\n                            <FormControl\n                                type='text'\n                                className=\"mb-3\"\n                                placeholder='Search skill'\n                                value={name && name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></FormControl>\n                        </InputGroup>\n                    </Col>\n\n                    <Col xs={6} md={8}>\n                        <Form.Control\n                            plaintext\n                            readOnly\n                            value={count ? `${count} skills found` : '0 skills found'} />\n                    </Col>\n\n                    <Col xs={6} md={2}>\n                        <InputGroup>\n                            <FormControl\n                                as='select'\n                                id='number-c'\n                                className=\"mb-3\"\n                                value={pageSize && pageSize}\n                                onChange={(e) => setPageSize(e.target.value)}\n                            >\n                                {[5, 10, 15, 20, 50].map(x => (\n                                    <option\n                                        key={x}\n                                        value={x}\n                                    >{x} / page</option>\n                                ))}\n                            </FormControl>\n                        </InputGroup>\n                    </Col>\n\n                </Row>\n\n                {skills && skills.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                    loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n\n                        <Table responsive hover striped>\n                            <thead>\n                                <tr className='table-primary'>\n                                    <th className='align-middle text-light'>Category</th>\n                                    <th className='align-middle text-light'>Skill</th>\n                                    <th className='align-middle text-light'>Description</th>\n                                    <th className='align-middle text-light'></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {skills && skills.map((skill) => (\n                                    <tr key={skill._id}>\n                                        <td className='align-middle'>{skill.category}</td>\n                                        <td className='align-middle'>{skill.name}</td>\n                                        <td className='align-middle'>{skill.description}</td>\n                                        <td className='align-middle'>\n                                            <Button \n                                                variant='danger' \n                                                onClick={() => onClickDeleteHandler(skill)}\n                                                size='sm'\n                                            ><i className=\"fas fa-times\"></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n\n                    )}\n\n                <Pagination>\n                    <Pagination.Prev\n                        onClick={() => setPageNumber(page - 1)}\n                        disabled={page === 1}\n                    />\n                    {[...Array(pages).keys()].map(x => (\n                        [0, 1, pages - 2, pages - 1].includes(x) ? (\n                        <Pagination.Item\n                            key={x + 1}\n                            active={x + 1 === page}\n                            onClick={() => {\n                                dispatch(getAllSkills(category, name, x + 1, pageSize));\n                                setPageNumber(x + 1);\n                            }}\n                        >{x + 1}</Pagination.Item>\n                        ) : (pages > 4 && x === 2) && (\n                            <Pagination.Ellipsis key={x + 1} />\n                        )\n                    ))}\n                    <Pagination.Next\n                        onClick={() => setPageNumber(page + 1)}\n                        disabled={page === pages}\n                    />\n                </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageSkillsScreen\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Form from 'react-bootstrap/Form';\nimport { pxxUploadFiles, updatePxxFiles } from '../actions/pxxActions';\n\nconst FlowImportPxx = (props) => {\n\n    const dispatch = useDispatch();\n\n    const [step, setStep] = useState(0);\n\n    const pxxUploadFile = useSelector(state => state.pxxUploadFile);\n    const { loading:loadingUpload, error:errorUpload, path } = pxxUploadFile;\n\n    const updatePxx = useSelector(state => state.updatePxx);\n    const { loading: loadingUpdate, error: errorUpdate, message } = updatePxx;\n\n    const onChangeHandler = (e) => {\n        //const data = new FormData();\n        const files = [];\n        for (let incr = 0; incr < e.target.files.length; incr++) {\n            const file = e.target.files[incr];\n            if(file.name.match(/^p[A-Za-z]+-[0-9]{2}.xlsb|^p[A-Za-z]+-arrivees.xlsb/)) {\n                const data = new FormData();\n                data.append('file', file);\n                files.push(data);\n            }\n        }\n        dispatch(pxxUploadFiles(files));\n    }\n\n    const startImportData = () => {\n        if(path) {\n            //dispatch(updatePxxFiles(path));\n            dispatch(updatePxxFiles(path));\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            //style={{'minHeight': '80vh'}}\n        >\n            <Modal.Header closeButton>\n                <Row className='align-items-center'>\n                    <Col className='text-center'>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Import Pxx from Pxx directory\n                        </Modal.Title>\n                    </Col>\n                </Row>\n            </Modal.Header>\n            \n            <Modal.Body>\n                <Row className='mb-3'>\n                    <Col><Button className={step >= 0 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(0)} variant='ligth' disabled={step <0}><strong>1-Guidelines</strong></Button></Col>\n                    <Col><Button className={step >= 1 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(1)} variant='ligth' disabled={step <1}><strong>2-Upload in App</strong></Button></Col>\n                    <Col><Button className={step >= 2 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(2)} variant='ligth' disabled={step <2}><strong>3-Start update</strong></Button></Col>\n                    <Col><Button className={step >= 3 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(3)} variant='ligth' disabled={step <3}><strong>4-Result</strong></Button></Col>\n                </Row>\n                \n                <Row className='align-items-center'>\n                    \n                    <Col>\n                    {step === 0 && (\n                        <Row>\n                            <Col>\n                                <h4>Process to upload pxx and update availabilities</h4>\n                                    <p>In the next steps you will be invit to</p>\n                                    <ul>\n                                            <li>Select your Pxx storage directory</li>\n                                            <li>Wait untill all Pxx files are uploaded</li>\n                                            <li>Start the backend calculation to update availabilities</li>\n                                            <li>Check the results and if asked proceed to corrections</li>\n                                        </ul>  \n                            </Col>\n                        </Row>\n                    )}\n                    {step === 1 && (\n                        <Row className='align-items-center'>\n                            <Col className='text-center'>\n                                <h4>Upload your file here</h4>\n                                {loadingUpload ? <Loader /> : (\n                                    <input \n                                        className='my-3' \n                                        type='file' \n                                        name='file' \n                                        onChange={onChangeHandler} \n                                        webkitdirectory='true'\n                                        directory='true'\n                                        multiple\n                                    />\n                                )}\n                                {errorUpload && <Message variant='danger'>{errorUpload}</Message>}\n                            </Col>\n                        </Row>\n                    )}\n                    {step === 2 && (\n                        path ? (\n                            <Row>\n                                <Col className='text-center'>\n                                    <h4>Do you want to update availabilities ?</h4>\n                                    {loadingUpdate ? <Loader />  : (\n                                        <Button variant='primary' className='m-3' onClick={startImportData}>\n                                            Update\n                                        </Button>\n                                    )}\n                                    <p>Process could take a few minute</p>\n                                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                                </Col>\n                            </Row>\n                        ) : (\n                            <Row><Col>Something wrong retry step 2</Col></Row>\n                        )\n                    )}\n                    {step === 3 && ( \n                        <Form.Control\n                            as='textarea' \n                            rows={10}\n                            value={message && message}\n                            readOnly\n                            //plaintext\n                        />\n                    )}\n                    </Col>\n                </Row>\n                \n                    \n            </Modal.Body>\n            <Modal.Footer>\n                {step === 3 && (\n                    <Button onClick={props.onHide}>Close</Button>\n                )}\n                {step < 3 && (\n                    <Button\n                        variant='success'\n                        onClick={() => (step + 1 <= 3) && setStep(step + 1)}\n                        disabled={step === 3 || (step === 1 && !path) || (step === 2 && !message)}\n                    >Next</Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default FlowImportPxx;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message';\nimport DisplayChildren from '../components/DisplayChildren';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport { getAllPxx, pxxUpdateALine } from '../actions/pxxActions';\nimport ReactExport from \"react-export-excel\";\nimport FlowImportPxx from '../components/FlowImportPxx';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst PxxDetailsScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const monthId = match.params.id ;\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n    const [exportExcel, setExportExcel] = useState('');\n\n    const [importData, setImportData] = useState([]);\n\n    const [progress, setProgress] = useState(0);\n    const [massImport, setMassImport] = useState(false);\n    const [errorImportMessage, setErrorImportMessage] = useState([]);\n    const [messsagesImportSuccess, setMessagesImportSuccess] = useState(0);\n    const [messsagesImportError, setMessagesImportError] = useState(0);\n    const [totalToImport, setTotalToImport] = useState(0);\n\n    const [showImportPxx, setShowImportPxx] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxAllList = useSelector(state  => state.pxxAllList);\n    const {loading, pxxs, pages, page, count} = pxxAllList;\n\n    const pxxImportLine = useSelector(state  => state.pxxImportLine);\n    const {loading: loadingImportLine, error: errorImportLine, success: successImportLine, updatedLine} = pxxImportLine;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            if (!massImport) {\n                dispatch(getAllPxx(userInfo.consultantProfil.practice, monthId, keyword, pageSize, pageNumber));\n            }\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, monthId, keyword, pageNumber, pageSize, massImport]);\n\n    useEffect(() => {\n        if (pxxs) {\n            const exportExcelData = pxxs.map((pxx) => ({\n                'CONSULTANT': pxx.name.name,\n                'MATRICULE': pxx.name.matricule,\n                'PRACTICE': pxx.name.practice,\n                'CDM_MATRICULE': pxx.name.cdmId && pxx.name.cdmId.matricule,\n                'CDM_NAME': pxx.name.cdmId && pxx.name.cdmId.name,\n                'VALUED': pxx.name.valued ? pxx.name.valued.substring(0,10) : '',\n                'ARRIVAL': pxx.name.arrival ? pxx.name.arrival.substring(0,10) : '',\n                'LEAVING': pxx.name.leaving ? pxx.name.leaving.substring(0,10) : '',\n                'MONTH': pxx.month.name,\n                'PROD': pxx.prodDay,\n                'NOT_PROD': pxx.notProdDay,\n                'HOLIDAYS': pxx.leavingDay,\n                'AVAILABLE': pxx.availableDay\n            }));\n            setExportExcel(exportExcelData);\n        }\n    }, [pxxs, setExportExcel]);\n\n\n    const handlerImportAllPxx = () => {\n        setProgress(0);\n        setMassImport(true);\n    };\n    \n    const handlerImportData = (lineToImport) => {\n        const newImportData = importData.slice();\n        for (let incr = 0 ; incr < newImportData.length; incr++){\n            if(newImportData[incr].MATRICULE === lineToImport.MATRICULE){\n                newImportData[incr].status = 'loading'\n            }\n        }\n        setImportData(newImportData);\n        dispatch(pxxUpdateALine(lineToImport));\n    }\n\n    useEffect(() => {\n        if(massImport) {\n            if(importData.length > 0 && importData[progress].status !== 'imported') {\n                //sleep(1000);\n                handlerImportData(importData[progress]);\n            } else {\n                if(progress < importData.length - 1){\n                    setProgress(progress+1);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    },[massImport, progress]);\n\n    useEffect(() => {\n        if(successImportLine) {\n            const newImportData = importData.slice();\n            for (let incr = 0; incr < newImportData.length; incr++) {\n                if (newImportData[incr].MATRICULE === updatedLine.updatedMatricule) {\n                    newImportData[incr].status = 'imported'\n                }\n            }\n            setImportData(newImportData);\n\n            if (massImport){\n                if (progress < importData.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassImport(false);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [successImportLine]);\n\n    useEffect(() => {\n        if(errorImportLine) {\n            const newImportData = importData.slice();\n            for (let incr = 0; incr < newImportData.length; incr++) {\n                if (newImportData[incr].MATRICULE === errorImportLine.message.matricule) {\n                    newImportData[incr].status = 'error';\n                }\n            }\n            setImportData(newImportData);\n            const newErrorMessage = errorImportMessage.slice();\n            newErrorMessage.push({message: errorImportLine.message.display});\n            //console.log(errorImportLine.message.display);\n            setErrorImportMessage(newErrorMessage);\n\n            if (massImport){\n                if (progress < importData.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassImport(false);\n                    setProgress(0);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [errorImportLine]);\n\n    useEffect(() => {\n        setMessagesImportSuccess(importData.filter(x => x.status === 'imported').length);\n        setMessagesImportError(importData.filter(x => x.status === 'error').length);\n        setTotalToImport(importData.length);\n    },[importData, errorImportLine, successImportLine]);\n    \n    return (\n        <>\n            <Meta />\n\n            <FlowImportPxx \n                show={showImportPxx}\n                onHide={() => setShowImportPxx(false)}\n            />\n\n            <Row>\n                <Col className='text-left'>\n                    <Button className='mb-3' onClick={() => history.go(-1)}>Go Back</Button>\n                </Col>\n                <Col className='text-right'>\n                    <DisplayChildren access='updatePxxFromPxx'>\n                        <Button variant='primary' onClick={() => setShowImportPxx(true)}>Update from Pxx folder</Button>\n                    </DisplayChildren>\n                </Col>\n\n            </Row>\n\n\n\n\n            <Row className='align-items-center pt-3'>\n                <Col md={5}>\n                    {`${messsagesImportSuccess} Pxx line imported / ${totalToImport} - ${messsagesImportError} lines with error`}\n                </Col>\n\n                <Col ws={6} md={2} className='text-right'>\n                    {exportExcel && (\n                        <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                            <ExcelSheet data={exportExcel} name=\"pxxsheet\">\n                                <ExcelColumn label=\"MATRICULE\" value=\"MATRICULE\" />\n                                <ExcelColumn label=\"(PRACTICE)\" value=\"PRACTICE\" />\n                                {/* <ExcelColumn label=\"VALUED\" value=\"VALUED\" />\n                                <ExcelColumn label=\"ARRIVAL\" value=\"ARRIVAL\" />\n                                <ExcelColumn label=\"LEAVING\" value=\"LEAVING\" /> */}\n                                <ExcelColumn label=\"MONTH\" value=\"MONTH\" />\n                                <ExcelColumn label=\"PROD\" value=\"PROD\" />\n                                <ExcelColumn label=\"NOT_PROD\" value=\"NOT_PROD\" />\n                                <ExcelColumn label=\"HOLIDAYS\" value=\"HOLIDAYS\" />\n                                <ExcelColumn label=\"(AVAILABLE)\" value=\"AVAILABLE\" />\n                                <ExcelColumn label=\"(CDM_MATRICULE)\" value=\"CDM_MATRICULE\" />\n                                <ExcelColumn label=\"(CDM_NAME)\" value=\"CDM_NAME\" />\n                            </ExcelSheet>\n                        </ExcelFile>\n                    )}\n                </Col>\n\n                <Col md={3} >\n                    <DisplayChildren access='uploadPxx'>\n                        {loadingImportLine ? (\n                            <Loader />\n                        ) : (\n                                <ImportExcelFile setImportData={setImportData} sheets='1' />\n                            )}\n                    </DisplayChildren>\n                </Col>\n\n                \n                <Col md={2} className='text-right'>\n                    <Button\n                        variant='primary'\n                        //className='text-primary'\n                        onClick={() => handlerImportAllPxx()}\n                        disabled={!importData.length > 0}\n                    ><i className=\"fas fa-upload\"></i> {massImport ? <Loader /> : 'Import All Pxx'}</Button>\n                </Col>\n            </Row>\n            <Row className='pt-3'>\n                <Col>\n                    <ProgressBar>\n                        <ProgressBar animated={massImport} now={100* messsagesImportSuccess / totalToImport} variant='primary' />\n                        <ProgressBar animated={massImport} now={100* messsagesImportError / totalToImport} variant='danger' />\n                    </ProgressBar>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    {errorImportMessage && errorImportMessage.map((x, incr) => (\n                        <Message key={incr} variant='warning'>{x.message}</Message>\n                    ))}\n                </Col>\n            </Row>\n\n            <Row className='mt-3'>\n                <Col xs={6} md={4}>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            className=\"mb-3\"\n                            placeholder='Search name'\n                            value={keyword && keyword}\n                            onChange={(e) => setKeyword(e.target.value)}\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col xs={6} md={4}>\n                    <Form.Control\n                        plaintext\n                        readOnly\n                        value={count ? `${count} consultants found` : '0 consultant found'} />\n                </Col>     \n\n                <Col xs={6} md={4}>\n                    <InputGroup>\n                        <FormControl\n                            as='select'\n                            id='number-c'\n                            className=\"mb-3\"\n                            value={pageSize && pageSize}\n                            onChange={(e) => setPageSize(e.target.value)}\n                        >\n                            {['All', 5, 10, 15, 20, 50].map(x => (\n                                <option\n                                    key={x}\n                                    value={(x === 'All' ? 10000 : x)}\n                                >{(x === 'All' ? 'All (export)' : `${x} / page`)}</option>\n                            ))}\n                        </FormControl>\n                    </InputGroup>\n                </Col>\n\n            </Row>\n\n            {loading && <Loader />}\n\n            <Table responsive hover striped>\n                <thead>\n                    <tr className='table-primary'>\n                        <th className='align-middle text-light'>User name</th>\n                        <th className='align-middle text-light'>Matricule</th>\n                        <th className='align-middle text-light text-center'>Practice</th>\n                        <th className='align-middle text-light text-center'>CDM</th>\n                        <th className='align-middle text-light text-center'>Month</th>\n                        <th className='align-middle text-light text-center'>Arrival</th>\n                        <th className='align-middle text-light text-center'>Leaving</th>\n                        <th className='align-middle text-light text-center'>PROD</th>\n                        <th className='align-middle text-light text-center'>NOT PROD</th>\n                        <th className='align-middle text-light text-center'>HOLIDAYS</th>\n                        <th className='align-middle text-light text-center'>AVAILABLE</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {pxxs && pxxs.map((pxx) => (\n                        <tr key={pxx._id}>\n                            <td className='align-middle'><b>{pxx.name.name && pxx.name.name}</b></td>\n                            <td className='align-middle'><b>{pxx.name.matricule && pxx.name.matricule}</b></td>\n                            <td className='align-middle'>{pxx.name.practice && pxx.name.practice}</td>\n                            <td className='align-middle'><b>{pxx.name.cdmId && pxx.name.cdmId.name}</b></td>\n                            <td className='align-middle text-center'>{pxx.month.name && pxx.month.name}</td>\n                            <td className='align-middle text-center'>{pxx.name.arrival && pxx.name.arrival.toString().substring(0,10)}</td>\n                            <td className='align-middle text-center'>{pxx.name.leaving ? pxx.name.leaving.toString().substring(0,10) : '-'}</td>\n                            <td className='align-middle text-center'>{pxx.prodDay && pxx.prodDay}</td>\n                            <td className='align-middle text-center'>{pxx.notProdDay && pxx.notProdDay}</td>\n                            <td className='align-middle text-center'>{pxx.leavingDay && pxx.leavingDay}</td>\n                            <td className='align-middle text-center'>{pxx.availableDay && pxx.availableDay}</td>\n                            \n                        </tr>\n                    ))} \n                </tbody>\n            </Table>\n\n            <Pagination>\n                <Pagination.Prev\n                    onClick={() => setPageNumber(page - 1)}\n                    disabled={page === 1}\n                />\n                {[...Array(pages).keys()].map(x => (\n                    [0, 1, pages - 2, pages - 1].includes(x) ? (\n                        <Pagination.Item\n                            key={x + 1}\n                            active={x + 1 === page}\n                            onClick={() => {\n                                dispatch(getAllPxx(userInfo.consultantProfil.practice, monthId, keyword, pageSize, x + 1));\n                                setPageNumber(x + 1);\n                            }}\n                        >{x + 1}</Pagination.Item>\n                    ) : (pages > 4 && x === 2) && (\n                        <Pagination.Ellipsis key={x + 1} />\n                    )\n\n                ))}\n                <Pagination.Next\n                    onClick={() => setPageNumber(page + 1)}\n                    disabled={page === pages}\n                />\n            </Pagination>\n\n        </>\n    )\n}\n\nexport default PxxDetailsScreen;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Form from 'react-bootstrap/Form'\nimport { deleteDeal } from '../actions/dealActions';\nimport { DEAL_STATUS, REQUEST_STATUS } from '../constants/dealConstants';\n\nconst DealList = ({ history, data = [], filter }) => {\n\n    const dispatch = useDispatch();\n\n    const onClickDeleteHandler = (deal) => {\n        if (window.confirm(`Are you sure to delete deal: ${deal.title} ?`)) {\n            dispatch(deleteDeal(deal._id));\n        }\n    }\n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    return (\n        <Table responsive hover striped className='mt-3'>\n            <thead>\n                <tr className='table-primary'>\n                    <th className='align-middle text-light'>Title</th>\n                    <th className='align-middle text-light'>Practice</th>\n                    <th className='align-middle text-light'>Contacts</th>\n                    <th className='align-middle text-light'>Company</th>\n                    <th className='align-middle text-light'>Status</th>\n                    <th className='align-middle text-light'>Probability</th>\n                    <th className='align-middle text-light'>Request</th>\n                    <th className='align-middle text-light'>Staff</th>\n                    <th className='align-middle text-light'>Start</th>\n                    <th className='align-middle text-light'></th>\n                    <th className='align-middle text-light'></th>\n                </tr>\n                <tr className='table-ligth'>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-title' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search title'\n                                value={filter.searchTitle && filter.searchTitle}\n                                onChange={(e) => { filter.setSearchTitle(e.target.value) }}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-practice' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search practice'\n                                disabled={true}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-contact' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search contact'\n                                value={filter.searchContact && filter.searchContact}\n                                onChange={(e) => filter.setSearchContact(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-company' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search company'\n                                value={filter.searchCompany && filter.searchCompany}\n                                onChange={(e) => filter.setSearchCompany(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-status' className='mb-0'>\n                            <Form.Control\n                                as='select'\n                                value={filter.searchDealStatus && filter.searchDealStatus}\n                                onChange={(e) => {\n                                    filter.setSearchDealStatus(e.target.value)\n                                    //setUpdate(true)\n                                }}\n                            >\n                                <option value=''>--Select--</option>\n                                {DEAL_STATUS.map(x => (\n                                    <option key={x.name} value={x.name}>{x.name}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-probability' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search probability'\n                                disabled={true}\n                            //value={filter.searchContact && filter.searchContact}\n                            //onChange={(e) => filter.setSearchContact(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-request' className='mb-0'>\n                            <Form.Control\n                                as='select'\n                                value={filter.searchRequestStatus && filter.searchRequestStatus}\n                                onChange={(e) => {\n                                    filter.setSearchRequestStatus(e.target.value)\n                                    //setUpdate(true)\n                                }}\n                            >\n                                <option value=''>--Select--</option>\n                                {REQUEST_STATUS.map(x => (\n                                    <option key={x.name} value={x.name}>{x.name}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-staff' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search staff'\n                                value={filter.searchStaff && filter.searchStaff}\n                                onChange={(e) => filter.setSearchStaff(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-start' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search start'\n                                disabled={true}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark' colSpan={2}>\n                        <Button\n                            variant='ligth'\n                            style={{color: 'grey'}}\n                            onClick={() => {\n                                filter.setSearchTitle('');\n                                filter.setSearchCompany('');\n                                filter.setSearchContact('');\n                                filter.setSearchDealStatus('');\n                                filter.setSearchRequestStatus('');\n                                filter.setSearchStaff('');\n                            }}\n                        ><i className=\"fas fa-minus-circle\"></i>  Reset</Button>\n                    </th>\n                </tr>\n\n            </thead>\n\n            <tbody>\n                {data && data.deals.map((deal) => (\n                    <tr key={deal._id}>\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.description\n                            }</Tooltip>}\n                        >\n                            <td className='align-middle'>{deal.title}</td>\n                        </OverlayTrigger>\n                        <td className='align-middle text-center'>{deal.mainPractice} {deal.othersPractices && deal.othersPractices.length ? (`(${deal.othersPractices.join(', ')})`) : ''}</td>\n                        <td className='align-middle text-center'>{deal.contacts.primary ? formatName(deal.contacts.primary.name) : '-'} {deal.contacts && deal.contacts.secondary && deal.contacts.secondary.length ? ('/ (' + deal.contacts.secondary.map(x => formatName(x.name.toString())).join(', ') + ')') : ''}</td>\n                        <td className='align-middle text-center'>{deal.company}</td>\n                        <td className='align-middle text-center'>{deal.status}</td>\n                        <td className='align-middle text-center'>{deal.probability} %</td>\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.staffingRequest.instructions\n                            }</Tooltip>}\n                        >\n                            <td className='align-middle text-center'>{deal.staffingRequest.requestStatus}</td>\n                        </OverlayTrigger>\n\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.staffingDecision.staff.length > 0 ? (\n                                    deal.staffingDecision.staff.map(x => ({ name: formatName(x.idConsultant.name), responsability: x.responsability, priority: x.priority })).map((x, index) => <div className='text-left' key={index}>{`${x.responsability}: ${x.name} (${x.priority})`}</div>)\n                                ) : ('-')}</Tooltip>\n                            }\n                        >\n                            <td className='align-middle'>{deal.staffingDecision.staff.length > 0 ? 'See' : '-'}</td>\n                        </OverlayTrigger>\n\n                        <td className='align-middle text-center'>{deal.startDate.substring(0, 10)}</td>\n                        <td className='align-middle text-center'>\n                            <Button\n                                variant='ligth'\n                                style={{color:'gray'}}\n                                onClick={() => history.push(`/staffing/${deal._id}`)}\n                                size='md'\n                            ><i className=\"fas fa-edit\"></i>\n                            </Button>\n                        </td>\n                        <td className='align-middle'>\n                            <Button\n                                variant='ligth'\n                                style={{color: 'red'}}\n                                onClick={() => onClickDeleteHandler(deal)}\n                                size='md'\n                            ><i className=\"fas fa-times\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default DealList;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport DealList from '../components/DealList';\nimport DisplayChildren from '../components/DisplayChildren';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { dealsImportInMass, getAllDeals } from '../actions/dealActions';\nimport { FormControl, InputGroup } from 'react-bootstrap';\nimport { DEAL_STATUS, REQUEST_STATUS } from '../constants/dealConstants';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ManageDealsScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n    const [pageSize] = useState('');\n    const [pageNumber] = useState('');\n\n    // search configuration\n    const [searchTitle, setSearchTitle] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).title ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).title : '');\n    const [searchCompany, setSearchCompany] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).company ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).company : '');\n    const [searchContact, setSearchContact] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).contact ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).contact : '');\n    const [searchDealStatus, setSearchDealStatus] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).dealStatus ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).dealStatus : '');\n    const [searchRequestStatus, setSearchRequestStatus] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).requestStatus ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).requestStatus : '');\n    const [searchMyDeals, setSearchMyDeals] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).myDeals ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).myDeals : '');\n    const [searchStaff, setSearchStaff] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).searchStaff ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).searchStaff : '');\n\n    const [updateFilter, setUpdateFilter] = useState(7);\n    const [notUpdateFilter, setNotUpdateFilter] = useState(30);\n    const [newDealFilter, setNewDealFilter] = useState(7);\n    const [wonDealFilter, setWonDealFilter] = useState(7);\n\n    const [changePeriod, setChangePeriod] = useState(false);\n\n    const [tabsFilter] = useState(['Waiting staffing', `Updated (${updateFilter}d)`, `Not updated (${notUpdateFilter}d)`, `New deal (${newDealFilter}d)`, `Won (${wonDealFilter}d)`, 'All']);\n\n    const [defaultTabs, setDefaultTabs] = useState(localStorage.getItem('ManageDealsScreen.defaultTab') ? localStorage.getItem('ManageDealsScreen.defaultTab') : tabsFilter[0])\n\n    const [dataFiltered, setDataFiltered] = useState([]);\n\n    const [update, setUpdate] = useState(true);\n\n    const [exportExcel, setExportExcel] = useState('');\n    const [importData, setImportData] = useState([]);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { error, loading, deals } = dealAllList;\n\n    const dealDelete = useSelector(state => state.dealDelete);\n    const { error: errorDelete, success: successDelete } = dealDelete;\n\n    const dealsImportMass = useSelector(state  => state.dealsImportMass);\n    const {loading: loadingImportMass, success: successImportData} = dealsImportMass;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            const keyword = {\n                title: searchTitle,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: searchMyDeals\n            }\n\n            dispatch(getAllDeals(keyword, pageNumber, pageSize, 'active'));\n            localStorage.setItem('ManageDealsScreen.filter', JSON.stringify({\n                title: searchTitle,\n                company: searchCompany,\n                contact: searchContact,\n                dealStatus: searchDealStatus,\n                requestStatus: searchRequestStatus,\n                searchStaff: searchStaff,\n                myDeals: searchMyDeals,\n            }));\n            setUpdate(false);\n\n        } else {\n            history.push('/login');\n        }\n\n    }, [\n        dispatch, \n        history, \n        userInfo, \n        searchTitle, \n        searchCompany, \n        searchContact, \n        searchDealStatus, \n        searchRequestStatus,\n        searchStaff,\n        pageNumber, \n        pageSize,\n        update,\n        searchMyDeals,\n        successImportData\n    ]);\n\n    useEffect(() => {\n\n        if (deals) {\n\n            const updateTime = new Date(Date.now());\n            updateTime.setUTCDate(updateTime.getUTCDate() - updateFilter);\n\n            const notUpdateTime = new Date(Date.now());\n            notUpdateTime.setUTCDate(notUpdateTime.getUTCDate() - notUpdateFilter);\n\n            const newDealTime = new Date(Date.now());\n            newDealTime.setUTCDate(newDealTime.getUTCDate() - newDealFilter);\n\n            const wonDealTime = new Date(Date.now());\n            wonDealTime.setUTCDate(wonDealTime.getUTCDate() - wonDealFilter);\n\n\n            const filteredData = [];\n\n            for (let incr = 0; incr < tabsFilter.length; incr++) {\n                let dealsFiltered = [];\n\n                switch (tabsFilter[incr]) {\n                    case tabsFilter[0]: // Deals waiting a staff\n                        const needStaff = REQUEST_STATUS.filter(x => x.staff === true);\n                        const toDisplay = DEAL_STATUS.filter(x => x.display === 'onTrack' || x.display === 'win');\n                        //console.log('toDisplay', toDisplay)\n                        dealsFiltered = {\n                            deals: deals.filter(deal => (needStaff.map(x => x.name).includes(deal.staffingRequest.requestStatus) && toDisplay.map(x => x.name).includes(deal.status))),\n                            param: null,\n                            setParam: null\n                        };\n                        break;\n                    case tabsFilter[1]: // Update\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.updatedAt) >= updateTime),\n                            param: updateFilter,\n                            setParam: setUpdateFilter\n                        }\n                        break;\n                    case tabsFilter[2]: // Not Update\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.updatedAt) <= notUpdateTime),\n                            param: notUpdateFilter,\n                            setParam: setNotUpdateFilter\n                        }\n                        break;\n                    case tabsFilter[3]: // newDeal\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.createdAt) >= newDealTime),\n                            param: newDealFilter,\n                            setParam: setNewDealFilter\n                        }\n                        break;\n                    case tabsFilter[4]: // Won\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.wonDate) >= wonDealTime),\n                            param: wonDealFilter,\n                            setParam: setWonDealFilter\n                        }\n                        break;\n                    case tabsFilter[5]: // All >>> mettre une redirection\n                        dealsFiltered = {\n                            deals: deals,\n                            param: null,\n                            setParam: null\n                        }\n                        break;\n                    default:\n                        dealsFiltered = [];\n                }\n                filteredData.push({ filter: tabsFilter[incr], data: dealsFiltered, count: dealsFiltered.deals.length });\n            }\n            setDataFiltered(filteredData);\n        }\n    }, [deals, tabsFilter, newDealFilter, notUpdateFilter, updateFilter, wonDealFilter]);\n\n    useEffect(() => {\n        if (deals) {\n            const exportExcelData = deals.map((deal) => ({\n                'TITLE': deal.title,\n                'COMPANY': deal.company,\n                'PRACTICE': deal.mainPractice,\n                'LEADER': deal.contacts && deal.contacts.primary && deal.contacts.primary.name,\n                'CO-LEADER': deal.contacts && deal.contacts.secondary && deal.contacts.secondary.map(x => x.name).join(''),\n                'OTHERS_PRACTICES': deal.othersPractices && deal.othersPractices.join(','),\n                'STATUS': deal.status,\n                'DESCRIPTION': deal.description,\n                'START': deal.startDate.substring(0,10),\n                'DURATION': deal.duration,\n                'REQUEST_STATUS': deal.staffingRequest.requestStatus,\n                'REQUEST_DETAILS': deal.staffingRequest.instructions,\n                'DECISION': deal.staffingDecision.staff && deal.staffingDecision.staff.map(x => `${x.responsability}: ${x.idConsultant.name} (${x.priority})}`).join('\\n'),\n            }));\n            setExportExcel(exportExcelData);\n        }\n    }, [deals, setExportExcel]);\n\n    useEffect(() => {\n        if(importData.length > 0) {\n            //console.log(importData);\n            dispatch(dealsImportInMass(importData));\n        }\n    },[dispatch, importData]);\n\n    useEffect(() => {\n\n        if (successDelete) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: searchMyDeals\n            }\n            dispatch(getAllDeals(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete]);\n\n    return (\n        <>\n            <Meta />\n\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <DropDownTitleContainer\n                title='Manage Deals'\n                close={false}>\n                \n                <Row className='mt-3'>\n                    <Col xs={0} md={7}></Col>\n                    <Col xs={6} md={3}>\n                        <DisplayChildren access='uploadDeals'>\n                            {loadingImportMass ? (\n                                <Loader />\n                            ) : (\n                                    <ImportExcelFile setImportData={setImportData} />\n                                )}\n                        </DisplayChildren>\n                    </Col>\n\n                    <Col ws={6} md={2}>\n                        {exportExcel && (\n                            <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                <ExcelSheet data={exportExcel} name=\"dealsSheet\">\n                                    <ExcelColumn label=\"TITLE\" value=\"TITLE\" />\n                                    <ExcelColumn label=\"COMPANY\" value=\"COMPANY\" />\n                                    <ExcelColumn label=\"PRACTICE\" value=\"PRACTICE\" />\n                                    <ExcelColumn label=\"LEADER\" value=\"LEADER\" />\n                                    <ExcelColumn label=\"CO-LEADER\" value=\"CO-LEADER\" />\n                                    <ExcelColumn label=\"OTHERS_PRACTICES\" value=\"OTHERS_PRACTICES\" />\n                                    <ExcelColumn label=\"STATUS\" value=\"STATUS\" />\n                                    <ExcelColumn label=\"DESCRIPTION\" value=\"DESCRIPTION\" />\n                                    <ExcelColumn label=\"START\" value=\"START\" />\n                                    <ExcelColumn label=\"DURATION\" value=\"DURATION\" />\n                                    <ExcelColumn label=\"REQUEST_STATUS\" value=\"REQUEST_STATUS\" />\n                                    <ExcelColumn label=\"REQUEST_DETAILS\" value=\"REQUEST_DETAILS\" />\n                                    <ExcelColumn label=\"DECISION\" value=\"DECISION\" />\n                                </ExcelSheet>\n                            </ExcelFile>\n                        )}\n                    </Col>\n                </Row>\n\n                <ListGroup.Item className='p-0 mt-3'>\n                    <Tabs \n                        id=\"uncontrolled-tab-example\" \n                        variant='pills'\n                        activeKey={defaultTabs}\n                        onSelect={(k) => {\n                            setDefaultTabs(k)\n                            localStorage.setItem('ManageDealsScreen.defaultTab', k)\n                        }}\n                    >\n                        {dataFiltered.length > 0 && dataFiltered.map((data, val) => (\n                            <Tab\n                                key={val}\n                                className='mx-3'\n                                eventKey={`${data.filter}`}\n                                \n                                title={\n                                    <Row className='align-text-middle'>\n                                        <span className='ml-3 align-middle'>{data.filter.split(/[0-9]+/i)[0]}</span>\n                                        {changePeriod ? (\n                                            <span>{data.data.param && (\n                                                <InputGroup>\n                                                    <FormControl\n                                                        as='select'\n                                                        value={data.data.param}\n                                                        onChange={(e) => data.data.setParam(e.target.value)}\n                                                    >\n                                                        {[...new Array(30).keys()].map(x => (\n                                                            <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                        ))}\n                                                    </FormControl>\n                                                </InputGroup>\n                                            )}\n                                            </span>) : data.data.param}\n                                        <span>{(data.filter.split(/[0-9]+/i)[1] && data.filter.split(/[0-9]+/i)[1])}</span>\n                                        <span className='mr-3'>{' > ' + data.count}</span>\n                                    </Row>\n                                }\n                            >\n                                <Row className='mt-3'>\n                                    <Col className='text-left'>\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => setChangePeriod(!changePeriod)}\n                                        ><i className=\"fas fa-edit\"></i>  Configure tabs</Button>\n\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => history.push('/admin/deals/history')}\n                                        ><i className=\"fas fa-history\"></i>  History</Button>\n\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => {\n                                                setSearchMyDeals(!searchMyDeals)\n                                                setUpdate(true)\n                                            }}\n                                        >{searchMyDeals ? (\n                                            <div><i className=\"fas fa-backspace\"></i>  Get all deals</div>\n                                        ) : (\n                                                <div><i className=\"fas fa-filter\"></i>  Filter my deals</div>\n                                            )}\n                                        </Button>\n\n                                        <Button \n                                            variant='ligth'\n                                            onClick={() => window.confirm('Soon available')}\n                                        ><i className=\"fas fa-project-diagram\"></i>  Business flows\n                                        </Button>\n\n                                        <DisplayChildren access='sendStaffingDecision'>\n                                            <Button\n                                                variant='ligth'\n                                                className='text-black align-right'\n                                                onClick={() => history.push('/admin/send')}\n                                            ><i className=\"fas fa-envelope\"></i>  Send staffing decisions</Button>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <DealList\n                                    history={history}\n                                    data={data.data}\n                                    filter={{\n                                        searchTitle: searchTitle,\n                                        setSearchTitle: setSearchTitle,\n                                        searchCompany: searchCompany, \n                                        setSearchCompany: setSearchCompany,\n                                        searchContact: searchContact,\n                                        setSearchContact: setSearchContact,\n                                        searchDealStatus: searchDealStatus,\n                                        setSearchDealStatus: setSearchDealStatus,\n                                        searchRequestStatus: searchRequestStatus,\n                                        setSearchRequestStatus: setSearchRequestStatus,\n                                        searchStaff: searchStaff,\n                                        setSearchStaff: setSearchStaff\n                                    }}\n                                />\n                            </Tab>\n                        ))}\n                    </Tabs>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageDealsScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport DealList from '../components/DealList';\nimport Meta from '../components/Meta';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { getAllDeals } from '../actions/dealActions';\nimport ReactExport from \"react-export-excel\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\nconst DealsHistoryScreen = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n    const [pageSize] = useState('');\n    const [pageNumber] = useState('');\n\n    // search configuration\n    const [searchTitle, setSearchTitle] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).title ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).title : '' );\n    const [searchCompany, setSearchCompany] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).company ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).company : '');\n    const [searchContact, setSearchContact] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).contact ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).contact : '');\n    const [searchDealStatus, setSearchDealStatus] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).dealStatus ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).dealStatus : '');\n    const [searchRequestStatus, setSearchRequestStatus] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).requestStatus ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).requestStatus : '');\n    const [searchStaff, setSearchStaff] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).searchStaff ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).searchStaff : '');\n    //const [searchMyDeals, setSearchMyDeals] = useState(localStorage.getItem('DealsHistoryScreen.filter') ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).myDeals : '');\n\n    const [tabsFilter] = useState([...new Array(5).keys()].map(x => new Date(Date.now()).getFullYear() - x));\n\n    const [defaultTabs, setDefaultTabs] = useState(localStorage.getItem('DealsHistoryScreen.defaultTab') ? localStorage.getItem('DealsHistoryScreen.defaultTab') : tabsFilter[0])\n\n    const [dataFiltered, setDataFiltered] = useState([]);\n\n    const [update, setUpdate] = useState(true);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { error, loading, deals } = dealAllList;\n\n    const dealDelete = useSelector(state => state.dealDelete);\n    const { error: errorDelete, success: successDelete } = dealDelete;\n\n    useEffect(() => {\n        if (userInfo) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: false\n            }\n\n            dispatch(getAllDeals(keyword, pageNumber, pageSize, 'all'));\n            localStorage.setItem('DealsHistoryScreen.filter', JSON.stringify({\n                title: searchTitle,\n                company: searchCompany,\n                contact: searchContact,\n                dealStatus: searchDealStatus,\n                requestStatus: searchRequestStatus,\n                searchStaff: searchStaff,\n                //myDeals: searchMyDeals,\n            }));\n            setUpdate(false);\n\n        } else {\n            history.push('/login');\n        }\n\n    }, [\n        dispatch, \n        history, \n        userInfo, \n        searchTitle, \n        searchCompany, \n        searchContact, \n        searchDealStatus, \n        searchRequestStatus, \n        searchStaff,\n        //searchMyDeals,\n        pageNumber, \n        pageSize,\n        update\n    ]);\n\n    useEffect(() => {\n        if (deals) {\n\n            const filteredData = [];\n\n            for (let incr = 0; incr < tabsFilter.length; incr++) {\n                let dealsFiltered = deals.filter( deal => deal.updatedAt.substring(0,4) === tabsFilter[incr].toString());\n                dealsFiltered = {\n                    deals: dealsFiltered,\n                    param: null,\n                    setParam: null,\n                    exportExcel: dealsFiltered.map((deal) => ({\n                        'TITLE': deal.title,\n                        'MAIN_PRACTICE': deal.mainPractice,\n                        'OTHERS_PRACTICES': deal.othersPractices.join(', '),\n                        'LEADER': deal.contacts.primary ? (deal.contacts.primary.name + ' (' + deal.contacts.primary.matricule + ')') : '',\n                        'CO-LEADERS': deal.contacts.secondary ? deal.contacts.secondary.map(x => x.name + ' (' + x.matricule + ')').join(', ')  : '',\n                        'COMPANY': deal.company,\n                        'STATUS': deal.status,\n                        'TYPE': deal.type,\n                        'DESCRIPTION': deal.description,\n                        'PROPOSAL DATE': deal.proposalDate ? deal.proposalDate.substring(0,10) : '',\n                        'PRESENTATION DATE': deal.presentationDate ? deal.presentationDate.substring(0,10) : '',\n                        'START DATE': deal.startDate ? deal.startDate.substring(0,10) : '',\n                        'WON DATE': deal.wonDate ? deal.wonDate.substring(0,10) : '',\n                        'STAFF': deal.staffingDecision.staff ? deal.staffingDecision.staff.map(x => x.responsability + ': ' + x.idConsultant.name + ' (' + x.idConsultant.matricule + ')').join(', ') : '',\n                    }))\n                \n\n                }\n                filteredData.push({ filter: tabsFilter[incr], data: dealsFiltered, count: dealsFiltered.deals.length });\n            }\n            setDataFiltered(filteredData);\n        }\n    }, [deals, tabsFilter]);\n\n    useEffect(() => {\n\n        if (successDelete) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy:false\n            }\n            dispatch(getAllDeals(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete])\n\n    return (\n        <>\n            <Meta />\n\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <DropDownTitleContainer\n                title='Manage Deals'\n                close={false}>\n                <ListGroup.Item className='p-0 mt-3'>\n                    <Tabs \n                        //defaultActiveKey={tabsFilter[0]} \n                        id=\"uncontrolled-tab-example\" \n                        variant='pills'\n                        activeKey={defaultTabs}\n                        onSelect={(k) => {\n                            setDefaultTabs(k)\n                            localStorage.setItem('DealsHistoryScreen.defaultTab', k)\n                        }}\n                    >\n                        {dataFiltered.length > 0 && dataFiltered.map((data, val) => (\n                            <Tab\n                                key={val}\n                                className='mx-3'\n                                eventKey={`${data.filter}`}\n                                title={data.filter + ' (' + data.data.deals.length + ')'}\n                            >\n                                {data.data.deals && (\n                                    <ExcelFile element={<Button variant='ligth' className='mt-3'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                        <ExcelSheet data={data.data.exportExcel} name=\"dealsSheet\">\n                                            <ExcelColumn label=\"TITLE\" value=\"TITLE\" />\n                                            <ExcelColumn label=\"MAIN_PRACTICE\" value=\"MAIN_PRACTICE\" />\n                                            <ExcelColumn label=\"OTHERS_PRACTICES\" value=\"OTHERS_PRACTICES\" />\n                                            <ExcelColumn label=\"LEADER\" value=\"LEADER\" />\n                                            <ExcelColumn label=\"CO-LEADERS\" value=\"CO-LEADERS\" />\n                                            <ExcelColumn label=\"COMPANY\" value=\"COMPANY\" />\n                                            <ExcelColumn label=\"STATUS\" value=\"STATUS\" />\n                                            <ExcelColumn label=\"TYPE\" value=\"TYPE\" />\n                                            <ExcelColumn label=\"DESCRIPTION\" value=\"DESCRIPTION\" />\n                                            <ExcelColumn label=\"PROPOSAL DATE\" value=\"PROPOSAL DATE\" />\n                                            <ExcelColumn label=\"PRESENTATION DATE\" value=\"PRESENTATION DATE\" />\n                                            <ExcelColumn label=\"START DATE\" value=\"START DATE\" />\n                                            <ExcelColumn label=\"WON DATE\" value=\"WON DATE\" />\n                                            <ExcelColumn label=\"STAFF\" value=\"STAFF\" />\n                                        </ExcelSheet>\n                                    </ExcelFile>\n                                )}\n\n                                <DealList\n                                    history={history}\n                                    data={data.data}\n                                    filter={{\n                                        searchTitle: searchTitle,\n                                        setSearchTitle: setSearchTitle,\n                                        searchCompany: searchCompany,\n                                        setSearchCompany: setSearchCompany,\n                                        searchContact: searchContact,\n                                        setSearchContact: setSearchContact,\n                                        searchDealStatus: searchDealStatus,\n                                        setSearchDealStatus: setSearchDealStatus,\n                                        searchRequestStatus: searchRequestStatus,\n                                        setSearchRequestStatus: setSearchRequestStatus,\n                                        searchStaff: searchStaff,\n                                        setSearchStaff: setSearchStaff\n                                    }}\n                                />\n                            </Tab>\n                        ))}\n                    </Tabs>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default DealsHistoryScreen\n","import React, { useState, useEffect } from 'react';\nimport { Form, ListGroup, Col, Row, Tabs, Tab, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ACCESS_DATAS, ACCESS_MODES } from '../constants/accessConstants';\nimport DisplayChildren from '../components/DisplayChildren';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getAllAccess, updateprofilFrontAcessRule } from '../actions/accessActions';\n\nconst AccessEditScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const accessList = useSelector(state => state.accessList);\n    const { loading, error, access } = accessList;\n\n    const accessFrontUpdate = useSelector(state => state.accessFrontUpdate);\n    const { error: errorFrontUpdate } = accessFrontUpdate;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (!access) {\n            dispatch(getAllAccess());\n        }\n    }, [dispatch, access]);\n    \n\n    return (\n        <DisplayChildren access='manageProfils'>\n            {loading && <Loader />}\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorFrontUpdate && <Message variant='danger'>{errorFrontUpdate}</Message>}\n\n            <h1>Manage user profils screen</h1>\n            <Tabs defaultActiveKey={access && access[0].profil} id=\"uncontrolled-tab-example\">\n                {access && access.map((x, incr) => (\n                    <Tab key={incr} eventKey={x.profil} title={x.profil}>\n                        <ProfilDescription data={x} />\n                    </Tab>\n                ))}\n            </Tabs>\n        </DisplayChildren>\n    )\n}\n\nconst ProfilDescription = ({data}) => {\n\n    const categorizeFrontAccess = (frontAccess) => {\n        \n        const categories = [...new Set(frontAccess.map(x => x.category))];\n\n        const categorizedFrontAccess = [];\n        for (let incr = 0; incr < categories.length; incr++) {\n            const filterdData = frontAccess.filter(x => x.category === categories[incr]);\n            categorizedFrontAccess.push({\n                frontAccessRules: filterdData,\n                category: categories[incr],\n            });\n        }\n        return [categorizedFrontAccess, categories]\n    }\n    \n    const [categorizedFrontAccess, categories] = categorizeFrontAccess(data.frontAccess);\n\n\n    return (\n        <ListGroup>\n            {categorizedFrontAccess && categorizedFrontAccess.map((categoryRules, incr) => (\n                <ListGroup.Item key={incr} className='pt-3'>\n                    <CategoryAccess\n                        accessRules={categoryRules.frontAccessRules}\n                        category={categoryRules.category}\n                        categories={categories}\n                        profilId={data._id}\n                    />\n                </ListGroup.Item>\n            ))}\n        </ListGroup>\n    )\n};\n\nconst CategoryAccess = ({ accessRules, category, categories, profilId }) => {\n\n    const params = {\n        categories: categories,\n        modes: ACCESS_MODES,\n        datas: ACCESS_DATAS\n    }\n\n    return (\n        <>\n            <h4>{category && category}</h4>\n            <ListGroup variant='flush'>\n                <ListGroup.Item>\n                    <Row className='py-1 border-bottom bg-primary'>\n                        <Col className='text-white' xs={3}><strong>TECHNICAL ID</strong></Col>\n                        <Col className='text-white' xs={4}><strong>LABEL</strong></Col>\n                        <Col className='text-white' xs={2}><strong>MODE</strong></Col>\n                        <Col className='text-white' xs={2}><strong>ACCESS</strong></Col>\n                        <Col xs={1}><strong></strong></Col>\n                    </Row>\n                </ListGroup.Item>\n            </ListGroup>\n            {accessRules && accessRules.map((item, incr) => (\n                <ListGroup key={incr} variant='flush' className='border-bottom'>\n                    <ListGroup.Item>\n                        <AccessLineEdit\n                            frontAccessItem={item}\n                            params={params}\n                            profilId={profilId}\n                        />\n                    </ListGroup.Item>\n                </ListGroup>\n            ))}\n        </>\n    )\n}\n\nconst AccessLineEdit = ({ frontAccessItem, params, profilId }) => {\n\n    const dispatch = useDispatch()\n\n    const [id] = useState(frontAccessItem.id);\n    const [label, setLabel] = useState(frontAccessItem.label);\n    const [mode, setMode] = useState(frontAccessItem.mode);\n    const [data, setData] = useState(frontAccessItem.data);\n\n    const [loadingState, setLoadingState] = useState(false);\n\n    const accessFrontUpdate = useSelector(state => state.accessFrontUpdate);\n    const { error, success } = accessFrontUpdate;\n\n    useEffect(() => {\n        if(success) {\n            setLoadingState(false)\n        } \n    },[success]);\n\n    useEffect(() => {\n        if(error) {\n            setLoadingState(false)\n        } \n    },[error]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setLoadingState(true);\n        const rule = {\n            id: id,\n            label: label,\n            mode: mode,\n            data: data,\n            profilId: profilId\n        }\n        dispatch(updateprofilFrontAcessRule(rule))\n        console.log('update to implement')\n    }\n\n    return (\n        <Form onSubmit={submitHandler}>\n            <Form.Row>\n                <Col xs={3}>\n                    <Form.Control\n                        type='text'\n                        value={id && id}\n                        plaintext\n                        readOnly\n                    ></Form.Control>\n                </Col>\n\n                <Col xs={4}>\n                    <Form.Control\n                        type='text'\n                        value={label && label}\n                        onChange={(e) => setLabel(e.target.value)}\n                    ></Form.Control>\n                </Col>\n\n                <Col xs={2}>\n                    <Form.Control\n                        as='select'\n                        value={mode && mode}\n                        onChange={(e) => setMode(e.target.value)}\n                    >\n                        <option value=''>--Select--</option>\n                        {params.modes.map((x, incr) => (\n                            <option key={incr} value={x}>{x}</option>\n                        ))}\n                    </Form.Control>\n                </Col>\n\n                <Col xs={2}>\n                    <Form.Control\n                        as='select'\n                        value={data && data}\n                        onChange={(e) => setData(e.target.value)}\n                    >\n                        <option value=''>--Select--</option>\n                        {params.datas.map((x, incr) => (\n                            <option key={incr} value={x}>{x}</option>\n                        ))}\n                    </Form.Control>\n                </Col>\n\n                <Col xs={1}>\n                    <Button variant='ligth' className='text-secondary' type='submit'>\n                        {loadingState ? <Loader /> : <i className=\"fas fa-download\"></i>}\n                    </Button>\n                </Col>\n\n            </Form.Row>\n        </Form>\n    )\n}\n\nexport default AccessEditScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DisplayChildren from '../components/DisplayChildren';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { createAClient, deleteAClient, getAllClients, updateAClient } from '../actions/clientActions';\n\nconst ManageCompaniesScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n\n    const [showAddContact, setShowAddContact] = useState({state:false, companyId:'', companyName:\"\"});\n    const [contactName, setContactName] = useState('');\n    const [contactEmail, setContactEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    const [showModifyName, setShowModifyName] = useState({state:false, companyId:'', companyName:''});\n    const [newCompanyName, setNewCompanyName] = useState('');\n\n    const [showCreateCompany, setShowCreateCompany] = useState({state:false});\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const clientAll = useSelector(state => state.clientAll);\n    const { error, loading, clients: companies, count, page, pages } = clientAll;\n\n    const clientUpdate = useSelector(state => state.clientUpdate);\n    const { error: errorUpdate, success:successUpdate } = clientUpdate;\n\n    const clientDelete = useSelector(state => state.clientDelete);\n    const { error: errorDelete, success:successDelete } = clientDelete;\n\n    const clientCreate = useSelector(state => state.clientCreate);\n    const { error: errorCreate, success:successCreate } = clientCreate;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, pageNumber, pageSize, keyword]);\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successUpdate]);\n\n    useEffect(() => {\n        if (successDelete) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete]);\n\n    useEffect(() => {\n        if (successCreate) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successCreate]);\n\n\n    const addCompanyHandler = (e, newCompanyName, contactName, contactEmail) => {\n        // Add company function\n        e.preventDefault();\n        dispatch(createAClient([{name:newCompanyName, commercialTeam:[{contactName: contactName, contactEmail: contactEmail}]}]));\n        setShowCreateCompany({state:false});\n        setContactEmail('');\n        setContactName('');\n        setNewCompanyName('');\n\n    }\n\n    const modifyCompanyNameHandler = (e, companyId, newCompanyName) => {\n        e.preventDefault();\n        let clientToUpdate = companies.filter(x => x._id === companyId)[0];\n        clientToUpdate.name = newCompanyName;\n        dispatch(updateAClient(clientToUpdate));\n        setShowModifyName({ state: false, companyId: '', companyName: '' });\n    }\n\n    const onClickDeleteHandler = (company) => {\n        if (window.confirm(`Are you sure to delete company: ${company.name} ?`)) {\n            dispatch(deleteAClient(company._id));\n        }\n    }\n\n    const addContactHandler = (e, contactName, contactEmail, companyId) => {\n        e.preventDefault();\n\n        let contactNameConform = false;\n        let contactEmailConform = false;\n        let message = []\n\n        if (contactName) {\n            contactNameConform = true\n        } else {\n            message.push('Thanks to enter a correct Name')\n        }\n\n        const regexEmail = /^(([^<>()[]\\.,;:s@]+(.[^<>()[]\\.,;:s@]+)*)|(.+))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))$/;\n        if (regexEmail.test(contactEmail)) {\n            contactEmailConform = true\n        } else {\n            message.push('Thanks to enter a correct Email address')\n        }\n\n        setMessage(message);\n\n        if (contactEmailConform && contactNameConform) {\n\n            let clientToUpdate = companies.filter(x => x._id === companyId)[0];\n            clientToUpdate.commercialTeam = clientToUpdate.commercialTeam.map(x => ({contactName: x.contactName, contactEmail:x.contactEmail}));\n            clientToUpdate.commercialTeam.push({contactName:contactName, contactEmail:contactEmail});\n\n            dispatch(updateAClient(clientToUpdate));\n\n            setShowAddContact({state:false, companyId:'', companyName:''});\n            setMessage('');\n        }\n    }\n\n    const deleteContactHandler = (contactEmail, companyId) => {\n        if (window.confirm(`Are you sure to delete contact: ${contactEmail} ?`)) {\n            let clientToUpdate = companies.filter(x => (x._id === companyId))[0];\n            clientToUpdate.commercialTeam = clientToUpdate.commercialTeam.map(x => ({contactName: x.contactName, contactEmail:x.contactEmail}));\n            const newContacts = clientToUpdate.commercialTeam.filter(x => x.contactEmail !== contactEmail);\n            clientToUpdate.commercialTeam = newContacts;\n\n            dispatch(updateAClient(clientToUpdate));\n        }\n\n    }\n\n    return (\n        <DisplayChildren access='manageCompanies'>\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            <DropDownTitleContainer title='Manage companies' close={false}>\n                <ListGroup.Item>\n                    <Row>\n\n                        <Col xs={6} md={4}>\n                            <Button className=\"mb-3\" onClick={() => setShowCreateCompany({state:true})}>\n                                <i className=\"fas fa-plus mr-2\"></i>Add\n                            </Button>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search company'\n                                    value={keyword && keyword}\n                                    onChange={(e) => setKeyword(e.target.value)}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={4}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} companies found` : '0 company found'} />\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x} / page</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    {companies && companies.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                        loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n                            <Table responsive hover striped>\n                                <thead>\n                                    <tr className='table-primary'>\n                                        <th className='align-middle text-light'>Company name</th>\n                                        <th className='align-middle text-light'>Commercial contacts</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {companies && companies.map((company) => (\n                                        <tr key={company._id}>\n                                            <td className='align-middle'>\n                                                <Row><Col>{company.name}</Col></Row>\n                                                <Row><Col>\n                                                    <Button\n                                                        variant='ligth'\n                                                        className=\"m-0 p-1 text-primary\"\n                                                        onClick={() => setShowModifyName({ state: true, companyId: company._id, companyName: company.name })}\n                                                    ><i className=\"fas fa-minus\"></i><i>  modify</i>\n                                                    </Button>\n                                                    <Button\n                                                        variant='ligth'\n                                                        className='m-0 p-1 btn text-danger'\n                                                        onClick={() => onClickDeleteHandler(company)}\n                                                    ><i className=\"fas fa-times\"></i><i>  Delete</i>\n                                                    </Button>\n                                                </Col></Row>\n                                            </td>\n                                            <td className='align-middle'>\n                                                <DisplayContact\n                                                    company={company}\n                                                    setShowAddContact={setShowAddContact}\n                                                    deleteContactHandler={deleteContactHandler}\n                                                />\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n\n                        )}\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(getAllClients(keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n\n            <Modal show={showAddContact.state} onHide={() => setShowAddContact({state:false, companyId:'', companyName:\"\"})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`New contact for: ${showAddContact.companyName}`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={contactName && contactName}\n                                onChange={(e) => setContactName(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Email *</Form.Label>\n                            <Form.Control\n                                type='email'\n                                value={contactEmail && contactEmail}\n                                onChange={(e) => setContactEmail(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button type='submit' variant=\"primary\" onClick={(e) => addContactHandler(e, contactName, contactEmail, showAddContact.companyId)} disabled={!contactEmail || !contactName}>Create</Button>\n                    </Form>\n                    {message && <Message variant='danger'>{message}</Message>}\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowAddContact({state:false, companyId:'', companyName:\"\"})}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showModifyName.state} onHide={() => setShowModifyName({state:false, companyId:'', companyName:\"\"})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`Original name: ${showModifyName.companyName}`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>New company name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={newCompanyName ? newCompanyName : showModifyName.companyName}\n                                onChange={(e) => setNewCompanyName(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button \n                            type='submit' \n                            variant=\"primary\" \n                            onClick={(e) => modifyCompanyNameHandler(e, showModifyName.companyId, newCompanyName)} \n                            disabled={!(newCompanyName && (newCompanyName !== showModifyName.companyName))}>Modify</Button>\n                    </Form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        setShowModifyName({ state: false, companyId: '', companyName: \"\" });\n                        setNewCompanyName('')\n                    }}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showCreateCompany.state} onHide={() => setShowCreateCompany({state:false})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`Create a company:`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>New company name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={newCompanyName ? newCompanyName : showModifyName.companyName}\n                                onChange={(e) => setNewCompanyName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>First contact name</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={contactName ? contactName : ''}\n                                placeholder='Contact name'\n                                onChange={(e) => setContactName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>First contact email</Form.Label>\n                            <Form.Control\n                                type='email'\n                                value={contactEmail ? contactEmail : ''}\n                                placeholder='Contact email'\n                                onChange={(e) => setContactEmail(e.target.value)}\n                            />\n                        </Form.Group>\n                        \n                        <Button \n                            type='submit' \n                            variant=\"primary\" \n                            onClick={(e) => addCompanyHandler(e, newCompanyName, contactName, contactEmail)} \n                            disabled={!(newCompanyName )}>Create</Button>\n                    </Form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        setShowModifyName({ state: false, companyId: '', companyName: \"\" });\n                        setNewCompanyName('')\n                    }}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </DisplayChildren>\n    )\n}\n\nconst DisplayContact = ({ company, setShowAddContact, deleteContactHandler }) => {\n\n    const [contacts] = useState(company.commercialTeam || []);\n\n    return (\n        <div>\n            {contacts.map((contact, incr) => (\n                <Row key={incr}>\n                    <Col>\n                        {`${contact.contactName} (${contact.contactEmail})`}\n                        <Button\n                            variant='ligth'\n                            className='ml-3 px-1 text-danger'\n                            onClick={() => deleteContactHandler(contact.contactEmail, company._id)}\n                        ><i className=\"fas fa-times\"></i></Button>\n                    </Col>\n                </Row>\n            ))}\n            <Row><Col className='text-left'>\n                <Button\n                    className='m-0 p-1 text-primary'\n                    variant='ligth'\n                    onClick={() => setShowAddContact({state:true, companyId:company._id, companyName:company.name})}\n                ><i className=\"fas fa-plus\"></i><i>  add a contact</i></Button>\n            </Col></Row>\n\n        </div>\n    )\n}\n\nexport default ManageCompaniesScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n//import Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport { getContactsList, sendDecisionEmail } from '../actions/emailActions';\nimport Loader from '../components/Loader';\nimport { EMAIL_SEND_DECISION_RESET } from '../constants/emailConstants';\n\nconst EnvoyerMailsScreen = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    const [contactList, setContactList] = useState([]);\n    const [messsagesSendSuccess, setMessagesSendSuccess] = useState(0);\n    const [messsagesSendError, setMessagesSendError] = useState(0);\n    const [totalToSend, setTotalToSend] = useState(0);\n    \n    const [massSending, setMassSending] = useState(false);\n    const [progress, setProgress] = useState(0);\n\n    // const userLogin = useSelector(state => state.userLogin);\n    // const { userInfo } = userLogin;\n\n    const contactsList = useSelector(state => state.contactsList);\n    const { loading, contacts } = contactsList;\n\n    const sendOneEmail = useSelector(state => state.sendOneEmail);\n    const { success, error, email } = sendOneEmail;\n\n    // const sleep = (milliseconds) => {\n    //     const date = Date.now();\n    //     let currentDate = null;\n    //     do {\n    //         currentDate = Date.now();\n    //     } while (currentDate - date < milliseconds);\n    // }\n\n    const handlerSendADecision = (email, name) => {\n        const newContactsInfo = contactList.slice();\n        for (let incr = 0 ; incr < newContactsInfo.length; incr++){\n            if(newContactsInfo[incr].email === email){\n                newContactsInfo[incr].status = 'loading'\n            }\n        }\n        setContactList(newContactsInfo);\n        dispatch(sendDecisionEmail(email, name))\n    }\n\n    const handlerSendAllDecisions = () => {\n        dispatch({ type: EMAIL_SEND_DECISION_RESET });\n        setProgress(0);\n        setMassSending(true);\n    }\n\n    useEffect(() => {\n        dispatch(getContactsList());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (contacts) {\n            setContactList(contacts.map(x => ({ ...x, status: 'not sent' })));\n            setTotalToSend(contacts.length);\n        }\n    }, [contacts]);\n\n    useEffect(() => {\n        if(massSending) {\n            if(contactList[progress].status !== 'send') {\n                //sleep(1000);\n                handlerSendADecision(contactList[progress].email, contactList[progress].name);\n            } else {\n                if(progress < contactList.length - 1){\n                    setProgress(progress+1);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    },[massSending, progress]);\n\n    useEffect(() => {\n        if(success) {\n            const successEmail = email;\n            const newContactsInfo = contactList.slice();\n            for (let incr = 0; incr < newContactsInfo.length; incr++) {\n                if (newContactsInfo[incr].email === successEmail) {\n                    newContactsInfo[incr].status = 'send'\n                }\n            }\n            setContactList(newContactsInfo);\n\n            if (massSending){\n                if (progress < contactList.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassSending(false);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [success]);\n\n    useEffect(() => {\n        if(error) {\n            //console.log('error', error);\n            const errorEmail = error;\n            const newContactsInfo = contactList.slice();\n            for (let incr = 0; incr < newContactsInfo.length; incr++) {\n                if (newContactsInfo[incr].email === errorEmail) {\n                    newContactsInfo[incr].status = 'error';\n                }\n            }\n            setContactList(newContactsInfo);\n\n            if (massSending){\n                if (progress < contactList.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassSending(false);\n                    setProgress(0);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [error]);\n\n    useEffect(() => {\n        setMessagesSendSuccess(contactList.filter(x => x.status === 'send').length);\n        setMessagesSendError(contactList.filter(x => x.status === 'error').length);\n        setTotalToSend(contactList.length);\n    },[contactList, error, success]);\n\n    return (\n        <div>\n            <Meta />\n            {loading && <Loader />}\n            <Button\n                variant='primary'\n                onClick={() => history.go(-1)}\n            >Go Back</Button>\n            <Row className='align-items-center pt-3'>\n                <Col>\n                    {`${messsagesSendSuccess} messages send / ${totalToSend} - ${messsagesSendError} messages with error`}\n                </Col>\n                <Col className='text-right'>\n                    <Button\n                        variant='ligth'\n                        className='text-primary'\n                        onClick={() => handlerSendAllDecisions()}\n                    ><i className=\"fas fa-envelope\"></i> {massSending ? <Loader /> : 'Send all messages'}</Button>\n                </Col>\n            </Row>\n            <Row className='pt-3'>\n                <Col>\n                    <ProgressBar>\n                        <ProgressBar animated={massSending} now={100* messsagesSendSuccess / totalToSend} variant='primary' />\n                        <ProgressBar animated={massSending} now={100* messsagesSendError / totalToSend} variant='danger' />\n                    </ProgressBar>\n                </Col>\n            </Row>\n\n            <Row className='pt-3'>\n                <Col>\n                    <Table responsive hover striped className='mt-3'>\n                        <thead>\n                            <tr className='table-primary'>\n                                <th className='align-middle text-light text-center col-md-5'>Name</th>\n                                <th className='align-middle text-light text-center col-md-5'>Email</th>\n                                <th className='align-middle text-light text-center col-md-2'>status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {contactList && contactList.map((contact, incr) => (\n                                <tr key={incr}>\n                                    <td className='align-middle text-center'>{contact.name ? contact.name : \"Unknown\"}</td>\n                                    <td className='align-middle text-center'>{contact.email}</td>\n                                    <td className='align-middle text-center'>\n                                        <Button\n                                            variant='ligth'\n                                            className={contact.status === 'error' ? 'text-danger' \n                                                        : contact.status === 'send' ? 'text-success'\n                                                        : 'text-primary'}\n                                            size='sm'\n                                            onClick={() => handlerSendADecision(contact.email, contact.name)}\n                                            disabled={contact.status === 'send' || massSending === true}\n                                        ><i className=\"fas fa-envelope\"></i>  \n                                            {contact.status === 'not sent' && '  send'}\n                                            {contact.status === 'loading' && <Loader />}\n                                            {contact.status === 'error' && '  Error send again'}\n                                            {contact.status === 'send' && '  sent'}\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default EnvoyerMailsScreen;\n","import axios from 'axios';\nimport { \n    EMAIL_CONTACTS_LIST_FAIL, \n    EMAIL_CONTACTS_LIST_REQUEST, \n    EMAIL_CONTACTS_LIST_SUCCESS, \n    EMAIL_SEND_DECISION_FAIL, \n    EMAIL_SEND_DECISION_REQUEST, \n    EMAIL_SEND_DECISION_SUCCESS\n} from '../constants/emailConstants';\n\nexport const getContactsList = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: EMAIL_CONTACTS_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/emails/contacts`, config);\n\n        dispatch({ type: EMAIL_CONTACTS_LIST_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: EMAIL_CONTACTS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const sendDecisionEmail = (email, name) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: EMAIL_SEND_DECISION_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                //'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/emails/decision?email=${email}&name=${name}`, config);\n\n        dispatch({ type: EMAIL_SEND_DECISION_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: EMAIL_SEND_DECISION_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport DisplayChildren from '../components/DisplayChildren';\nimport { getAllDeals } from '../actions/dealActions';\nimport SelectInput from '../components/SelectInput';\nimport { getAllCDM, updateDelegateConsultant } from '../actions/consultantActions';\n\n\nconst ProfileScreen = ({ history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n    const [messageUpdate, setMessageUpdate] = useState(null);\n\n    const [delegation, setDelegation] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userUpdateProfil = useSelector((state) => state.userUpdateProfil);\n    const { success: successUpdate, error: errorUpdate } = userUpdateProfil;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { deals } = dealAllList;\n\n    const consultantCDMList = useSelector(state => state.consultantCDMList);\n    const { cdmList } = consultantCDMList;\n\n    const consultantDelegateUpdate = useSelector(state => state.consultantDelegateUpdate);\n    const { loading: loadingDelegate } = consultantDelegateUpdate;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } else {\n            if (!user || !user.name) {\n                dispatch(getUserDetails(userInfo._id));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n            }\n        }\n    }, [dispatch, history, userInfo, user]);\n\n    useEffect(() => {\n        if (successUpdate) {\n            setMessageUpdate({ type: 'success', message: 'Profile updated' });\n        }\n    }, [successUpdate]);\n\n    useEffect(() => {\n        if (errorUpdate) {\n            setMessageUpdate({ type: 'danger', message: 'Profile not updated' });\n        }\n    }, [errorUpdate]);\n\n    useEffect(() => {\n        if (userInfo) {\n            const keyword = {\n                title: '',\n                contact: '',\n                company: '',\n                status: '',\n                request: '',\n                staff: '',\n                filterMy: true\n            }\n            dispatch(getAllDeals(keyword, 1, 1000, 'active'));\n        }\n    }, [dispatch, userInfo]);\n\n    useEffect(() => {\n        if(user) {\n            setDelegation(user.consultantProfil.cdmDelegation.map(x => ({id: x.cdmId, value: x.name})));\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if(!cdmList) {\n            dispatch(getAllCDM(userInfo.consultantProfil.practice))\n        }\n    }, [dispatch, cdmList, userInfo]);\n\n    const submitHandlerDelegation = () => {\n        const delegationToUpdate = delegation.map(x => ({cdmId: x.id, name: x.value}))\n        dispatch(updateDelegateConsultant(user.consultantProfil._id, delegationToUpdate))\n    }\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            setMessage(null); // to reinitialize the message before testing\n            setMessageUpdate(null);\n\n            //const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n            //const lowRegex = new RegExp(\"([a-zA-Z0-9!@#\\$%\\^&\\*]){1,}\");\n            const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n            const lowRegex = new RegExp(\"([a-zA-Z0-9!@#$%^&*]){1,}\");\n            \n            const applyRegex = ['demo', 'poc'].includes(process.env.REACT_APP_ENV) ? strongRegex : lowRegex;\n            //console.log(applyRegex);\n\n            if (!password || !confirmPassword) {\n                setMessage('Please enter a password');\n                return;\n            }\n            if (password.match(applyRegex)) {\n                if (!password || password !== confirmPassword) {\n                    setMessage('Passwords do not match');\n                    return;\n                } else {\n                    dispatch(updateUserProfile({ id: user._id, name, password }));\n                    return;\n                }\n            } else {\n                setMessage(`Please enter strong password: \\n\n                    - must be eight characters or longer \\n\n                    - must contain at least 1 lowercase alphabetical character \\n\n                    - must contain at least 1 uppercase alphabetical character \\n\n                    - must contain at least 1 numeric character \\n\n                    - must contain at least one special character (!@#$%^&*)`)\n                return;\n            }\n        }\n    };\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profil</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {messageUpdate && messageUpdate.type && <Message variant={messageUpdate.type}>{messageUpdate.message}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Adress</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='confirm-password'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button \n                        type='submit' \n                        className='my-3'\n                        variant='primary' \n                        block\n                    >Update Password</Button>\n                    \n                    {userInfo && userInfo.consultantProfil.isCDM && (\n                        <>\n                            <h3>Delegate </h3>\n                            <SelectInput\n                                options={cdmList ? cdmList.map(cdm => ({ value: cdm._id, label: cdm.name })) : []}\n                                value={delegation ? delegation.map(x => ({ value: x.id, label: x.value })) : []}\n                                setValue={setDelegation}\n                                multi={true}\n                            //disabled={!editRequest}\n                            />\n                            <Button\n                                onClick={submitHandlerDelegation}\n                                className='my-3'\n                                variant='primary'\n                                block\n                            >{loadingDelegate ? <Loader /> : 'Update Delegations'}</Button>\n                        </>\n                    )}\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <DisplayChildren access='viewProfilDetails'>\n                    <h2>Follow my Requests</h2>\n                    <Table striped hover responsive className='table-sm mt-3'>\n                        <thead>\n                            <tr className='table-light'>\n                                <th className='align-middle text-center'>Title</th>\n                                <th className='align-middle text-center'>Client</th>\n                                <th className='align-middle text-center'>Contacts</th>\n                                <th className='align-middle text-center'>Practice</th>\n                                <th className='align-middle text-center'>Step</th>\n                                <th className='align-middle text-center'>Request status</th>\n                                <th className='align-middle text-center'>Starting date</th>\n                                <th className='align-middle text-center'>Staffing</th>\n                                <th className='align-middle text-center'>Details</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {deals && deals.map( deal => (\n                                <tr key={deal._id}>\n                                    <td className='align-middle text-center'>{deal.title}</td>\n                                    <td className='align-middle text-center'>{deal.company}</td>\n                                    <td className='align-middle text-center'>{`${deal.contacts && deal.contacts.primary && deal.contacts.primary.name} \\n(${deal.contacts && deal.contacts.secondary && deal.contacts.secondary.map(c => c.name).join(', ')})`}</td>\n                                    <td className='align-middle text-center'>{`${deal.mainPractice} \\n(${deal.othersPractices && deal.othersPractices.join(', ')})`}</td>\n                                    <td className='align-middle text-center'>{deal.status}</td>\n                                    <td className='align-middle text-center'>{deal.staffingRequest && deal.staffingRequest.requestStatus}</td>\n                                    <td className='align-middle text-center'>{deal.startDate.substring(0,10)}</td>\n                                    <td className='align-middle text-center'>{deal.staffingDecision && deal.staffingDecision.staff && deal.staffingDecision.staff.map( s => `${s.idConsultant.name} - ${s.responsability} - ${s.priority}`).join(',\\n')}</td>\n                                    <td className='align-middle text-center'>\n                                        <Button\n                                            variant='ligth'\n                                            style={{ color: 'gray' }}\n                                            onClick={() => history.push(`/staffing/${deal._id}`)}\n                                            size='md'\n                                        ><i className=\"fas fa-edit\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    \n                </DisplayChildren>\n            </Col>\n\n        </Row>\n    );\n};\n\nexport default ProfileScreen;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getTransparentNewToken, logout } from '../actions/userActions';\n\nconst TokenIsValide = ({ history, children }) => {\n\n    const dispatch = useDispatch();\n    const [grantedAccess, setGrantedAccess] = useState(true);\n    //let grantedAccess = true;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (!userInfo) {\n            //grantedAccess = false;\n            history.push('/login');\n            setGrantedAccess(false);\n        }\n    }, [userInfo, history]);\n\n    useEffect(() => {\n        if (userInfo && userInfo.lastConnexion && children) {\n            //grantedAccess = false;\n            setGrantedAccess(true);\n        }\n    }, [userInfo, dispatch, children]);\n\n    // to avoid errors with migration\n    useEffect(() => {\n        if (userInfo && !userInfo.lastConnexion) {\n            //grantedAccess = false;\n            setGrantedAccess(false);\n            dispatch(logout());\n            history.push('/login');\n        }\n    }, [userInfo, dispatch, history]);\n\n    useEffect(() => {\n        // get new Token if close to end of current token\n        if (userInfo && userInfo.accountType === 'LOCAL') {\n            const currentTime = new Date(Date.now());\n            const delay = (currentTime - new Date(userInfo.lastConnexion))/(1000 * 24 * 3600);\n            if (delay > 0.7 && delay < 1) {\n                //grantedAccess = false;\n                setGrantedAccess(false);\n                dispatch(getTransparentNewToken({email: userInfo.email, delay: delay}, userInfo));\n            }\n        }\n    }, [dispatch, userInfo]);\n\n    useEffect(() => {\n        // logout user if token not valide\n        if (userInfo && userInfo.accountType === 'LOCAL') {\n            const currentTime = new Date(Date.now());\n            const delay = (currentTime - new Date(userInfo.lastConnexion))/(1000 * 24 * 3600);\n            if (delay >= 1) {\n                setGrantedAccess(false);\n                dispatch(logout());\n                history.push('/login');\n            }\n        }\n    }, [dispatch, userInfo, history]);\n    \n    return (\n        <span>\n            {grantedAccess && userInfo && children && children}\n        </span>\n    )\n}\n\nexport default TokenIsValide;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nconst PageSize = ({ pageSize, setPageSize }) => {\n    return (\n\n        <Col>\n            <InputGroup>\n                <FormControl\n                    as='select'\n                    id='number-c'\n                    className=\"mb-3\"\n                    value={pageSize && pageSize}\n                    onChange={(e) => setPageSize(e.target.value)}\n                >\n                    <option value='all'>All data</option>\n                    {[5, 10, 15, 20, 50].map(x => (\n                        <option\n                            key={x}\n                            value={x}\n                        >{x} / page</option>\n                    ))}\n                </FormControl>\n            </InputGroup>\n        </Col>\n\n    )\n}\n\nexport default PageSize;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst PaginateComponent = ({ userInfo, keyword, page, pages, pageSize, setPageNumber, action }) => {\n\n    const dispatch = useDispatch();\n\n    return (\n        <Pagination>\n            <Pagination.Prev\n                onClick={() => setPageNumber(page - 1)}\n                disabled={page === 1}\n            />\n            {[...Array(pages).keys()].map(x => (\n                [0, 1, pages - 2, pages - 1].includes(x) ? (\n                    <Pagination.Item\n                        key={x + 1}\n                        active={x + 1 === page}\n                        onClick={() => {\n                            dispatch(action({\n                                practice: userInfo.consultantProfil.practice,\n                                keyword: keyword,\n                                pageNumber: x+1,\n                                pageSize: pageSize,\n                            }));\n                            setPageNumber(x + 1);\n                        }}\n                    >{x + 1}</Pagination.Item>\n                ) : (pages > 4 && x === 2) && (\n                    <Pagination.Ellipsis key={x + 1} />\n                )\n            ))}\n            <Pagination.Next\n                onClick={() => setPageNumber(page + 1)}\n                disabled={page === pages}\n            />\n        </Pagination>\n    )\n}\n\nexport default PaginateComponent;\n","import React, { useEffect, useState } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Table from 'react-bootstrap/Table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport { createUser, getUsersToCreate } from '../actions/userActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport PageSize from '../components/PageSize';\nimport PaginateComponent from '../components/PaginateComponent';\nimport { USER_CREATE_RESET } from '../constants/userConstants';\n\nconst AddUsersScreen = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState({consultantName:'', cdmName:''});\n\n    const [allCheck, setAllCheck] = useState(false);\n\n    const [consultantToCreateList, setConsultantToCreateList] = useState([]);\n\n    const [sendProcess, setSendProcess] = useState(false);\n    const [countSend, setCountSend] = useState(0);\n    const [waitSend, setWaitSend] = useState(true);\n    const [noAction, setNoAction] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userToCreate = useSelector(state => state.userToCreate);\n    const { usersListToCreate, pages, page, count, loading, error } = userToCreate;\n\n    const userCreate = useSelector(state => state.userCreate);\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, consultantId } = userCreate;\n\n    useEffect(() => {\n        dispatch(getUsersToCreate({\n            practice: userInfo.consultantProfil.practice,\n            keyword: keyword,\n            pageNumber: pageNumber,\n            pageSize: pageSize,\n        }));\n    }, [dispatch, keyword, userInfo.consultantProfil.practice, pageNumber, pageSize]);\n\n    // copie data to be able to add processus informations\n    useEffect(() => {\n        if (usersListToCreate) {\n            const newList = usersListToCreate.map(consultant => ({ ...consultant, send: allCheck ? 'checked' : 'no' }));\n            setConsultantToCreateList(newList);\n        }\n    // eslint-disable-next-line\n    }, [usersListToCreate]);\n\n    const onCheck = (oldStatus) => {\n        //let newStatus = 'no';\n        switch (oldStatus) {\n            case 'no':\n                return 'checked';\n            case 'ckecked':\n                return 'checked';\n            case 'yes':\n                return 'yes';\n            case 'error':\n                return 'checked';\n            default:\n                return 'no';\n        }\n    };\n\n    const onUnCheck = (oldStatus) => {\n        switch (oldStatus) {\n            case 'no':\n                return 'no';\n            case 'ckecked':\n                return 'no';\n            case 'yes':\n                return 'yes';\n            case 'error':\n                return 'no';\n            default:\n                return 'no';\n        }\n    };\n\n    const onChangeHandler = (consultant, state) => {\n        let newList\n        if (state === true) {\n            newList = consultantToCreateList.slice();\n            const oldStatus = newList.filter(x => x._id === consultant._id)[0].send;\n            const newStatus = onCheck(oldStatus);\n            newList.filter(x => x._id === consultant._id)[0].send = newStatus;\n            setConsultantToCreateList(newList);\n        }\n        if (state === false) {\n            newList = consultantToCreateList.slice();\n            const oldStatus = newList.filter(x => x._id === consultant._id)[0].send;\n            let newStatus = onUnCheck(oldStatus);\n            newList.filter(x => x._id === consultant._id)[0].send = newStatus;\n            setConsultantToCreateList(newList);\n        }\n    };\n\n    useEffect(() => {\n        let newList\n        if (allCheck) {\n            newList = consultantToCreateList.map(consultant => ({...consultant, send:onCheck(consultant.send)}));\n        } else {\n            newList = consultantToCreateList.map(consultant => ({...consultant, send:onUnCheck(consultant.send)}));\n        }\n        setConsultantToCreateList(newList);\n    // eslint-disable-next-line\n    }, [allCheck]);\n\n    // useEffect(() => {\n    //     console.log('consultantToCreate', consultantToCreateList.map(x => x.send));\n    // }, [consultantToCreateList]);\n\n\n    useEffect(() => {\n        if(sendProcess && !waitSend) {\n            // console.log('countSend', countSend, ' / total', consultantToCreateList.length);\n            if (countSend < consultantToCreateList.length) {\n                const userToCreate = consultantToCreateList[countSend];\n                if (userToCreate.send === 'checked') {\n                    dispatch(createUser(userToCreate));\n                } else {\n                    setNoAction(true);\n                }\n                setWaitSend(true);\n            } else {\n                setSendProcess(false);\n                setCountSend(0);\n                setWaitSend(true);\n            }\n        }\n    // eslint-disable-next-line\n    }, [dispatch, sendProcess, countSend, waitSend]);\n\n    useEffect(() => {\n        if(successCreate && waitSend && sendProcess) {\n            let newList = consultantToCreateList.slice();\n            newList.filter(x => x._id === consultantId)[0].send = 'yes';\n            setConsultantToCreateList(newList);\n            setCountSend(countSend+1);\n            setWaitSend(false);\n        }\n        if (errorCreate && waitSend && sendProcess) {\n            let newList = consultantToCreateList.slice();\n            newList.filter(x => x._id === consultantId)[0].send = 'error';\n            setConsultantToCreateList(newList);\n            setCountSend(countSend+1);\n            setWaitSend(false);\n        }\n    // eslint-disable-next-line\n    }, [successCreate, errorCreate, waitSend]);\n\n    useEffect(() => {\n        if(noAction && waitSend) {\n            setCountSend(countSend+1);\n            setWaitSend(false);\n            setNoAction(false);\n        }\n    // eslint-disable-next-line\n    }, [noAction, waitSend]);\n\n    const verifyStatus = (consultant) => {\n        if (consultantToCreateList.map(x => x._id).includes(consultant._id)) {\n            if(consultantToCreateList.filter( x => x._id === consultant._id)[0].send === 'no') {\n                return (\n                    <div className='text-secondary'><i className=\"fas fa-circle text-secondary\"></i>  not created</div>\n                );\n            }\n            if(consultantToCreateList.filter( x => x._id === consultant._id)[0].send === 'checked') {\n                return (\n                    <div className='text-warning'><i className=\"fas fa-circle text-warning\"></i>  to create</div>\n                );\n            }\n            if (consultantToCreateList.filter( x => x._id === consultant._id)[0].send === 'yes') {\n                return (\n                    <div className='text-success'><i className=\"fas fa-circle text-success\"></i>  created</div>\n                );\n            }\n            if (consultantToCreateList.filter( x => x._id === consultant._id)[0].send === 'error') {\n                return (\n                    <div className='text-danger'><i className=\"fas fa-circle text-danger\"></i>  error</div>\n                );\n            }\n        } else {\n            return (<div className='text-secondary'><i className=\"fas fa-circle text-secondary\"></i>  undefined</div>);\n        }\n    }\n\n    const onCreateUserHandler = () => {\n\n        dispatch({type: USER_CREATE_RESET});\n        setCountSend(0);\n        setSendProcess(true);\n        setWaitSend(false);\n    }\n\n    return (\n        <div>\n            <Row><Col className='text-left'>\n                <Button className='mb-3' onClick={() => history.go(-1)}>\n                    Go Back\n                </Button>\n            </Col></Row>\n\n            <DropDownTitleContainer title='Not created users' close={false}>\n                <ListGroup.Item>\n                    <Row>\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='consultant name'\n                                    value={keyword && keyword.consultantName}\n                                    onChange={(e) => setKeyword({...keyword, consultantName: e.target.value})}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='cdm name'\n                                    value={keyword && keyword.cdmName}\n                                    onChange={(e) => setKeyword({...keyword, cdmName: e.target.value})}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} consultants found` : '0 consultant found'} />\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <PageSize pageSize={pageSize} setPageSize={setPageSize} />\n                        </Col>\n                    </Row>\n\n                    {error && <Row><Col><Message variant='danger'>{error}</Message></Col></Row>}\n                    {loading ? (<Row><Col><Loader /></Col></Row>) : (\n                        <Table responsive hover striped>\n                            <thead>\n                                <tr className='table-primary'>\n                                    <th className='align-middle text-light'>\n                                        {<Form.Check \n                                            type=\"checkbox\" \n                                            checked={allCheck} \n                                            onChange={() => setAllCheck(!allCheck)} \n                                            disabled={sendProcess}\n                                        />}\n                                    </th>\n                                    <th className='align-middle text-light'>Consultant name</th>\n                                    <th className='align-middle text-light'>Matricule</th>\n                                    <th className='align-middle text-light text-center'>Practice</th>\n                                    <th className='align-middle text-light text-center'>CDM</th>\n                                    <th className='align-middle text-light'>Email</th>\n                                    <th className='align-middle text-light text-center'>Arrival</th>\n                                    <th className='align-middle text-light text-center'>Leaving</th>\n                                    <th className='align-middle text-light text-center'>is CDM?</th>\n                                    <th className='align-middle text-light text-center'>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {usersListToCreate && usersListToCreate.map((consultant, val) => (\n                                    <tr key={val}>\n                                        <td className='align-middle'>\n                                            <CheckComponent \n                                                consultant={consultant} \n                                                allCheck={allCheck} \n                                                setStatus={onChangeHandler} \n                                                sendProcess={sendProcess}\n                                            />\n                                        </td>\n                                        <td className='align-middle'>{consultant.name}</td>\n                                        <td className='align-middle'>{consultant.matricule}</td>\n                                        <td className='align-middle text-center'>{consultant.practice}</td>\n                                        <td className='align-middle text-center'>{consultant.cdmId.name ? consultant.cdmId.name : 'unknown'}</td>\n                                        <td className='align-middle'>{consultant.email}</td>\n                                        <td className='align-middle text-center'>{consultant.arrival && consultant.arrival.substring(0, 10)}</td>\n                                        <td className='align-middle text-center'>{consultant.leaving && consultant.leaving.substring(0, 10)}</td>\n                                        <td className={`align-middle text-center ${consultant.isCDM ? 'text-success' : 'text-warning'}`}>{consultant.isCDM ? \"Yes\" : \"No\"}</td>\n                                        <td className='align-middle text-center'>{\n                                            consultant._id === consultantId && sendProcess ? \n                                                <Loader /> \n                                                : verifyStatus(consultant)\n                                        }</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n\n                    <Row>\n                        <Col xs={8}>\n                            <PaginateComponent\n                                userInfo={userInfo && userInfo}\n                                keyword={keyword}\n                                page={page}\n                                pages={pages}\n                                pageSize={pageSize}\n                                setPageNumber={setPageNumber}\n                                action={getUsersToCreate}\n                            />\n                        </Col>\n                        <Col xs={4} className='text-right'>\n                            {loadingCreate ? <Loader /> : (\n                                <Button\n                                    onClick={() => onCreateUserHandler()}\n                                ><i className=\"far fa-user-circle\"></i>  Create account</Button>\n                            )}\n                        </Col>\n                    </Row>\n\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n\n        </div>\n    )\n};\n\nconst CheckComponent = ({ consultant, allCheck, setStatus, sendProcess }) => {\n\n    const [checked, setChecked] = useState(allCheck);\n\n    useEffect(() => {\n        setChecked(allCheck);\n    }, [allCheck]);\n\n    // useEffect(() => {\n    //     setStatus(consultant, checked);\n    // }, [checked, consultant, setStatus]);\n\n    const checkChangeHandler = () => {\n        setStatus(consultant, !checked);\n        setChecked(!checked);\n    }\n\n    return (\n        <Form.Check\n            type=\"checkbox\"\n            checked={checked}\n            //onChange={() => setChecked(!checked)}\n            onChange={() => checkChangeHandler()}\n            disabled={sendProcess}\n        />\n    );\n}\n\nexport default AddUsersScreen;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport LoginScreen from './screens/LoginScreen';\nimport PxxEditScreen from './screens/PxxEditScreen';\nimport ConsultantEditScreen from './screens/ConsultantEditScreen';\nimport ManageConsultantScreen from './screens/ManageConsultantScreen';\nimport ManageUsersScreen from './screens/ManageUsersScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport StaffingEditScreen from './screens/StaffingEditScreen';\nimport ManageSkillsScreen from './screens/ManageSkillsScreen';\nimport PxxDetailsScreen from './screens/PxxDetailsScreen';\nimport ManageDealsScreen from './screens/ManageDealsScreen';\nimport DealsHistoryScreen from './screens/DealsHistoryScreen';\nimport AccessEditScreen from './screens/AccessEditScreen';\nimport ManageCompaniesScreen from './screens/ManageCompaniesScreen';\nimport EnvoyerMailsScreen from './screens/EnvoyerMailsScreen';\n\nimport ProfileScreen from './screens/ProfileScreen';\nimport TokenIsValide from './components/TokenIsValide';\n\nimport history from './components/History';\nimport AddUsersScreen from './screens/AddUsersScreen';\n\nconst App = () => {\n\n  return (\n    <Router history={history}>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} exact />\n          <Route path='/register' component={RegisterScreen} exact />\n          \n          <TokenIsValide history={history}>\n            <Route path='/profile' component={ProfileScreen} exact />\n            <Route path='/staffing' component={StaffingEditScreen} exact />\n            <Route path='/staffing/:id' component={StaffingEditScreen} exact />\n            <Route path='/pxx' component={PxxEditScreen} exact />\n            <Route path='/pxx/:id' component={PxxEditScreen} exact />\n            <Route path='/pxxdetails/:id' component={PxxDetailsScreen} exact />\n            <Route path='/editconsultant/:id' component={ConsultantEditScreen} exact />\n            <Route path='/admin/consultants' component={ManageConsultantScreen} exact />\n            <Route path='/admin/consultants/:keyword/page/:pageNumber' component={DashboardScreen} exact />\n            <Route path='/admin/users' component={ManageUsersScreen} exact />\n            <Route path='/admin/add-users' component={AddUsersScreen} exact />\n            <Route path='/admin/edituser/:id' component={UserEditScreen} exact />\n            <Route path='/admin/consultant/add' component={ConsultantEditScreen} exact />\n            <Route path='/admin/skills' component={ManageSkillsScreen} exact />\n            <Route path='/admin/deals' component={ManageDealsScreen} exact />\n            <Route path='/admin/deals/history' component={DealsHistoryScreen} exact />\n            <Route path='/admin/profils' component={AccessEditScreen} exact />\n            <Route path='/admin/companies' component={ManageCompaniesScreen} exact />\n            <Route path='/admin/send' component={EnvoyerMailsScreen} exact />\n            <Route path='/' component={DashboardScreen} exact />\n          </TokenIsValide>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}
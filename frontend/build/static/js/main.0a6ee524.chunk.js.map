{"version":3,"sources":["constants/pxxConstants.js","constants/userConstants.js","constants/consultantConstants.js","constants/skillsConstants.js","constants/dealConstants.js","constants/accessConstants.js","constants/clientConstants.js","constants/taceConstants.js","constants/emailConstants.js","store.js","reducers/userReducers.js","reducers/consultantReducers.js","reducers/pxxReducers.js","reducers/skillReducers.js","reducers/dealReducer.js","reducers/accessReducers.js","reducers/clientReducers.js","reducers/taceReducer.js","reducers/emailReducers.js","actions/userActions.js","components/DisplayChildren.js","components/Header.js","components/Footer.js","components/Message.js","components/Loader.js","components/FormContainer.js","screens/LoginScreen.js","actions/pxxActions.js","components/PxxUserLine.js","components/PxxEditor.js","components/DropDownTitleContainer.js","actions/consultantActions.js","components/ConsultantsTab.js","components/Meta.js","components/ViewStaffs.js","actions/dealActions.js","components/ViewOldStaffs.js","components/Rating.js","components/SkillsDetails.js","screens/PxxEditScreen.js","screens/ConsultantEditScreen.js","components/ImportExcelFile.js","components/FlowImportWKConsultants.js","screens/ManageConsultantScreen.js","screens/ManageUsersScreen.js","actions/accessActions.js","screens/UserEditScreen.js","screens/RegisterScreen.js","components/StaffAConsultant.js","components/SelectInput.js","actions/skillActions.js","components/ConsoDispo.js","components/Tace.js","actions/taceActions.js","screens/DashboardScreen.js","actions/clientActions.js","components/SelectCompany.js","screens/StaffingEditScreen.js","screens/ManageSkillsScreen.js","components/FlowImportPxx.js","screens/PxxDetailsScreen.js","components/DealList.js","screens/ManageDealsScreen.js","screens/DealsHistoryScreen.js","screens/AccessEditScreen.js","screens/ManageCompaniesScreen.js","screens/EnvoyerMailsScreen.js","actions/emailActions.js","screens/ProfileScreen.js","components/TokenIsValide.js","components/History.js","App.js","serviceWorker.js","index.js"],"names":["PXX_MY_TO_EDIT_REQUEST","PXX_MY_TO_EDIT_SUCCESS","PXX_MY_TO_EDIT_FAIL","PXX_MY_TO_EDIT_RESET","PXX_UPDATE_REQUEST","PXX_UPDATE_SUCCESS","PXX_UPDATE_FAIL","PXX_UPDATE_RESET","PXX_LIST_REQUEST","PXX_LIST_SUCCESS","PXX_LIST_FAIL","PXX_LIST_RESET","PXX_TACE_REQUEST","PXX_TACE_SUCCESS","PXX_TACE_FAIL","PXX_TACE_RESET","PXX_AVAILABILITIES_REQUEST","PXX_AVAILABILITIES_SUCCESS","PXX_AVAILABILITIES_FAIL","PXX_AVAILABILITIES_RESET","PXX_ALL_REQUEST","PXX_ALL_SUCCESS","PXX_ALL_FAIL","PXX_ALL_RESET","PXX_IMPORT_LINE_REQUEST","PXX_IMPORT_LINE_SUCCESS","PXX_IMPORT_LINE_FAIL","PXX_IMPORT_LINE_RESET","PXX_UPLOAD_FILE_REQUEST","PXX_UPLOAD_FILE_SUCCESS","PXX_UPLOAD_FILE_FAIL","PXX_UPLOAD_FILE_RESET","PXX_UPDATE_PXX_REQUEST","PXX_UPDATE_PXX_SUCCESS","PXX_UPDATE_PXX_FAIL","PXX_UPDATE_PXX_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REDIRECT_AZ_REQUEST","USER_REDIRECT_AZ_SUCCESS","USER_REDIRECT_AZ_FAIL","USER_REDIRECT_AZ_RESET","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_STATUS","CONSULTANTS_MY_DETAILS_REQUEST","CONSULTANTS_MY_DETAILS_SUCCESS","CONSULTANTS_MY_DETAILS_FAIL","CONSULTANTS_MY_DETAILS_FOCUS","CONSULTANTS_MY_DETAILS_RESET","CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST","CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS","CONSULTANTS_ALL_ADMIN_DETAILS_FAIL","CONSULTANTS_ALL_ADMIN_DETAILS_RESET","CONSULTANTS_ALL_LEADERS_REQUEST","CONSULTANTS_ALL_LEADERS_SUCCESS","CONSULTANTS_ALL_LEADERS_FAIL","CONSULTANTS_ALL_LEADERS_RESET","CONSULTANT_MY_REQUEST","CONSULTANT_MY_SUCCESS","CONSULTANT_MY_FAIL","CONSULTANT_MY_RESET","CONSULTANT_DELEGATE_UPDATE_REQUEST","CONSULTANT_DELEGATE_UPDATE_SUCCESS","CONSULTANT_DELEGATE_UPDATE_FAIL","CONSULTANT_DELEGATE_UPDATE_RESET","CONSULTANT_MY_UPDATE_REQUEST","CONSULTANT_MY_UPDATE_SUCCESS","CONSULTANT_MY_UPDATE_FAIL","CONSULTANT_MY_UPDATE_RESET","CONSULTANT_CREATE_REQUEST","CONSULTANT_CREATE_SUCCESS","CONSULTANT_CREATE_FAIL","CONSULTANT_CREATE_RESET","CONSULTANT_DELETE_REQUEST","CONSULTANT_DELETE_SUCCESS","CONSULTANT_DELETE_FAIL","CONSULTANT_DELETE_RESET","CONSULTANT_CDM_LIST_REQUEST","CONSULTANT_CDM_LIST_SUCCESS","CONSULTANT_CDM_LIST_FAIL","CONSULTANT_CDM_LIST_RESET","CONSULTANT_PRACTICE_LIST_REQUEST","CONSULTANT_PRACTICE_LIST_SUCCESS","CONSULTANT_PRACTICE_LIST_FAIL","CONSULTANT_PRACTICE_LIST_RESET","CONSULTANT_UPDATE_COMMENT_REQUEST","CONSULTANT_UPDATE_COMMENT_SUCCESS","CONSULTANT_UPDATE_COMMENT_FAIL","CONSULTANT_UPDATE_COMMENT_RESET","CONSULTANT_CDM_REQUEST","CONSULTANT_CDM_SUCCESS","CONSULTANT_CDM_FAIL","CONSULTANT_CDM_RESET","CONSULTANT_SKILLS_REQUEST","CONSULTANT_SKILLS_SUCCESS","CONSULTANT_SKILLS_FAIL","CONSULTANT_SKILLS_RESET","CONSULTANT_ALL_SKILLS_REQUEST","CONSULTANT_ALL_SKILLS_SUCCESS","CONSULTANT_ALL_SKILLS_FAIL","CONSULTANT_ALL_SKILLS_RESET","CONSULTANT_ALL_STAFF_REQUEST","CONSULTANT_ALL_STAFF_SUCCESS","CONSULTANT_ALL_STAFF_FAIL","CONSULTANT_ALL_STAFF_RESET","CONSULTANT_ADD_SKILL_REQUEST","CONSULTANT_ADD_SKILL_SUCCESS","CONSULTANT_ADD_SKILL_FAIL","CONSULTANT_ADD_SKILL_RESET","CONSULTANT_DELETE_SKILL_REQUEST","CONSULTANT_DELETE_SKILL_SUCCESS","CONSULTANT_DELETE_SKILL_FAIL","CONSULTANT_DELETE_SKILL_RESET","CONSULTANT_UPDATE_SKILL_REQUEST","CONSULTANT_UPDATE_SKILL_SUCCESS","CONSULTANT_UPDATE_SKILL_FAIL","CONSULTANT_UPDATE_SKILL_RESET","CONSULTANT_MASS_IMPORT_REQUEST","CONSULTANT_MASS_IMPORT_SUCCESS","CONSULTANT_MASS_IMPORT_FAIL","CONSULTANT_MASS_IMPORT_RESET","CONSULTANT_UPLOAD_WK_REQUEST","CONSULTANT_UPLOAD_WK_SUCCESS","CONSULTANT_UPLOAD_WK_FAIL","CONSULTANT_UPLOAD_WK_RESET","CONSULTANT_UPDATE_WK_REQUEST","CONSULTANT_UPDATE_WK_SUCCESS","CONSULTANT_UPDATE_WK_FAIL","CONSULTANT_UPDATE_WK_RESET","CONSULTANT_GRADE","SKILL_LIST_REQUEST","SKILL_LIST_SUCCESS","SKILL_LIST_FAIL","SKILL_LIST_RESET","SKILL_DELETE_REQUEST","SKILL_DELETE_SUCCESS","SKILL_DELETE_FAIL","SKILL_DELETE_RESET","SKILL_CREATE_REQUEST","SKILL_CREATE_SUCCESS","SKILL_CREATE_FAIL","SKILL_CREATE_RESET","DEAL_CREATE_REQUEST","DEAL_CREATE_SUCCESS","DEAL_CREATE_FAIL","DEAL_CREATE_RESET","DEAL_UPDATE_REQUEST","DEAL_UPDATE_SUCCESS","DEAL_UPDATE_FAIL","DEAL_UPDATE_RESET","DEAL_ALL_LIST_REQUEST","DEAL_ALL_LIST_SUCCESS","DEAL_ALL_LIST_FAIL","DEAL_ALL_LIST_RESET","DEAL_DELETE_REQUEST","DEAL_DELETE_SUCCESS","DEAL_DELETE_FAIL","DEAL_DELETE_RESET","DEAL_EDIT_REQUEST","DEAL_EDIT_SUCCESS","DEAL_EDIT_FAIL","DEAL_EDIT_RESET","DEAL_OLD_REQUEST","DEAL_OLD_SUCCESS","DEAL_OLD_FAIL","DEAL_OLD_RESET","DEAL_MASS_IMPORT_REQUEST","DEAL_MASS_IMPORT_SUCCESS","DEAL_MASS_IMPORT_FAIL","DEAL_MASS_IMPORT_RESET","REQUEST_STATUS","name","staff","priority","TYPE_BUSINESS","DEAL_STATUS","display","DEAL_PROBABILITY","ACCESS_LIST_REQUEST","ACCESS_LIST_SUCCESS","ACCESS_LIST_FAIL","ACCESS_LIST_RESET","ACCESS_UPDATE_FRONTACCESS_REQUEST","ACCESS_UPDATE_FRONTACCESS_SUCCESS","ACCESS_UPDATE_FRONTACCESS_FAIL","ACCESS_UPDATE_FRONTACCESS_RESET","ACCESS_MODES","ACCESS_DATAS","CLIENT_ALL_REQUEST","CLIENT_ALL_SUCCESS","CLIENT_ALL_FAIL","CLIENT_ALL_RESET","CLIENT_CREATE_REQUEST","CLIENT_CREATE_SUCCESS","CLIENT_CREATE_FAIL","CLIENT_CREATE_RESET","CLIENT_UPDATE_REQUEST","CLIENT_UPDATE_SUCCESS","CLIENT_UPDATE_FAIL","CLIENT_UPDATE_RESET","CLIENT_DELETE_REQUEST","CLIENT_DELETE_SUCCESS","CLIENT_DELETE_FAIL","CLIENT_DELETE_RESET","TACE_CREATE_REQUEST","TACE_CREATE_SUCCESS","TACE_CREATE_FAIL","TACE_CREATE_RESET","EMAIL_CONTACTS_LIST_REQUEST","EMAIL_CONTACTS_LIST_SUCCESS","EMAIL_CONTACTS_LIST_FAIL","EMAIL_CONTACTS_LIST_RESET","EMAIL_SEND_DECISION_REQUEST","EMAIL_SEND_DECISION_SUCCESS","EMAIL_SEND_DECISION_FAIL","EMAIL_SEND_DECISION_RESET","reducer","combineReducers","userRegister","state","action","type","loading","userInfo","payload","error","userLogin","userRedirectAz","redirectURL","userList","users","pages","page","count","userDetails","user","userUpdate","success","userDelete","userUpdateProfil","consultantUpdateComment","consultantsMyAdminList","consultantsMyAdmin","consultants","consultantsMyList","focus","consultantsMy","consultantMy","consultant","consultantMyUpdate","consultantCreate","consultantCreated","consultantDelete","consultantCDMList","cdmList","consultantDelegateUpdate","consultantPracticeList","practiceList","consultantSkills","skills","consultantAllSkills","consultantAllStaffs","staffings","consultantAddSkill","consultantDeleteSkill","consultantUpdateSkill","consultantGetCdm","cdm","consultantsAllLeaders","leaderslist","consultantsMassImport","consultantUploadWk","path","consultantUpdateWk","message","pxxList","pxxs","pxxMonthInformation","pxxUserList","pxxAllList","pxxMyToEdit","pxx","pxxUpdate","pxxTACE","tace","pxxAvailabilities","availabilities","updatePxx","pxxImportLine","updatedLine","pxxUploadFile","skillList","skillDelete","skillCreate","dealCreate","createId","dealAllList","deals","dealDelete","dealEdit","deal","dealUpdate","dealOld","oldDeals","dealsImportMass","datas","accessList","access","accessFrontUpdate","clientAll","clients","clientCreate","clientUpdate","clientDelete","createTace","taceData","contactsList","contacts","sendOneEmail","email","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","login","param","dispatch","a","config","headers","data","axios","post","password","get","code","accountType","setItem","stringify","response","logout","clear","getUserDetails","id","getState","Authorization","token","listUsers","practice","keyword","pageNumber","pageSize","DisplayChildren","children","useSelector","grantedAccess","rule","profil","frontAccess","filter","x","length","mode","Header","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","fixed","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Item","Divider","onClick","Footer","Row","Col","Message","Alert","defaultProps","Loader","Spinner","animation","role","stype","width","height","margin","FormContainer","xs","md","LoginScreen","location","history","useState","setEmail","setPassword","setMessage","redirect","search","split","useEffect","status","push","window","href","Form","onSubmit","e","currentTarget","checkValidity","preventDefault","Group","controlId","Label","Control","placeholder","value","onChange","target","toLocaleLowerCase","Button","block","disabled","process","getAvailabilities","start","end","experienceStart","experienceEnd","searchMode","searchExperience","toString","getAllPxx","month","keywork","PxxUserLine","Number","prodDay","prodDayComponent","setProdDayComponent","notProdDay","notProdDayComponent","setNotProdDayComponent","leavingDay","leavingDayComponent","setLeavingDayComponent","availableDay","availableDayComponent","setAvailableDayComponent","workingDay","hasChange","setHasChange","firstDayOfCurrentMonth","Date","now","setDate","toISOString","substring","editable","firstDay","_id","put","InputGroup","FormControl","min","max","step","match","PxxEditor","consultantFocus","searchDate","navigationMonthHandler","numberOfMonth","loadingPxx","errorPxx","loadingUpdate","errorUpdate","consultantId","setUTCDate","getMyConsultantPxxToEdit","ListGroup","size","style","map","line","key","DropDownTitleContainer","close","hide","setHide","setConsultantFocus","getMyConsultant","updateMyConsultant","Error","getAllCDM","getAllPractice","getAllMyAdminConsultants","getConsultantSkills","quality","getAllConsultantSkills","ConsultantsTab","focusActive","Table","responsive","hover","striped","matricule","valued","arrival","leaving","comment","onClickHandler","Meta","Helmet","ViewStaffs","displayedDeal","onNavigate","getAllStaffs","company","mainPractice","probability","startDate","requestStatus","updateDeal","dealId","getAllDeals","contact","request","filterMy","ViewOldStaffs","getOldDeals","staffingRequest","Rating","setValue","text","color","valueList","Array","Math","floor","fill","val","SkillDisplayLine","skill","setUpdate","successConsultantUpdateSkill","successConsultantDeleteSkill","level","setLevel","waitingValidationLevel","setWaitingValidationLevel","handlerDeleteConsultantSkill","skillId","delete","plaintext","readOnly","newLevel","consultantUpdateASkillLevel","SkillsDetails","skillCategory","setSkillCategory","setSkillId","skillLevel","setSkillLevel","skillCategoryList","setSkillCategoryList","qualityOrdonned","setQualityOrdonned","update","skillsAll","loadingConsultantAddSkill","successConsultantAddSkill","errorConsultantAddSkill","ordonnedSkills","orderSkills","categoryList","category","Set","incr","handleAddSkill","consultantAddASkill","as","required","OverlayTrigger","placement","overlay","Tooltip","description","PxxEditScreen","commentText","setCommentText","trObjectives","setTrObjectives","myObjectives","setMyObjectives","delegateOption","setDelegationOption","loadingConsultantsMyList","errorConsultantsMyList","setSearchDate","option","getAllMyConsultants","personalObjectives","talentReviewObjectives","navigationConsultantHandler","updateCommentHandler","updateComment","consultantProfil","htmlFor","rows","navigationDate","setMonth","getMonth","Check","label","checked","ConsultantEditScreen","setName","setMatricule","setPractice","grade","setGrade","setCdm","setArrival","setValued","setLeaving","seniority","setSeniority","isCDM","setIsCDM","partialTime","setPartialTime","startPartialTime","setStartPartialTime","endPartialTime","setEndPartialTime","valueMonday","setValueMonday","valueTuesday","setValueTuesday","valueWednesday","setValueWednesday","valueThursday","setValueThursday","valueFriday","setValueFriday","errorMessage","setErrorMessage","successMessage","setSuccessMessage","valueEditType","params","successUpdate","loadingCreate","errorCreate","successCreate","errorCDM","errorPractice","cdmId","isPartialTime","week","num","worked","go","updatedUser","createConsultant","changeValueDateHandler","ImportExcelFile","setImportData","sheets","fileName","setFileName","readFileHandler","file","files","reader","FileReader","onload","result","workBook","XLSX","jsonData","SheetNames","wsName","ws","Sheets","sheet_to_json","readAsBinaryString","File","custom","data-browse","Input","FlowImportWKConsultants","props","setStep","loadingUpload","errorUpload","Modal","aria-labelledby","centered","closeButton","Title","Body","rel","Image","src","rounded","fluid","FormData","append","updateConsultantWk","onHide","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ManageConsultantScreen","setPageSize","setPageNumber","setKeyword","exportExcel","setExportExcel","importData","showImportConsultant","setShowImportConsultant","successConsultantDelete","loadingMassImport","errorMassImport","successMassImport","exportExcelData","onClickDeleteHandler","confirm","show","element","Pagination","Prev","keys","includes","active","Ellipsis","Next","ManageUsersScreen","createdAt","lastConnexion","userId","getAllAccess","UserEditScreen","linkConsultant","setLinkConsultant","setProfil","setStatus","errorMyAdmin","updateUser","Append","newProfil","updateProfilHandler","RegisterScreen","confirmPassword","setConfirmPassword","register","variat","StaffAConsultant","loadingData","addStaffHandler","responsability","sdResponsability","setSdResponsability","sdPriority","setSdPriority","information","sdInformation","setSdInformation","SelectInput","options","multi","closeMenuOnSelect","isMulti","valuesSelected","isDisabled","getAllSkills","ConsoDispoUnit","monthData","grades","addStaff","setFocus","formatName","fullName","separateName","word","indice1","toUpperCase","join","Card","consultantData","yVal","sm","date","background","onFocus","ConsoDispo","searchExperienceStart","setSearchExperienceStart","searchExperienceEnd","setSearchExperienceEnd","searchSkillsList","setSearchSkillsList","setSearchMode","modalWindowShow","setModalWindowShow","sdConsultant","setSdConsultant","loadingAvailabilities","errorAvailabilities","moreConsultantDetails","Tabs","defaultActiveKey","Tab","eventKey","xVal","Tace","setTarget","bid","setBid","editRequest","setEditRequest","missingFTEToBid","setMissingFTEToBid","missingFTEToTarget","setMissingFTEToTarget","totalProdDay","totalProdDayToBid","totalNotProdDay","totalAvailableDay","totalProdDayToTarget","today","lastMonthDay","setUTCMonth","getUTCMonth","todayToEnd","Text","totalTACE","toFixed","totalLeaving","totalETP","DashboardScreen","startDefault","endDefault","setStart","setEnd","loadingTACE","errorTACE","getTace","endDate","replace","getAllClients","createAClient","updateAClient","SelectCompany","setCompany","companies","isClearable","commercialTeam","StaffingEditScreen","successEdit","dealToEdit","setTitle","client","setClient","setType","setProbability","setDescription","proposalDate","setProposalDate","presentationDate","setPresentationDate","setStartDate","setMainPractice","othersPractices","setOthersPractices","setLocation","srInstruction","setSrInstruction","srStatus","setSrStatus","srRessources","setSrRessources","comments","setComments","duration","setDuration","othersContacts","setOthersContacts","newComment","setNewComment","sdInstructions","sdStatus","setSdStatus","sdStaff","setSdStaff","wonDate","setWonDate","loadingSdConsultantData","setLoadingSdConsultantData","dealChange","setDealChange","leader","setLeader","coLeaders","setCoLeaders","companyMessage","setCompanyMessage","searchValue","getAllLeaders","instructions","ressources","staffingDecision","staffingStatus","primary","secondary","coLeader","idConsultant","tampon","addCommentHandler","newComments","slice","sender","sort","b","createDeal","prob","multiple","selectedList","selectBox","document","getElementById","i","selected","updateOthersPractices","trigger","Popover","Content","removeStaffHandler","updatedAt","onKeyUp","index","textAlign","marginBottom","deleteCommentHandler","ManageSkillsScreen","skillName","setSkillName","skillDescription","setSkillDescription","loadingCreateSkill","errorCreateSkill","successCreateSkill","loadingSkills","skillsList","FlowImportPxx","pxxUploadFiles","webkitdirectory","directory","updatePxxFiles","PxxDetailsScreen","monthId","progress","setProgress","massImport","setMassImport","errorImportMessage","setErrorImportMessage","messsagesImportSuccess","setMessagesImportSuccess","messsagesImportError","setMessagesImportError","totalToImport","setTotalToImport","showImportPxx","setShowImportPxx","loadingImportLine","errorImportLine","successImportLine","handlerImportData","lineToImport","newImportData","MATRICULE","updatedMatricule","newErrorMessage","ProgressBar","animated","DealList","searchTitle","setSearchTitle","searchContact","setSearchContact","searchCompany","setSearchCompany","searchDealStatus","setSearchDealStatus","searchRequestStatus","setSearchRequestStatus","searchStaff","setSearchStaff","colSpan","ManageDealsScreen","dealStatus","myDeals","searchMyDeals","setSearchMyDeals","updateFilter","setUpdateFilter","notUpdateFilter","setNotUpdateFilter","newDealFilter","setNewDealFilter","wonDealFilter","setWonDealFilter","changePeriod","setChangePeriod","tabsFilter","defaultTabs","setDefaultTabs","dataFiltered","setDataFiltered","errorDelete","successDelete","loadingImportMass","successImportData","updateTime","getUTCDate","notUpdateTime","newDealTime","wonDealTime","filteredData","dealsFiltered","needStaff","toDisplay","setParam","activeKey","onSelect","k","DealsHistoryScreen","getFullYear","ProfilDescription","categories","categorizedFrontAccess","filterdData","frontAccessRules","categorizeFrontAccess","categoryRules","accessRules","profilId","CategoryAccess","modes","item","frontAccessItem","AccessLineEdit","setLabel","setMode","setData","loadingState","setLoadingState","updateprofilFrontAcessRule","console","log","AccessEditScreen","errorFrontUpdate","DisplayContact","setShowAddContact","deleteContactHandler","contactName","contactEmail","companyId","companyName","ManageCompaniesScreen","showAddContact","setContactName","setContactEmail","showModifyName","setShowModifyName","newCompanyName","setNewCompanyName","showCreateCompany","setShowCreateCompany","clientsId","clientToUpdate","newContacts","contactNameConform","contactEmailConform","test","addContactHandler","modifyCompanyNameHandler","addCompanyHandler","EnvoyerMailsScreen","contactList","setContactList","messsagesSendSuccess","setMessagesSendSuccess","messsagesSendError","setMessagesSendError","totalToSend","setTotalToSend","massSending","setMassSending","handlerSendADecision","newContactsInfo","sendDecisionEmail","successEmail","errorEmail","ProfileScreen","messageUpdate","setMessageUpdate","delegation","setDelegation","loadingDelegate","cdmDelegation","strongRegex","RegExp","lowRegex","applyRegex","updateUserProfile","delegationToUpdate","updateDelegateConsultant","c","s","TokenIsValide","delay","userInfoUpdated","getTransparentNewToken","createBrowserHistory","App","component","exact","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0a6ee524.chunk.js","sourcesContent":["export const PXX_MY_TO_EDIT_REQUEST = 'PXX_MY_TO_EDIT_REQUEST';\nexport const PXX_MY_TO_EDIT_SUCCESS = 'PXX_MY_TO_EDIT_SUCCESS';\nexport const PXX_MY_TO_EDIT_FAIL = 'PXX_MY_TO_EDIT_FAIL';\nexport const PXX_MY_TO_EDIT_RESET = 'PXX_MY_TO_EDIT_RESET';\n\nexport const PXX_UPDATE_REQUEST = 'PXX_UPDATE_REQUEST';\nexport const PXX_UPDATE_SUCCESS = 'PXX_UPDATE_SUCCESS';\nexport const PXX_UPDATE_FAIL = 'PXX_UPDATE_FAIL';\nexport const PXX_UPDATE_RESET = 'PXX_UPDATE_RESET';\n\nexport const PXX_LIST_REQUEST = 'PXX_LIST_REQUEST';\nexport const PXX_LIST_SUCCESS = 'PXX_LIST_SUCCESS';\nexport const PXX_LIST_FAIL = 'PXX_LIST_FAIL';\nexport const PXX_LIST_RESET = 'PXX_LIST_RESET';\n\nexport const PXX_USER_LIST_REQUEST = 'PXX_USER_LIST_REQUEST';\nexport const PXX_USER_LIST_SUCCESS = 'PXX_USER_LIST_SUCCESS';\nexport const PXX_USER_LIST_FAIL = 'PXX_USER_LIST_FAIL';\nexport const PXX_USER_LIST_RESET = 'PXX_USER_LIST_RESET';\n\nexport const PXX_TACE_REQUEST = 'PXX_TACE_REQUEST';\nexport const PXX_TACE_SUCCESS = 'PXX_TACE_SUCCESS';\nexport const PXX_TACE_FAIL = 'PXX_TACE_FAIL';\nexport const PXX_TACE_RESET = 'PXX_TACE_RESET';\n\nexport const PXX_AVAILABILITIES_REQUEST = 'PXX_AVAILABILITIES_REQUEST';\nexport const PXX_AVAILABILITIES_SUCCESS = 'PXX_AVAILABILITIES_SUCCESS';\nexport const PXX_AVAILABILITIES_FAIL = 'PXX_AVAILABILITIES_FAIL';\nexport const PXX_AVAILABILITIES_RESET = 'PXX_AVAILABILITIES_RESET';\n\nexport const PXX_ALL_REQUEST = 'PXX_ALL_REQUEST';\nexport const PXX_ALL_SUCCESS = 'PXX_ALL_SUCCESS';\nexport const PXX_ALL_FAIL = 'PXX_ALL_FAIL';\nexport const PXX_ALL_RESET = 'PXX_ALL_RESET';\n\nexport const PXX_IMPORT_MASS_REQUEST = 'PXX_IMPORT_MASS_REQUEST';\nexport const PXX_IMPORT_MASS_SUCCESS = 'PXX_IMPORT_MASS_SUCCESS';\nexport const PXX_IMPORT_MASS_FAIL = 'PXX_IMPORT_MASS_FAIL';\nexport const PXX_IMPORT_MASS_RESET = 'PXX_IMPORT_MASS_RESET';\n\nexport const PXX_IMPORT_LINE_REQUEST = 'PXX_IMPORT_LINE_REQUEST';\nexport const PXX_IMPORT_LINE_SUCCESS = 'PXX_IMPORT_LINE_SUCCESS';\nexport const PXX_IMPORT_LINE_FAIL = 'PXX_IMPORT_LINE_FAIL';\nexport const PXX_IMPORT_LINE_RESET = 'PXX_IMPORT_LINE_RESET';\n\nexport const PXX_UPLOAD_FILE_REQUEST = 'PXX_UPLOAD_FILE_REQUEST';\nexport const PXX_UPLOAD_FILE_SUCCESS = 'PXX_UPLOAD_FILE_SUCCESS';\nexport const PXX_UPLOAD_FILE_FAIL = 'PXX_UPLOAD_FILE_FAIL';\nexport const PXX_UPLOAD_FILE_RESET = 'PXX_UPLOAD_FILE_RESET';\n\nexport const PXX_UPDATE_PXX_REQUEST = 'PXX_UPDATE_PXX_REQUEST';\nexport const PXX_UPDATE_PXX_SUCCESS = 'PXX_UPDATE_PXX_SUCCESS';\nexport const PXX_UPDATE_PXX_FAIL = 'PXX_UPDATE_PXX_FAIL';\nexport const PXX_UPDATE_PXX_RESET = 'PXX_UPDATE_PXX_RESET';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REDIRECT_AZ_REQUEST = 'USER_REDIRECT_AZ_REQUEST';\nexport const USER_REDIRECT_AZ_SUCCESS = 'USER_REDIRECT_AZ_SUCCESS';\nexport const USER_REDIRECT_AZ_FAIL = 'USER_REDIRECT_AZ_FAIL';\nexport const USER_REDIRECT_AZ_RESET = 'USER_REDIRECT_AZ_RESET';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\n\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n\nexport const USER_STATUS = ['Waiting approval', 'Validated', 'Refused'];","export const CONSULTANTS_MY_DETAILS_REQUEST = 'CONSULTANTS_MY_DETAILS_REQUEST';\nexport const CONSULTANTS_MY_DETAILS_SUCCESS = 'CONSULTANTS_MY_DETAILS_SUCCESS';\nexport const CONSULTANTS_MY_DETAILS_FAIL = 'CONSULTANTS_MY_DETAILS_FAIL';\nexport const CONSULTANTS_MY_DETAILS_FOCUS = 'CONSULTANTS_MY_DETAILS_FOCUS';\nexport const CONSULTANTS_MY_DETAILS_RESET = 'CONSULTANTS_MY_DETAILS_RESET';\n\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST = 'CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS = 'CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_FAIL = 'CONSULTANTS_ALL_ADMIN_DETAILS_FAIL';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS = 'CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS';\nexport const CONSULTANTS_ALL_ADMIN_DETAILS_RESET = 'CONSULTANTS_ALL_ADMIN_DETAILS_RESET';\n\nexport const CONSULTANTS_ALL_LEADERS_REQUEST = 'CONSULTANTS_ALL_LEADERS_REQUEST';\nexport const CONSULTANTS_ALL_LEADERS_SUCCESS = 'CONSULTANTS_ALL_LEADERS_SUCCESS';\nexport const CONSULTANTS_ALL_LEADERS_FAIL = 'CONSULTANTS_ALL_LEADERS_FAIL';\nexport const CONSULTANTS_ALL_LEADERS_FOCUS = 'CONSULTANTS_ALL_LEADERS_FOCUS';\nexport const CONSULTANTS_ALL_LEADERS_RESET = 'CONSULTANTS_ALL_LEADERS_RESET';\n\nexport const CONSULTANT_MY_REQUEST = 'CONSULTANT_MY_REQUEST';\nexport const CONSULTANT_MY_SUCCESS = 'CONSULTANT_MY_SUCCESS';\nexport const CONSULTANT_MY_FAIL = 'CONSULTANT_MY_FAIL';\nexport const CONSULTANT_MY_RESET = 'CONSULTANT_MY_RESET';\n\nexport const CONSULTANT_DELEGATE_UPDATE_REQUEST = 'CONSULTANT_DELEGATE_UPDATE_REQUEST';\nexport const CONSULTANT_DELEGATE_UPDATE_SUCCESS = 'CONSULTANT_DELEGATE_UPDATE_SUCCESS';\nexport const CONSULTANT_DELEGATE_UPDATE_FAIL = 'CONSULTANT_DELEGATE_UPDATE_FAIL';\nexport const CONSULTANT_DELEGATE_UPDATE_RESET = 'CONSULTANT_DELEGATE_UPDATE_RESET';\n\nexport const CONSULTANT_MY_UPDATE_REQUEST = 'CONSULTANT_MY_UPDATE_REQUEST';\nexport const CONSULTANT_MY_UPDATE_SUCCESS = 'CONSULTANT_MY_UPDATE_SUCCESS';\nexport const CONSULTANT_MY_UPDATE_FAIL = 'CONSULTANT_MY_UPDATE_FAIL';\nexport const CONSULTANT_MY_UPDATE_RESET = 'CONSULTANT_MY_UPDATE_RESET';\n\nexport const CONSULTANT_CREATE_REQUEST = 'CONSULTANT_CREATE_REQUEST';\nexport const CONSULTANT_CREATE_SUCCESS = 'CONSULTANT_CREATE_SUCCESS';\nexport const CONSULTANT_CREATE_FAIL = 'CONSULTANT_CREATE_FAIL';\nexport const CONSULTANT_CREATE_RESET = 'CONSULTANT_CREATE_RESET';\n\nexport const CONSULTANT_DELETE_REQUEST = 'CONSULTANT_DELETE_REQUEST';\nexport const CONSULTANT_DELETE_SUCCESS = 'CONSULTANT_DELETE_SUCCESS';\nexport const CONSULTANT_DELETE_FAIL = 'CONSULTANT_DELETE_FAIL';\nexport const CONSULTANT_DELETE_RESET = 'CONSULTANT_DELETE_RESET';\n\nexport const CONSULTANT_CDM_LIST_REQUEST = 'CONSULTANT_CDM_LIST_REQUEST';\nexport const CONSULTANT_CDM_LIST_SUCCESS = 'CONSULTANT_CDM_LIST_SUCCESS';\nexport const CONSULTANT_CDM_LIST_FAIL = 'CONSULTANT_CDM_LIST_FAIL';\nexport const CONSULTANT_CDM_LIST_RESET = 'CONSULTANT_CDM_LIST_RESET';\n\nexport const CONSULTANT_PRACTICE_LIST_REQUEST = 'CONSULTANT_PRACTICE_LIST_REQUEST';\nexport const CONSULTANT_PRACTICE_LIST_SUCCESS = 'CONSULTANT_PRACTICE_LIST_SUCCESS';\nexport const CONSULTANT_PRACTICE_LIST_FAIL = 'CONSULTANT_PRACTICE_LIST_FAIL';\nexport const CONSULTANT_PRACTICE_LIST_RESET = 'CONSULTANT_PRACTICE_LIST_RESET';\n\nexport const CONSULTANT_UPDATE_COMMENT_REQUEST = 'CONSULTANT_UPDATE_COMMENT_REQUEST';\nexport const CONSULTANT_UPDATE_COMMENT_SUCCESS = 'CONSULTANT_UPDATE_COMMENT_SUCCESS';\nexport const CONSULTANT_UPDATE_COMMENT_FAIL = 'CONSULTANT_UPDATE_COMMENT_FAIL';\nexport const CONSULTANT_UPDATE_COMMENT_RESET = 'CONSULTANT_UPDATE_COMMENT_RESET';\n\nexport const CONSULTANT_CDM_REQUEST = 'CONSULTANT_CDM_REQUEST';\nexport const CONSULTANT_CDM_SUCCESS = 'CONSULTANT_CDM_SUCCESS';\nexport const CONSULTANT_CDM_FAIL = 'CONSULTANT_CDM_FAIL';\nexport const CONSULTANT_CDM_RESET = 'CONSULTANT_CDM_RESET';\n\nexport const CONSULTANT_SKILLS_REQUEST = 'CONSULTANT_SKILLS_REQUEST';\nexport const CONSULTANT_SKILLS_SUCCESS = 'CONSULTANT_SKILLS_SUCCESS';\nexport const CONSULTANT_SKILLS_FAIL = 'CONSULTANT_SKILLS_FAIL';\nexport const CONSULTANT_SKILLS_RESET = 'CONSULTANT_SKILLS_RESET';\n\nexport const CONSULTANT_ALL_SKILLS_REQUEST = 'CONSULTANT_ALL_SKILLS_REQUEST';\nexport const CONSULTANT_ALL_SKILLS_SUCCESS = 'CONSULTANT_ALL_SKILLS_SUCCESS';\nexport const CONSULTANT_ALL_SKILLS_FAIL = 'CONSULTANT_ALL_SKILLS_FAIL';\nexport const CONSULTANT_ALL_SKILLS_RESET = 'CONSULTANT_ALL_SKILLS_RESET';\n\nexport const CONSULTANT_ALL_STAFF_REQUEST = 'CONSULTANT_ALL_STAFF_REQUEST';\nexport const CONSULTANT_ALL_STAFF_SUCCESS = 'CONSULTANT_ALL_STAFF_SUCCESS';\nexport const CONSULTANT_ALL_STAFF_FAIL = 'CONSULTANT_ALL_STAFF_FAIL';\nexport const CONSULTANT_ALL_STAFF_RESET = 'CONSULTANT_ALL_STAFF_RESET';\n\nexport const CONSULTANT_ADD_SKILL_REQUEST = 'CONSULTANT_ADD_SKILL_REQUEST';\nexport const CONSULTANT_ADD_SKILL_SUCCESS = 'CONSULTANT_ADD_SKILL_SUCCESS';\nexport const CONSULTANT_ADD_SKILL_FAIL = 'CONSULTANT_ADD_SKILL_FAIL';\nexport const CONSULTANT_ADD_SKILL_RESET = 'CONSULTANT_ADD_SKILL_RESET';\n\nexport const CONSULTANT_DELETE_SKILL_REQUEST = 'CONSULTANT_DELETE_SKILL_REQUEST';\nexport const CONSULTANT_DELETE_SKILL_SUCCESS = 'CONSULTANT_DELETE_SKILL_SUCCESS';\nexport const CONSULTANT_DELETE_SKILL_FAIL = 'CONSULTANT_DELETE_SKILL_FAIL';\nexport const CONSULTANT_DELETE_SKILL_RESET = 'CONSULTANT_DELETE_SKILL_RESET';\n\nexport const CONSULTANT_UPDATE_SKILL_REQUEST = 'CONSULTANT_UPDATE_SKILL_REQUEST';\nexport const CONSULTANT_UPDATE_SKILL_SUCCESS = 'CONSULTANT_UPDATE_SKILL_SUCCESS';\nexport const CONSULTANT_UPDATE_SKILL_FAIL = 'CONSULTANT_UPDATE_SKILL_FAIL';\nexport const CONSULTANT_UPDATE_SKILL_RESET = 'CONSULTANT_UPDATE_SKILL_RESET';\n\nexport const CONSULTANT_MASS_IMPORT_REQUEST = 'CONSULTANT_MASS_IMPORT_REQUEST';\nexport const CONSULTANT_MASS_IMPORT_SUCCESS = 'CONSULTANT_MASS_IMPORT_SUCCESS';\nexport const CONSULTANT_MASS_IMPORT_FAIL = 'CONSULTANT_MASS_IMPORT_FAIL';\nexport const CONSULTANT_MASS_IMPORT_RESET = 'CONSULTANT_MASS_IMPORT_RESET';\n\nexport const CONSULTANT_UPLOAD_WK_REQUEST = 'CONSULTANT_UPLOAD_WK_REQUEST';\nexport const CONSULTANT_UPLOAD_WK_SUCCESS = 'CONSULTANT_UPLOAD_WK_SUCCESS';\nexport const CONSULTANT_UPLOAD_WK_FAIL = 'CONSULTANT_UPLOAD_WK_FAIL';\nexport const CONSULTANT_UPLOAD_WK_RESET = 'CONSULTANT_UPLOAD_WK_RESET';\n\nexport const CONSULTANT_UPDATE_WK_REQUEST = 'CONSULTANT_UPDATE_WK_REQUEST';\nexport const CONSULTANT_UPDATE_WK_SUCCESS = 'CONSULTANT_UPDATE_WK_SUCCESS';\nexport const CONSULTANT_UPDATE_WK_FAIL = 'CONSULTANT_UPDATE_WK_FAIL';\nexport const CONSULTANT_UPDATE_WK_RESET = 'CONSULTANT_UPDATE_WK_RESET';\n\nexport const CONSULTANT_GRADE = ['Intern', 'Analyst', 'Consultant', 'Senior consultant', 'Manager', 'Senior manager', 'Director', 'Partner', 'Unknown', 'Commercial', 'Research'];","export const SKILL_LIST_REQUEST = 'SKILL_LIST_REQUEST';\nexport const SKILL_LIST_SUCCESS = 'SKILL_LIST_SUCCESS';\nexport const SKILL_LIST_FAIL = 'SKILL_LIST_FAIL';\nexport const SKILL_LIST_RESET = 'SKILL_LIST_RESET';\n\nexport const SKILL_DELETE_REQUEST = 'SKILL_DELETE_REQUEST';\nexport const SKILL_DELETE_SUCCESS = 'SKILL_DELETE_SUCCESS';\nexport const SKILL_DELETE_FAIL = 'SKILL_DELETE_FAIL';\nexport const SKILL_DELETE_RESET = 'SKILL_DELETE_RESET';\n\nexport const SKILL_CREATE_REQUEST = 'SKILL_CREATE_REQUEST';\nexport const SKILL_CREATE_SUCCESS = 'SKILL_CREATE_SUCCESS';\nexport const SKILL_CREATE_FAIL = 'SKILL_CREATE_FAIL';\nexport const SKILL_CREATE_RESET = 'SKILL_CREATE_RESET';","export const DEAL_CREATE_REQUEST = 'DEAL_CREATE_REQUEST';\nexport const DEAL_CREATE_SUCCESS = 'DEAL_CREATE_SUCCESS';\nexport const DEAL_CREATE_FAIL = 'DEAL_CREATE_FAIL';\nexport const DEAL_CREATE_RESET = 'DEAL_CREATE_RESET';\n\nexport const DEAL_UPDATE_REQUEST = 'DEAL_UPDATE_REQUEST';\nexport const DEAL_UPDATE_SUCCESS = 'DEAL_UPDATE_SUCCESS';\nexport const DEAL_UPDATE_FAIL = 'DEAL_UPDATE_FAIL';\nexport const DEAL_UPDATE_RESET = 'DEAL_UPDATE_RESET';\n\nexport const DEAL_ALL_LIST_REQUEST = 'DEAL_ALL_LIST_REQUEST';\nexport const DEAL_ALL_LIST_SUCCESS = 'DEAL_ALL_LIST_SUCCESS';\nexport const DEAL_ALL_LIST_FAIL = 'DEAL_ALL_LIST_FAIL';\nexport const DEAL_ALL_LIST_RESET = 'DEAL_ALL_LIST_RESET';\n\nexport const DEAL_DELETE_REQUEST = 'DEAL_DELETE_REQUEST';\nexport const DEAL_DELETE_SUCCESS = 'DEAL_DELETE_SUCCESS';\nexport const DEAL_DELETE_FAIL = 'DEAL_DELETE_FAIL';\nexport const DEAL_DELETE_RESET = 'DEAL_DELETE_RESET';\n\nexport const DEAL_EDIT_REQUEST = 'DEAL_EDIT_REQUEST';\nexport const DEAL_EDIT_SUCCESS = 'DEAL_EDIT_SUCCESS';\nexport const DEAL_EDIT_FAIL = 'DEAL_EDIT_FAIL';\nexport const DEAL_EDIT_RESET = 'DEAL_EDIT_RESET';\n\nexport const DEAL_OLD_REQUEST = 'DEAL_OLD_REQUEST';\nexport const DEAL_OLD_SUCCESS = 'DEAL_OLD_SUCCESS';\nexport const DEAL_OLD_FAIL = 'DEAL_OLD_FAIL';\nexport const DEAL_OLD_RESET = 'DEAL_OLD_RESET';\n\nexport const DEAL_MASS_IMPORT_REQUEST = 'DEAL_MASS_IMPORT_REQUEST';\nexport const DEAL_MASS_IMPORT_SUCCESS = 'DEAL_MASS_IMPORT_SUCCESS';\nexport const DEAL_MASS_IMPORT_FAIL = 'DEAL_MASS_IMPORT_FAIL';\nexport const DEAL_MASS_IMPORT_RESET = 'DEAL_MASS_IMPORT_RESET';\n\nexport const REQUEST_STATUS = [\n    {name: 'Identify Leader', staff: true, priority: 10},\n    {name: 'Identify Staff', staff: true, priority: 7},\n    {name: 'Staff to validate by leader', staff: false, priority: 5},\n    {name: 'Staff validated by leader', staff: false, priority: 0},\n    {name: 'Staff validated by client', staff: false, priority: 0},\n    {name: 'You can staff elsewhere', staff: false, priority: 0},\n    {name: 'Close', staff: false, priority: 0}\n];\n\nexport const TYPE_BUSINESS = [\n    {name: 'New business', priority: 10},\n    {name: 'New position', priority: 5},\n    {name: 'Replacement', priority: 1}\n];\n\nexport const DEAL_STATUS = [\n    {name: 'Lead', priority: 0, display: 'onTrack'},\n    {name: 'Proposal to send', priority: 5, display: 'onTrack'},\n    {name: 'Proposal sent', priority: 5, display: 'onTrack'},\n    {name: 'Won', priority: 10, display: 'win'},\n    {name: 'Abandoned', priority: 0, display: 'lost'},\n    {name: 'Lost', priority: 0, display: 'lots'},\n];\n\nexport const DEAL_PROBABILITY = [\n    {name: 10, priority: 1},\n    {name: 30, priority: 3},\n    {name: 50, priority: 5},\n    {name: 70, priority: 7},\n    {name: 100, priority: 10},\n];","export const ACCESS_LIST_REQUEST = 'ACCESS_LIST_REQUEST';\nexport const ACCESS_LIST_SUCCESS = 'ACCESS_LIST_SUCCESS';\nexport const ACCESS_LIST_FAIL = 'ACCESS_LIST_FAIL';\nexport const ACCESS_LIST_RESET = 'ACCESS_LIST_RESET';\n\nexport const ACCESS_UPDATE_FRONTACCESS_REQUEST = 'ACCESS_UPDATE_FRONTACCESS_REQUEST';\nexport const ACCESS_UPDATE_FRONTACCESS_SUCCESS = 'ACCESS_UPDATE_FRONTACCESS_SUCCESS';\nexport const ACCESS_UPDATE_FRONTACCESS_FAIL = 'ACCESS_UPDATE_FRONTACCESS_FAIL';\nexport const ACCESS_UPDATE_FRONTACCESS_RESET = 'ACCESS_UPDATE_FRONTACCESS_RESET';\n\nexport const ACCESS_MODES = ['no', 'yes', 'read', 'write'];\nexport const ACCESS_DATAS = ['my', 'team', 'department', 'domain', 'all'];","export const CLIENT_ALL_REQUEST = 'CLIENT_ALL_REQUEST';\nexport const CLIENT_ALL_SUCCESS = 'CLIENT_ALL_SUCCESS';\nexport const CLIENT_ALL_FAIL = 'CLIENT_ALL_FAIL';\nexport const CLIENT_ALL_RESET = 'CLIENT_ALL_RESET';\n\nexport const CLIENT_CREATE_REQUEST = 'CLIENT_CREATE_REQUEST';\nexport const CLIENT_CREATE_SUCCESS = 'CLIENT_CREATE_SUCCESS';\nexport const CLIENT_CREATE_FAIL = 'CLIENT_CREATE_FAIL';\nexport const CLIENT_CREATE_RESET = 'CLIENT_CREATE_RESET';\n\nexport const CLIENT_UPDATE_REQUEST = 'CLIENT_UPDATE_REQUEST';\nexport const CLIENT_UPDATE_SUCCESS = 'CLIENT_UPDATE_SUCCESS';\nexport const CLIENT_UPDATE_FAIL = 'CLIENT_UPDATE_FAIL';\nexport const CLIENT_UPDATE_RESET = 'CLIENT_UPDATE_RESET';\n\nexport const CLIENT_DELETE_REQUEST = 'CLIENT_DELETE_REQUEST';\nexport const CLIENT_DELETE_SUCCESS = 'CLIENT_DELETE_SUCCESS';\nexport const CLIENT_DELETE_FAIL = 'CLIENT_DELETE_FAIL';\nexport const CLIENT_DELETE_RESET = 'CLIENT_DELETE_RESET';","export const TACE_CREATE_REQUEST = 'TACE_CREATE_REQUEST';\nexport const TACE_CREATE_SUCCESS = 'TACE_CREATE_SUCCESS';\nexport const TACE_CREATE_FAIL = 'TACE_CREATE_FAIL';\nexport const TACE_CREATE_RESET = 'TACE_CREATE_RESET';","export const EMAIL_CONTACTS_LIST_REQUEST = 'EMAIL_CONTACTS_LIST_REQUEST';\nexport const EMAIL_CONTACTS_LIST_SUCCESS = 'EMAIL_CONTACTS_LIST_SUCCESS';\nexport const EMAIL_CONTACTS_LIST_FAIL = 'EMAIL_CONTACTS_LIST_FAIL';\nexport const EMAIL_CONTACTS_LIST_RESET = 'EMAIL_CONTACTS_LIST_RESET';\n\nexport const EMAIL_SEND_DECISION_REQUEST = 'EMAIL_SEND_DECISION_REQUEST';\nexport const EMAIL_SEND_DECISION_SUCCESS = 'EMAIL_SEND_DECISION_SUCCESS';\nexport const EMAIL_SEND_DECISION_FAIL = 'EMAIL_SEND_DECISION_FAIL';\nexport const EMAIL_SEND_DECISION_RESET = 'EMAIL_SEND_DECISION_RESET';","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { pxxAvailabilitiesReducer, pxxListReducer, pxxAllListReducer, pxxTACEReducer, pxxUpdateReducer, pxxMyToEditReducer, pxxImportLineReducer, pxxUploadFileReducer, updatePxxReducer } from './reducers/pxxReducers';\nimport { userLoginReducer, userListReducer, userDeleteReducer, userDetailsReducer, userUpdateReducer, userRegisterReducer, userRedirectAzReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { \n    consultantMyReducer, \n    consultantsMyListReducer, \n    consultantMyUpdateReducer, \n    consultantsMyAdminListReducer,\n    consultantCreateReducer,\n    consultantCDMListReducer,\n    consultantPracticeListReducer,\n    consultantDeleteReducer,\n    consultantUpdateCommentReducer,\n    consultantAllSkillsReducer,\n    consultantAddSkillReducer,\n    consultantDeleteSkillReducer,\n    consultantUpdateSkillReducer,\n    consultantAllStaffsReducer,\n    consultantSkillsReducer,\n    consultantGetCDMReducer,\n    consultantsAllLeadersReducer,\n    consultantsMassImportReducer,\n    consultantUploadWkReducer,\n    consultantUpdateWkReducer,\n    consultantDelegateUpdateReducer\n } from './reducers/consultantReducers';\n//import {  } from './reducers/pxxReducers';\nimport { skillCreateReducer, skillDelteReducer, skillListReducer } from './reducers/skillReducers'\nimport { dealAllListReducer, dealCreateReducer, dealDeleteReducer, dealEditeReducer, dealOldReducer, dealsImportMassReducer, dealUpdateReducer } from './reducers/dealReducer';\nimport { accessFrontUpdateReducer, accessListReducer } from './reducers/accessReducers';\nimport { clientAllReducer, clientCreateReducer, clientUpdateReducer, clientDeleteReducer } from './reducers/clientReducers';\nimport { createTaceReducer } from './reducers/taceReducer';\nimport { contactsListReducer, sendOneEmailReducer } from './reducers/emailReducers';\n\nexport const reducer = combineReducers({\n    userRegister: userRegisterReducer,\n    userLogin: userLoginReducer,\n    userRedirectAz: userRedirectAzReducer,\n    userList: userListReducer,\n    userDetails: userDetailsReducer,\n    userUpdate: userUpdateReducer,\n    userDelete: userDeleteReducer,\n    userUpdateProfil: userUpdateProfileReducer,\n    consultantUpdateComment: consultantUpdateCommentReducer,\n    consultantsMyAdminList: consultantsMyAdminListReducer,\n    consultantsMyList: consultantsMyListReducer,\n    consultantMy: consultantMyReducer,\n    consultantMyUpdate: consultantMyUpdateReducer,\n    consultantCreate: consultantCreateReducer,\n    consultantDelete: consultantDeleteReducer,\n    consultantCDMList: consultantCDMListReducer,\n    consultantDelegateUpdate: consultantDelegateUpdateReducer,\n    consultantPracticeList: consultantPracticeListReducer,\n    //consultantAllAccess: consultantAllAccessReducer,\n    consultantSkills: consultantSkillsReducer,\n    consultantAllSkills: consultantAllSkillsReducer,\n    consultantAllStaffs: consultantAllStaffsReducer,\n    consultantAddSkill: consultantAddSkillReducer,\n    consultantDeleteSkill: consultantDeleteSkillReducer,\n    consultantUpdateSkill: consultantUpdateSkillReducer,\n    consultantGetCdm: consultantGetCDMReducer,\n    consultantsAllLeaders: consultantsAllLeadersReducer,\n    consultantsMassImport: consultantsMassImportReducer,\n    consultantUploadWk: consultantUploadWkReducer,\n    consultantUpdateWk: consultantUpdateWkReducer,\n    pxxList: pxxListReducer,\n    pxxAllList: pxxAllListReducer,\n    pxxMyToEdit: pxxMyToEditReducer,\n    pxxUpdate: pxxUpdateReducer,\n    pxxTACE: pxxTACEReducer,\n    pxxAvailabilities: pxxAvailabilitiesReducer,\n    updatePxx: updatePxxReducer,\n    //pxxImportMass: pxxImportMassReducer,\n    pxxImportLine: pxxImportLineReducer,\n    pxxUploadFile: pxxUploadFileReducer,\n    skillList: skillListReducer,\n    skillDelete: skillDelteReducer,\n    skillCreate: skillCreateReducer,\n    dealCreate: dealCreateReducer,\n    dealAllList: dealAllListReducer,\n    dealDelete: dealDeleteReducer,\n    dealEdit: dealEditeReducer,\n    dealUpdate: dealUpdateReducer,\n    dealOld: dealOldReducer,\n    dealsImportMass: dealsImportMassReducer,\n    accessList: accessListReducer,\n    accessFrontUpdate: accessFrontUpdateReducer,\n    clientAll: clientAllReducer,\n    clientCreate: clientCreateReducer,\n    clientUpdate: clientUpdateReducer,\n    clientDelete: clientDeleteReducer,\n    createTace: createTaceReducer,\n    contactsList: contactsListReducer,\n    sendOneEmail: sendOneEmailReducer\n});\n\n// space for store on local\nconst userItemsFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst initialState = {\n    userLogin: {userInfo: userItemsFromStorage}\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import { USER_LOGIN_FAIL, \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGOUT, \n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_RESET,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_REQUEST, \n    USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DELETE_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_RESET,\n    USER_UPDATE_FAIL,\n    USER_REDIRECT_AZ_REQUEST,\n    USER_REDIRECT_AZ_SUCCESS,\n    USER_REDIRECT_AZ_FAIL,\n    USER_REDIRECT_AZ_RESET,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true };\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userRedirectAzReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REDIRECT_AZ_REQUEST:\n            return { loading: true };\n        case USER_REDIRECT_AZ_SUCCESS:\n            return { loading: false, redirectURL: action.payload.redirectURL };\n        case USER_REDIRECT_AZ_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_REDIRECT_AZ_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_REGISTER_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userDetailsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { loading: true };\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload };\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_PROFILE_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\nexport const userListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true };\n        case USER_LIST_SUCCESS:\n            return { \n                loading: false, \n                users: action.payload.users,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count \n            };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LIST_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\n\nexport const userDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DELETE_RESET:\n            return { };\n        default:\n            return state;\n    }\n};\n\n\nexport const userUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import {\n    CONSULTANTS_MY_DETAILS_REQUEST,\n    CONSULTANTS_MY_DETAILS_SUCCESS,\n    CONSULTANTS_MY_DETAILS_FAIL,\n    CONSULTANTS_MY_DETAILS_FOCUS,\n    CONSULTANTS_MY_DETAILS_RESET,\n    CONSULTANT_MY_REQUEST,\n    CONSULTANT_MY_SUCCESS,\n    CONSULTANT_MY_FAIL,\n    CONSULTANT_MY_RESET,\n    CONSULTANT_MY_UPDATE_REQUEST,\n    CONSULTANT_MY_UPDATE_SUCCESS,\n    CONSULTANT_MY_UPDATE_FAIL,\n    CONSULTANT_MY_UPDATE_RESET,\n    CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST,\n    CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS,\n    CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n    CONSULTANTS_ALL_ADMIN_DETAILS_RESET,\n    CONSULTANT_CREATE_REQUEST,\n    CONSULTANT_CREATE_SUCCESS,\n    CONSULTANT_CREATE_FAIL,\n    CONSULTANT_CREATE_RESET,\n    CONSULTANT_CDM_LIST_REQUEST,\n    CONSULTANT_CDM_LIST_SUCCESS,\n    CONSULTANT_CDM_LIST_FAIL,\n    CONSULTANT_CDM_LIST_RESET,\n    CONSULTANT_PRACTICE_LIST_REQUEST,\n    CONSULTANT_PRACTICE_LIST_SUCCESS,\n    CONSULTANT_PRACTICE_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_RESET,\n    CONSULTANT_DELETE_REQUEST,\n    CONSULTANT_DELETE_SUCCESS,\n    CONSULTANT_DELETE_FAIL,\n    CONSULTANT_DELETE_RESET,\n    CONSULTANT_UPDATE_COMMENT_REQUEST,\n    CONSULTANT_UPDATE_COMMENT_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_FAIL,\n    CONSULTANT_UPDATE_COMMENT_RESET,\n    //CONSULTANT_ALL_ACCESS_REQUEST,\n    //CONSULTANT_ALL_ACCESS_SUCCESS,\n    //CONSULTANT_ALL_ACCESS_FAIL,\n    //CONSULTANT_ALL_ACCESS_RESET,\n    CONSULTANT_ALL_SKILLS_REQUEST,\n    CONSULTANT_ALL_SKILLS_SUCCESS,\n    CONSULTANT_ALL_SKILLS_FAIL,\n    CONSULTANT_ALL_SKILLS_RESET,\n    CONSULTANT_ADD_SKILL_REQUEST,\n    CONSULTANT_ADD_SKILL_SUCCESS,\n    CONSULTANT_ADD_SKILL_FAIL,\n    CONSULTANT_ADD_SKILL_RESET,\n    CONSULTANT_DELETE_SKILL_REQUEST,\n    CONSULTANT_DELETE_SKILL_SUCCESS,\n    CONSULTANT_DELETE_SKILL_FAIL,\n    CONSULTANT_DELETE_SKILL_RESET,\n    CONSULTANT_UPDATE_SKILL_REQUEST,\n    CONSULTANT_UPDATE_SKILL_SUCCESS,\n    CONSULTANT_UPDATE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_RESET,\n    CONSULTANT_ALL_STAFF_REQUEST,\n    CONSULTANT_ALL_STAFF_SUCCESS,\n    CONSULTANT_ALL_STAFF_FAIL,\n    CONSULTANT_ALL_STAFF_RESET,\n    CONSULTANT_SKILLS_REQUEST,\n    CONSULTANT_SKILLS_SUCCESS,\n    CONSULTANT_SKILLS_FAIL,\n    CONSULTANT_SKILLS_RESET,\n    CONSULTANT_CDM_REQUEST,\n    CONSULTANT_CDM_SUCCESS,\n    CONSULTANT_CDM_FAIL,\n    CONSULTANT_CDM_RESET,\n    CONSULTANTS_ALL_LEADERS_REQUEST,\n    CONSULTANTS_ALL_LEADERS_SUCCESS,\n    CONSULTANTS_ALL_LEADERS_FAIL,\n    CONSULTANTS_ALL_LEADERS_RESET,\n    CONSULTANT_MASS_IMPORT_REQUEST,\n    CONSULTANT_MASS_IMPORT_SUCCESS,\n    CONSULTANT_MASS_IMPORT_FAIL,\n    CONSULTANT_MASS_IMPORT_RESET,\n    CONSULTANT_UPLOAD_WK_REQUEST,\n    CONSULTANT_UPLOAD_WK_SUCCESS,\n    CONSULTANT_UPLOAD_WK_FAIL,\n    CONSULTANT_UPLOAD_WK_RESET,\n    CONSULTANT_UPDATE_WK_REQUEST,\n    CONSULTANT_UPDATE_WK_SUCCESS,\n    CONSULTANT_UPDATE_WK_FAIL,\n    CONSULTANT_UPDATE_WK_RESET,\n    CONSULTANT_DELEGATE_UPDATE_REQUEST,\n    CONSULTANT_DELEGATE_UPDATE_SUCCESS,\n    CONSULTANT_DELEGATE_UPDATE_FAIL,\n    CONSULTANT_DELEGATE_UPDATE_RESET\n} from '../constants/consultantConstants';\n\nexport const consultantsMyListReducer = (state = {focus: 0}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_MY_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANTS_MY_DETAILS_SUCCESS:\n            return { ...state, loading: false, consultantsMy: action.payload };\n        case CONSULTANTS_MY_DETAILS_FAIL:\n            return { ...state, loading: false, error: action.payload };\n        case CONSULTANTS_MY_DETAILS_FOCUS:\n            return { ...state, focus: action.payload }\n        case CONSULTANTS_MY_DETAILS_RESET:\n            return { focus: 0 }\n        default:\n            return state;\n    }\n};\n\n/*\nexport const consultantsMyAdminListReducer = (state = {\n    loading: true, \n    consultantsMyAdmin: [\n        {\n            name: '',\n            matricule: '',\n            arrival: '',\n            leaving: '',\n            seriority: '',\n            comment: '',\n            practice: ''\n        }],\n    focus: 0\n}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS:\n            return { ...state, loading: false, consultantsMyAdmin: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FAIL:\n            return { ...state, loading: false, error: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FOCUS:\n            return { ...state, focus: action.payload }\n        case CONSULTANTS_ALL_ADMIN_DETAILS_RESET:\n            return { loading: true, consultantsMyAdmin: [\n                                {\n                                    name: '',\n                                    matricule: '',\n                                    arrival: '',\n                                    leaving: '',\n                                    seriority: '',\n                                    comment: '',\n                                    practice: ''\n                                }], focus: 0 }\n        default:\n            return state;\n    }\n};\n*/\n/*\nexport const consultantMyReducer = (state = { consultant: {} }, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_REQUEST:\n            return { ...state, loading: true };\n        case CONSULTANT_MY_SUCCESS:\n            return { loading: false, consultant: action.payload };\n        case CONSULTANT_MY_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_RESET:\n            return { consultant: {} }\n        default:\n            return state;\n    }\n};\n*/\n\nexport const consultantMyReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MY_SUCCESS:\n            return { loading: false, consultant: action.payload };\n        case CONSULTANT_MY_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantMyUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MY_UPDATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MY_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_MY_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_MY_UPDATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantDelegateUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELEGATE_UPDATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELEGATE_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELEGATE_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_DELEGATE_UPDATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_CREATE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CREATE_SUCCESS:\n            return { loading: false, success: true, consultantCreated: action.payload };\n        case CONSULTANT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CREATE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELETE_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_DELETE_RESET:\n            return { }\n        default:\n            return state;\n    }\n};\n\nexport const consultantCDMListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_CDM_LIST_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CDM_LIST_SUCCESS:\n            return { loading: false, cdmList: action.payload };\n        case CONSULTANT_CDM_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CDM_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantPracticeListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_PRACTICE_LIST_REQUEST:\n            return { loading: true };\n        case CONSULTANT_PRACTICE_LIST_SUCCESS:\n            return { loading: false, practiceList: action.payload };\n        case CONSULTANT_PRACTICE_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_PRACTICE_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateCommentReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_COMMENT_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_COMMENT_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_UPDATE_COMMENT_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_UPDATE_COMMENT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsMyAdminListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST:\n            return { loading: true };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS:\n            return { \n                loading: false, \n                consultantsMyAdmin: action.payload.consultants,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANTS_ALL_ADMIN_DETAILS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsAllLeadersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANTS_ALL_LEADERS_REQUEST:\n            return { loading: true };\n        case CONSULTANTS_ALL_LEADERS_SUCCESS:\n            return { loading: false, leaderslist: action.payload };\n        case CONSULTANTS_ALL_LEADERS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANTS_ALL_LEADERS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantGetCDMReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CONSULTANT_CDM_REQUEST:\n            return { loading: true };\n        case CONSULTANT_CDM_SUCCESS:\n            return { loading: false, success: true, cdm: action.payload };\n        case CONSULTANT_CDM_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_CDM_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantSkillsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_SKILLS_REQUEST:\n            return { loading: true };\n        case CONSULTANT_SKILLS_SUCCESS:\n            return { loading: false, skills: action.payload };\n        case CONSULTANT_SKILLS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_SKILLS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAllSkillsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ALL_SKILLS_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ALL_SKILLS_SUCCESS:\n            return { loading: false, skills: action.payload };\n        case CONSULTANT_ALL_SKILLS_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_ALL_SKILLS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAllStaffsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ALL_STAFF_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ALL_STAFF_SUCCESS:\n            return { loading: false, staffings: action.payload };\n        case CONSULTANT_ALL_STAFF_FAIL:\n            return { loading: false, error: action.payload };\n        case CONSULTANT_ALL_STAFF_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantAddSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_ADD_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_ADD_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_ADD_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_ADD_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantDeleteSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_DELETE_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_DELETE_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_DELETE_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_DELETE_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateSkillReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_SKILL_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_SKILL_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_UPDATE_SKILL_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPDATE_SKILL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantsMassImportReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_MASS_IMPORT_REQUEST:\n            return { loading: true };\n        case CONSULTANT_MASS_IMPORT_SUCCESS:\n            return { loading: false, success: true };\n        case CONSULTANT_MASS_IMPORT_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_MASS_IMPORT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUploadWkReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPLOAD_WK_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPLOAD_WK_SUCCESS:\n            return { loading: false, success: true, path: action.payload };\n        case CONSULTANT_UPLOAD_WK_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPLOAD_WK_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const consultantUpdateWkReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSULTANT_UPDATE_WK_REQUEST:\n            return { loading: true };\n        case CONSULTANT_UPDATE_WK_SUCCESS:\n            return { loading: false, success: true, message: action.payload };\n        case CONSULTANT_UPDATE_WK_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case CONSULTANT_UPDATE_WK_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import {\n    PXX_LIST_REQUEST,\n    PXX_LIST_SUCCESS,\n    PXX_LIST_FAIL,\n    PXX_LIST_RESET,\n    PXX_MY_TO_EDIT_REQUEST,\n    PXX_MY_TO_EDIT_SUCCESS,\n    PXX_MY_TO_EDIT_FAIL,\n    PXX_MY_TO_EDIT_RESET,\n    PXX_UPDATE_REQUEST,\n    PXX_UPDATE_SUCCESS,\n    PXX_UPDATE_FAIL,\n    PXX_UPDATE_RESET,\n    PXX_TACE_REQUEST,\n    PXX_TACE_SUCCESS,\n    PXX_TACE_FAIL,\n    PXX_TACE_RESET,\n    PXX_AVAILABILITIES_REQUEST,\n    PXX_AVAILABILITIES_SUCCESS,\n    PXX_AVAILABILITIES_FAIL,\n    PXX_AVAILABILITIES_RESET,\n    PXX_ALL_REQUEST,\n    PXX_ALL_SUCCESS,\n    PXX_ALL_FAIL,\n    PXX_ALL_RESET,\n    PXX_IMPORT_LINE_REQUEST,\n    PXX_IMPORT_LINE_SUCCESS,\n    PXX_IMPORT_LINE_FAIL,\n    PXX_IMPORT_LINE_RESET,\n    PXX_UPLOAD_FILE_REQUEST,\n    PXX_UPLOAD_FILE_SUCCESS,\n    PXX_UPLOAD_FILE_FAIL,\n    PXX_UPLOAD_FILE_RESET,\n    PXX_UPDATE_PXX_REQUEST,\n    PXX_UPDATE_PXX_SUCCESS,\n    PXX_UPDATE_PXX_FAIL,\n    PXX_UPDATE_PXX_RESET\n} from '../constants/pxxConstants';\n\nexport const pxxMyToEditReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_MY_TO_EDIT_REQUEST:\n            return { loading: true };\n        case PXX_MY_TO_EDIT_SUCCESS:\n            return { loading: false, pxx: action.payload };\n        case PXX_MY_TO_EDIT_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_MY_TO_EDIT_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n};\n\nexport const pxxUpdateReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPDATE_REQUEST:\n            return { loading: true };\n        case PXX_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case PXX_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPDATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxTACEReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_TACE_REQUEST:\n            return { loading: true, success: false };\n        case PXX_TACE_SUCCESS:\n            return { loading: false, success: true, tace: action.payload };\n        case PXX_TACE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_TACE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxAvailabilitiesReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_AVAILABILITIES_REQUEST:\n            return { loading: true, success: false };\n        case PXX_AVAILABILITIES_SUCCESS:\n            return { loading: false, success: true, availabilities: action.payload };\n        case PXX_AVAILABILITIES_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_AVAILABILITIES_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const pxxAllListReducer = (state= {}, action) => {\n    switch(action.type) {\n        case PXX_ALL_REQUEST:\n            return { loading: true, success: false };\n        case PXX_ALL_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                pxxs: action.payload.pxxs,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case PXX_ALL_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_ALL_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\n/* export const pxxImportMassReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_IMPORT_MASS_REQUEST:\n            return { loading: true };\n        case PXX_IMPORT_MASS_SUCCESS:\n            return { \n                loading: false, \n                success:true, \n                message: action.payload.message,\n                datas: action.payload.datas\n            };\n        case PXX_IMPORT_MASS_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_IMPORT_MASS_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n}; */\n\nexport const pxxImportLineReducer = (state= { pxx: [] }, action) => {\n    switch(action.type) {\n        case PXX_IMPORT_LINE_REQUEST:\n            return { loading: true };\n        case PXX_IMPORT_LINE_SUCCESS:\n            return { loading: false, success:true, updatedLine: action.payload };\n        case PXX_IMPORT_LINE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_IMPORT_LINE_RESET:\n            return { pxx: [] };\n        default:\n            return state ;\n    }\n};\n\nexport const pxxUploadFileReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPLOAD_FILE_REQUEST:\n            return { loading: true };\n        case PXX_UPLOAD_FILE_SUCCESS:\n            return { loading: false, success:true, path: action.payload };\n        case PXX_UPLOAD_FILE_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPLOAD_FILE_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\nexport const updatePxxReducer = (state= { }, action) => {\n    switch(action.type) {\n        case PXX_UPDATE_PXX_REQUEST:\n            return { loading: true };\n        case PXX_UPDATE_PXX_SUCCESS:\n            return { loading: false, success:true, message: action.payload };\n        case PXX_UPDATE_PXX_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_UPDATE_PXX_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\n\n// TO DELETE //\n\nexport const pxxListReducer = (state= { pxxs: { pxxMonthInformation: [], pxxUserList: [] } }, action) => {\n    switch(action.type) {\n        case PXX_LIST_REQUEST:\n            return { loading: true, pxxs: {} };\n        case PXX_LIST_SUCCESS:\n            return { loading: false, pxxs: action.payload };\n        case PXX_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case PXX_LIST_RESET:\n            return { pxxs: { pxxMonthInformation: [], pxxUserList: [] } };\n        default:\n            return state ;\n    }\n};","import { \n    SKILL_LIST_REQUEST, \n    SKILL_LIST_RESET, \n    SKILL_LIST_SUCCESS, \n    SKILL_LIST_FAIL, \n    SKILL_DELETE_REQUEST,\n    SKILL_DELETE_SUCCESS,\n    SKILL_DELETE_FAIL,\n    SKILL_DELETE_RESET,\n    SKILL_CREATE_REQUEST,\n    SKILL_CREATE_SUCCESS,\n    SKILL_CREATE_FAIL,\n    SKILL_CREATE_RESET\n} from \"../constants/skillsConstants\";\n\nexport const skillListReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_LIST_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_LIST_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                skills: action.payload.skills,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n             };\n        case SKILL_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_LIST_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const skillDelteReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_DELETE_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case SKILL_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_DELETE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};\n\nexport const skillCreateReducer = (state= {}, action) => {\n    switch(action.type) {\n        case SKILL_CREATE_REQUEST:\n            return { loading: true, success: false };\n        case SKILL_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case SKILL_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case SKILL_CREATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};","import { \n    DEAL_ALL_LIST_FAIL,\n    DEAL_ALL_LIST_REQUEST,\n    DEAL_ALL_LIST_RESET,\n    DEAL_ALL_LIST_SUCCESS,\n    DEAL_CREATE_FAIL, \n    DEAL_CREATE_REQUEST, \n    DEAL_CREATE_RESET, \n    DEAL_CREATE_SUCCESS, \n    DEAL_DELETE_FAIL, \n    DEAL_DELETE_REQUEST,\n    DEAL_DELETE_RESET,\n    DEAL_DELETE_SUCCESS,\n    DEAL_EDIT_FAIL,\n    DEAL_EDIT_REQUEST,\n    DEAL_EDIT_RESET,\n    DEAL_EDIT_SUCCESS,\n    DEAL_MASS_IMPORT_FAIL,\n    DEAL_MASS_IMPORT_REQUEST,\n    DEAL_MASS_IMPORT_RESET,\n    DEAL_MASS_IMPORT_SUCCESS,\n    DEAL_OLD_FAIL,\n    DEAL_OLD_REQUEST,\n    DEAL_OLD_RESET,\n    DEAL_OLD_SUCCESS,\n    DEAL_UPDATE_FAIL,\n    DEAL_UPDATE_REQUEST,\n    DEAL_UPDATE_RESET,\n    DEAL_UPDATE_SUCCESS\n} from \"../constants/dealConstants\";\n\nexport const dealCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_CREATE_REQUEST:\n            return { loading: true };\n        case DEAL_CREATE_SUCCESS:\n            return { loading: false, success: true, createId: action.payload };\n        case DEAL_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_UPDATE_REQUEST:\n            return { loading: true };\n        case DEAL_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case DEAL_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealAllListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_ALL_LIST_REQUEST:\n            return { loading: true };\n        case DEAL_ALL_LIST_SUCCESS:\n            return { \n                loading: false, \n                success: true,\n                deals: action.payload.deals,\n                pages: action.payload.pages,\n                page: action.payload.page,\n                count: action.payload.count\n            };\n        case DEAL_ALL_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_ALL_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_DELETE_REQUEST:\n            return { loading: true };\n        case DEAL_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case DEAL_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_DELETE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealEditeReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_EDIT_REQUEST:\n            return { loading: true };\n        case DEAL_EDIT_SUCCESS:\n            return { loading: false, success: true, deal: action.payload };\n        case DEAL_EDIT_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_EDIT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealOldReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_OLD_REQUEST:\n            return { loading: true };\n        case DEAL_OLD_SUCCESS:\n            return { loading: false, success: true, oldDeals: action.payload };\n        case DEAL_OLD_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_OLD_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const dealsImportMassReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DEAL_MASS_IMPORT_REQUEST:\n            return { loading: true };\n        case DEAL_MASS_IMPORT_SUCCESS:\n            return { loading: false, success: true, datas: action.payload.datas };\n        case DEAL_MASS_IMPORT_FAIL:\n            return { loading: false, error: action.payload };\n        case DEAL_MASS_IMPORT_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    ACCESS_LIST_FAIL, \n    ACCESS_LIST_REQUEST, \n    ACCESS_LIST_RESET, \n    ACCESS_LIST_SUCCESS, \n    ACCESS_UPDATE_FRONTACCESS_FAIL, \n    ACCESS_UPDATE_FRONTACCESS_REQUEST,\n    ACCESS_UPDATE_FRONTACCESS_SUCCESS,\n    ACCESS_UPDATE_FRONTACCESS_RESET\n} from \"../constants/accessConstants\";\n\nexport const accessListReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ACCESS_LIST_REQUEST:\n            return { loading: true };\n        case ACCESS_LIST_SUCCESS:\n            return { loading: false, access: action.payload };\n        case ACCESS_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case ACCESS_LIST_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const accessFrontUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ACCESS_UPDATE_FRONTACCESS_REQUEST:\n            return { loading: true };\n        case ACCESS_UPDATE_FRONTACCESS_SUCCESS:\n            return { loading: false, success: true };\n        case ACCESS_UPDATE_FRONTACCESS_FAIL:\n            return { loading: false, error: action.payload };\n        case ACCESS_UPDATE_FRONTACCESS_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    CLIENT_ALL_FAIL, \n    CLIENT_ALL_REQUEST, \n    CLIENT_ALL_RESET, \n    CLIENT_ALL_SUCCESS, \n    CLIENT_CREATE_FAIL, \n    CLIENT_CREATE_REQUEST,\n    CLIENT_CREATE_RESET,\n    CLIENT_CREATE_SUCCESS,\n    CLIENT_UPDATE_FAIL,\n    CLIENT_UPDATE_REQUEST,\n    CLIENT_UPDATE_SUCCESS,\n    CLIENT_UPDATE_RESET,\n    CLIENT_DELETE_REQUEST,\n    CLIENT_DELETE_SUCCESS,\n    CLIENT_DELETE_FAIL,\n    CLIENT_DELETE_RESET\n} from \"../constants/clientConstants\";\n\nexport const clientAllReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_ALL_REQUEST:\n            return { loading: true };\n        case CLIENT_ALL_SUCCESS:\n            return { \n                loading: false, \n                success: true, \n                clients: action.payload.clients,\n                page: action.payload.page,\n                pages: action.payload.pages,\n                count: action.payload.count\n            };\n        case CLIENT_ALL_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_ALL_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientCreateReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_CREATE_REQUEST:\n            return { loading: true };\n        case CLIENT_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_CREATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientUpdateReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_UPDATE_REQUEST:\n            return { loading: true };\n        case CLIENT_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_UPDATE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport const clientDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case CLIENT_DELETE_REQUEST:\n            return { loading: true };\n        case CLIENT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_DELETE_RESET:\n            return {}\n        default:\n            return state;\n    }\n};","import { \n    TACE_CREATE_FAIL,\n    TACE_CREATE_REQUEST,\n    TACE_CREATE_RESET,\n    TACE_CREATE_SUCCESS,\n} from \"../constants/taceConstants\";\n\nexport const createTaceReducer = (state= {}, action) => {\n    switch(action.type) {\n        case TACE_CREATE_REQUEST:\n            return { loading: true, success: false };\n        case TACE_CREATE_SUCCESS:\n            return { loading: false, taceData: action.payload };\n        case TACE_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case TACE_CREATE_RESET:\n            return {};\n        default:\n            return state ;\n    }\n};","import { \n    EMAIL_CONTACTS_LIST_FAIL, \n    EMAIL_CONTACTS_LIST_REQUEST, \n    EMAIL_CONTACTS_LIST_RESET, \n    EMAIL_CONTACTS_LIST_SUCCESS, \n    EMAIL_SEND_DECISION_FAIL, \n    EMAIL_SEND_DECISION_REQUEST,\n    EMAIL_SEND_DECISION_SUCCESS,\n    EMAIL_SEND_DECISION_RESET\n} from \"../constants/emailConstants\";\n\nexport const contactsListReducer = (state= { }, action) => {\n    switch(action.type) {\n        case EMAIL_CONTACTS_LIST_REQUEST:\n            return { loading: true };\n        case EMAIL_CONTACTS_LIST_SUCCESS:\n            return { loading: false, contacts: action.payload };\n        case EMAIL_CONTACTS_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case EMAIL_CONTACTS_LIST_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};\n\nexport const sendOneEmailReducer = (state= { }, action) => {\n    switch(action.type) {\n        case EMAIL_SEND_DECISION_REQUEST:\n            return { loading: true };\n        case EMAIL_SEND_DECISION_SUCCESS:\n            return { success:true, loading: false, email: action.payload.email };\n        case EMAIL_SEND_DECISION_FAIL:\n            return { loading: false, error: action.payload };\n        case EMAIL_SEND_DECISION_RESET:\n            return { };\n        default:\n            return state ;\n    }\n};","import axios from 'axios';\nimport { CONSULTANTS_MY_DETAILS_RESET, CONSULTANT_MY_RESET } from '../constants/consultantConstants';\nimport { PXX_LIST_RESET, PXX_MY_TO_EDIT_RESET, PXX_UPDATE_RESET } from '../constants/pxxConstants';\nimport { \n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DELETE_REQUEST, \n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS, \n    USER_DETAILS_FAIL, \n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL, \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_REGISTER_RESET,\n    USER_REDIRECT_AZ_REQUEST,\n    USER_REDIRECT_AZ_SUCCESS,\n    USER_REDIRECT_AZ_FAIL\n} from \"../constants/userConstants\";\n\n\n//export const login = (email, password) => async(dispatch) => {\nexport const login = (type, param) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        let data = '';\n        if (type === 'LOCAL') {\n            // data contains all shared user informations\n            data  = await axios.post('/api/users/login', {email: param.email, password: param.password}, config);\n        }\n\n        if (type === 'AZ') {\n            data = await axios.get(`/api/users/loginAz?code=${param.code}`, config);\n        }\n\n        const userInfo = {\n            ...data.data,\n            accountType: type,\n        }\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: userInfo\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(userInfo))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getTransparentNewToken = (information, userInfo) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n        \n        //console.log(\"information\", information);\n        const type = 'LOCAL'\n        //const { userLogin: { userInfo } } = getState();\n\n        //console.log('userInfo', userInfo);\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data }  = await axios.post('/api/users/renewToken', information, config);\n\n        const userInfoUpdated = {\n            ...data,\n            accountType: type,\n        }\n\n        //console.log(\"userInfoUpdated\", userInfoUpdated);\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: userInfoUpdated\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(userInfoUpdated));\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getRedirectAz = () => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_REDIRECT_AZ_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        // Check if user is configured in app\n        const { data } = await axios.get('/api/users/redirectAz', config);\n\n        dispatch({\n            type: USER_REDIRECT_AZ_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_REDIRECT_AZ_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const logout = () => (dispatch) => {\n    //localStorage.removeItem('userInfo');\n    localStorage.clear();\n    dispatch({type: USER_LOGOUT});\n    dispatch({type: USER_REGISTER_RESET});\n    dispatch({type: CONSULTANTS_MY_DETAILS_RESET});\n    dispatch({type: CONSULTANT_MY_RESET});\n    dispatch({type: PXX_LIST_RESET});\n    dispatch({type: PXX_MY_TO_EDIT_RESET});\n    dispatch({type: PXX_UPDATE_RESET});\n};\n\nexport const register = (name, email, password) => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json'\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.post('/api/users', {name, email, password}, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        });\n\n        /*\n        // we also want to inform user is logged\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        */\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getUserDetails = (id) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.get(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        // data contains all shared user informations\n        const { data } = await axios.put(`/api/users/profile`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        });\n\n        // dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload: data,\n        // });\n\n        // dispatch({\n        //     type: USER_DETAILS_SUCCESS,\n        //     payload: data,\n        // });\n\n        //localStorage.setItem('userInfo', JSON.stringify(data));\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const listUsers = (practice='', keyword='', pageNumber='', pageSize='15') => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_LIST_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n        //const userPractice = userInfo.consultantProfil.practice;\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        //const { data } = await axios.get(`/api/users`, config);\n        const { data } = await axios.get(`/api/users?practice=${practice}&keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const deleteUser = (id) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateUser = (user) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/users/${user._id}`, user, config);\n\n        dispatch({ type: USER_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst DisplayChildren = ({ access, children }) => {\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    let grantedAccess = false;\n\n    if (userInfo) {\n        const rule = userInfo.profil.frontAccess.filter(x => x.id === access);\n        if (rule.length > 0) {\n            grantedAccess = rule[0].mode !== 'no' ? true : false\n        }\n    }\n\n    return (\n        <span>\n            {grantedAccess && children}\n        </span>\n    )\n}\n\nexport default DisplayChildren;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport { logout } from '../actions/userActions';\nimport DisplayChildren from './DisplayChildren';\n\n\nconst Header = () => {\n    \n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    };\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect fixed=\"top\">\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Performance App</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n\n                            <DisplayChildren access='staffingRequest'>\n                                <LinkContainer to='/staffing'>\n                                    <Nav.Link>Staffing Request</Nav.Link>\n                                </LinkContainer>\n                            </DisplayChildren>\n\n                            <DisplayChildren access='editMyPxx'>\n                                <LinkContainer to='/pxx'>\n                                    <Nav.Link>Edit My Pxx</Nav.Link>\n                                </LinkContainer>\n                            </DisplayChildren>\n\n                            {userInfo ? (\n\n                                <NavDropdown title={`${userInfo.name} (${userInfo.profil.profil && userInfo.profil.profil})` || 'no user'} id=\"username\">\n\n                                    <DisplayChildren access='editMyProfil'>\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item>Edit My Profil</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access={'manageConsultants'}>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/consultants'>\n                                            <NavDropdown.Item>Manage Consultant</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access={'manageDeals'}>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/deals'>\n                                            <NavDropdown.Item>Manage Deals</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <NavDropdown.Divider />\n\n                                    <LinkContainer to='/login'>\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                    </LinkContainer>\n                                    \n                                </NavDropdown>\n\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\n                                    </LinkContainer>)}\n\n                            <DisplayChildren access='adminMenu'>\n                                <NavDropdown title='admin'>\n\n                                    <DisplayChildren access='manageUsers'>\n                                        <LinkContainer to='/admin/users'>\n                                            <NavDropdown.Item>Manage Users</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageSkills'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/skills'>\n                                            <NavDropdown.Item>Manage Skills</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageProfils'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/profils'>\n                                            <NavDropdown.Item>Manage Profils</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                    <DisplayChildren access='manageCompanies'>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to='/admin/companies'>\n                                            <NavDropdown.Item>Manage companies</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </DisplayChildren>\n\n                                </NavDropdown>\n                            </DisplayChildren>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; byJPR\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant} className='my-1'>\n            {children}\n        </Alert>\n    )\n};\n\nMessage.defaultProps = {\n    variant: 'info',\n};\n\nMessage.propTypes = {\n    variant: PropTypes.string\n}\n\nexport default Message;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <Spinner \n            animation='border' \n            role='status' \n            stype={{ \n                width:'100px', \n                height: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}>\n                <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\n//import  { Redirect } from 'react-router-dom'\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Container, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login, getRedirectAz } from '../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    const userRedirectAz = useSelector(state => state.userRedirectAz);\n    const { redirectURL } = userRedirectAz;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo && userInfo.status === 'Validated') {\n            history.push(redirect);\n            // If user is authenticate, there is no search and user is redirect to home page\n        }\n    });\n\n    // effect to redirect to AZ authentication\n    useEffect(() => {\n        if (redirectURL) {\n            window.location.href = redirectURL\n        }\n    },[redirectURL]);\n\n    useEffect(() => {\n        if (location.search && location.search.split('code=').length > 0) {\n            //console.log('authentication code find, add request to get token');\n            //console.log(location.search.split('code=')[1]);\n            dispatch(login('AZ', {code: location.search.split('code=')[1]}));\n            history.push('/');\n        }\n    })\n\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            // Dispatch Login\n            dispatch(login('LOCAL', {email:email, password:password}));\n        }\n    };\n\n    const azAuthentClick = () => {\n        dispatch(getRedirectAz());\n    }\n\n\n    return (\n        <>\n            <FormContainer>\n\n                <h1>Sign In</h1>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value.toLocaleLowerCase())}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Row>\n                        <Col>\n                            <Button type='submit' variant='primary' block>\n                                Sign In\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className='mt-3'>\n                            <Button \n                                variant=\"success\"\n                                onClick={azAuthentClick}\n                                block\n                                disabled={process.env.REACT_APP_ENV === 'poc'}\n                            >-- AZ Connect --</Button>\n                        </Col>\n                    </Row>\n\n\n                    <Row className='py-3'>\n                        <Col>\n                            New User ? <Link to={redirect ?\n                                `/register?reditect=${redirect}`\n                                : '/register'}>Register</Link>\n                        </Col>\n                    </Row>\n                </Form>\n\n            </FormContainer>\n\n            {process.env.REACT_APP_ENV === 'demo' && (\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6} className='mt-5'>\n                            <h3>Disclaimer</h3>\n                            <p>Welcome on this demo! Please note that this is not an official Wavestone product.<br />\n                            On this online resource management application, you'll be able to:</p>\n                            <ul>\n                                <li>Login with different profiles (admin, coordinator, CDM, manager)</li>\n                                <li>Edit your Pxx</li>\n                                <li>Edit your consultants' profiles (position, expertise, partial time, etc.)</li>\n                                <li>Create, edit and keep track of your staffing requests</li>\n                                <li>Staff your available consultants on staffing requests</li>\n                                <li>Check where a consultant is staffed</li>\n                                <li>Create and manage a dataset of skills for your consultants</li>\n                                <li>Get access to latest KPIs and export the data on Excel</li>\n                            </ul>\n                            <h4>Test acounts logins:</h4>\n                            <Table hover striped>\n                                <thead>\n                                    <tr className='table-secondary'>\n                                        <th className='align-middle text-light text-center'>Email</th>\n                                        <th className='align-middle text-light text-center'>Password</th>\n                                        <th className='align-middle text-light text-center'>Description</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11000@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Admin account with all accreditation on application</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11001@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>Coordinator of practice PTC1 account</td>\n                                    </tr>\n                                    <tr>\n                                        <td className='align-middle text-center'>cdmptc11004@mail.com</td>\n                                        <td className='align-middle text-center'>123456</td>\n                                        <td className='align-middle text-center'>CDM of practice PTC1 account</td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </Container>\n            )}\n\n\n            {process.env.REACT_APP_ENV === 'poc' && (\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6} className='mt-5'>\n                            <h3>Disclaimer</h3>\n                            <p>Welcome on this poc! Please note that this is not an official Wavestone product.<br />\n                        On this online resource management application, you'll be able to:</p>\n                            <ul>\n                                <li>Edit your activity forecast</li>\n                                <li>Share your personal and annual objectives</li>\n                            </ul>\n                            <p>Others functionalities will come soon!</p>\n                            <br />\n                        </Col>\n                    </Row>\n                </Container>\n            )}\n        </>\n    );\n};\n\nexport default LoginScreen;\n","import axios from 'axios';\n//import fetch from 'fetch';\n//import fs from 'fs';\n//import path from 'path';\nimport {\n    PXX_LIST_REQUEST,\n    PXX_LIST_SUCCESS,\n    PXX_LIST_FAIL,\n    PXX_MY_TO_EDIT_REQUEST,\n    PXX_MY_TO_EDIT_FAIL,\n    PXX_MY_TO_EDIT_SUCCESS,\n    PXX_UPDATE_REQUEST,\n    PXX_UPDATE_SUCCESS,\n    PXX_UPDATE_FAIL,\n    PXX_TACE_REQUEST,\n    PXX_TACE_SUCCESS,\n    PXX_TACE_FAIL,\n    PXX_AVAILABILITIES_REQUEST,\n    PXX_AVAILABILITIES_SUCCESS,\n    PXX_AVAILABILITIES_FAIL,\n    PXX_ALL_REQUEST,\n    PXX_ALL_FAIL,\n    PXX_ALL_SUCCESS,\n    PXX_IMPORT_LINE_REQUEST,\n    PXX_IMPORT_LINE_SUCCESS,\n    PXX_IMPORT_LINE_FAIL,\n    PXX_UPLOAD_FILE_REQUEST,\n    PXX_UPLOAD_FILE_SUCCESS,\n    PXX_UPLOAD_FILE_FAIL,\n    PXX_UPDATE_PXX_REQUEST,\n    PXX_UPDATE_PXX_SUCCESS,\n    PXX_UPDATE_PXX_FAIL\n} from '../constants/pxxConstants';\n\nexport const getMyConsultantPxxToEdit = (consultantId, searchDate, numberOfMonth) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_MY_TO_EDIT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        searchDate.setUTCDate(1);\n        const month = searchDate.toISOString().substring(0,10);\n\n        const { data } = await axios.get(`/api/pxx/edit?consultantId=${consultantId}&month=${month}&numberOfMonth=${numberOfMonth}`, config)\n        \n        /*\n        const functionDate = new Date(searchDate);\n        functionDate.setDate(1);\n        const pxx = [];\n        for (let incr = 0; incr < numberOfMonth; incr++){\n            \n            const transformDate = functionDate.toISOString().substring(0,10);\n            const { data } = await axios.get(`/api/pxx/consultantId/${consultantId}/month/${transformDate}`, config);\n            pxx.push(data);\n            functionDate.setMonth(functionDate.getMonth()+1);\n        }\n        dispatch({ type: PXX_MY_TO_EDIT_SUCCESS, payload: pxx });\n        */\n\n       dispatch({ type: PXX_MY_TO_EDIT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_MY_TO_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updatePxx = (pxx) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/pxx`, pxx, config);    \n\n        dispatch({ type: PXX_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\n// TO DELETE //\n\nconst transformListPxxToDisplay = (pxxData, pxxInfo) => {\n\n    const listConsultant = pxxData.data.map(pxx => (pxx.name));\n\n    // collect unique _id for consultant\n    const tampon = []\n    for (let incr = listConsultant.length - 1; incr >= 0; incr--) {\n        if (tampon.includes(listConsultant[incr]._id)) {\n            listConsultant.splice(incr, 1);\n        } else {\n            tampon.push(listConsultant[incr]._id);\n        }\n    }\n\n    const listPxx = [];\n    for (let incr = 0; incr < listConsultant.length; incr++) {\n\n        let pxx = [];\n\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].name,\n            userId: listConsultant[incr]._id,\n            information: \"consultantName\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].arrival,\n            userId: listConsultant[incr]._id,\n            information: \"consultantArrivalDate\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].leaving,\n            userId: listConsultant[incr]._id,\n            information: \"consultantLeavingDate\"\n        });\n        pxx.push({\n            type: \"lineInformation\",\n            value: listConsultant[incr].seniority,\n            userId: listConsultant[incr]._id,\n            information: \"consultantSeniority\"\n        });\n\n        for (let incrMonth = 0; incrMonth < pxxInfo.data.length; incrMonth++) {\n\n            let val = pxxData.data.filter(x => (x.name._id === listConsultant[incr]._id && x.month._id === pxxInfo.data[incrMonth]._id))[0];\n            if (val.length > 1) {\n                throw new Error({ message: 'number of value can not be up to 1' })\n            }\n            pxx.push({\n                type: \"day\",\n                value: val.prodDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'productionDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.notProdDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'notProductionDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.leavingDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'leavingDay'\n            });\n            pxx.push({\n                type: \"day\",\n                value: val.availableDay,\n                userId: listConsultant[incr]._id,\n                pxxId: pxxInfo.data[incrMonth]._id,\n                information: 'availableDay'\n            });\n        }\n\n        listPxx.push(pxx);\n    }\n\n    return listPxx;\n\n}\n\nconst transformPxxMonthInfoToDisplay = (pxxInfo) => {\n    const pxxMonthInfoList = []\n    const firstLine = [];\n    const secondLine = [];\n\n    for (let incr = 0; incr < pxxInfo.data.length; incr++){\n        \n        firstLine.push({\n            name: pxxInfo.data[incr].name,\n            value: pxxInfo.data[incr].workingday\n        });\n        firstLine.push({ name:'', value:'' });\n        firstLine.push({ name:'', value:'' });\n        firstLine.push({ name:'', value:'' });\n    }\n\n    for (let incr = 0; incr < pxxInfo.data.length; incr++){\n        secondLine.push({ name:'Prod', value: 'P'});\n        secondLine.push({ name: 'Not Prod', value: 'NP'});\n        secondLine.push({ name: 'Hollidays', value: 'H'});\n        secondLine.push({ name: 'Availability', value: 'A'});\n    }\n    pxxMonthInfoList.push(firstLine, secondLine);\n\n    return pxxMonthInfoList;\n}\n\nexport const getPxxList = (searchDate, numberOfMonth) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        \n        const pxxInfo = await axios.get(`/api/monthdata?searchdate=${searchDate}&numberofmonths=${numberOfMonth}`);\n        const pxxMonthInfoList = transformPxxMonthInfoToDisplay(pxxInfo);\n\n        let monthId = \"\";\n        for (let incr = 0; incr < pxxInfo.data.length; incr++) {\n            if (incr === 0) {\n                monthId = pxxInfo.data[incr]._id;\n            }\n            monthId = monthId + '_' + pxxInfo.data[incr]._id;\n        }\n\n        const pxxData = await axios.get(`/api/pxx/${monthId}`, config);\n        const listPxx = transformListPxxToDisplay(pxxData, pxxInfo);\n\n        dispatch({ type: PXX_LIST_SUCCESS, payload: { pxxMonthInformation: pxxMonthInfoList, pxxUserList: listPxx } });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getTace = (practice, start, end) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_TACE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.get(`/api/pxx/chart/tace?practice=${practice}&start=${start}&end=${end}`, config);\n\n        dispatch({ type: PXX_TACE_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_TACE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAvailabilities = (practice='', start, end, skills='', experienceStart='', experienceEnd='', searchMode) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_AVAILABILITIES_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        let searchExperience = experienceStart.toString();\n        if (experienceEnd) {\n            searchExperience = searchExperience + '-' + experienceEnd.toString()\n        }\n\n        const { data } = await axios.get(`/api/pxx/chart/availability?practice=${practice}&start=${start}&end=${end}&skills=${skills}&experience=${searchExperience}&filterMode=${searchMode}`, config);\n\n        dispatch({ type: PXX_AVAILABILITIES_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_AVAILABILITIES_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllPxx = (practice = '', month = '', keywork = '', pageSize = '10', pageNumber = '1') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_ALL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.get(`/api/pxx?practice=${practice}&month=${month}&keyword=${keywork}&pageSize=${pageSize}&pageNumber=${pageNumber}`, config);\n\n        dispatch({ type: PXX_ALL_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_ALL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n/* export const pxxImportInMass = (datas) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_IMPORT_MASS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.put(`/api/pxx/admin/mass-import`, datas, config);\n\n        dispatch({ type: PXX_IMPORT_MASS_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_IMPORT_MASS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}; */\n\nexport const pxxUpdateALine = (line) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_IMPORT_LINE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.put(`/api/pxx/admin/line-import`, line, config);\n\n        dispatch({ type: PXX_IMPORT_LINE_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_IMPORT_LINE_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};\n\nexport const pxxUploadFiles = (files) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPLOAD_FILE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                \"Content-Type\": \"application/vnd.ms-excel\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        let result = '';\n        for (let incr=0 ; incr < files.length ; incr++) {\n            const file = files[incr];\n            const { data } = await axios.post(`/api/upload/pxx`, file, config);\n            result = data;\n        }\n\n\n        dispatch({ type: PXX_UPLOAD_FILE_SUCCESS, payload: result });\n\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPLOAD_FILE_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};\n\nexport const updatePxxFiles = (path) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: PXX_UPDATE_PXX_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/pxx/admin/line-import-wk`, path, config);\n\n        dispatch({ type: PXX_UPDATE_PXX_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: PXX_UPDATE_PXX_FAIL,\n            payload: {\n                message: error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n            }\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { updatePxx } from '../actions/pxxActions';\n\nconst PxxUserLine = ({ data }) => {\n\n    const dispatch = useDispatch();\n\n    const [prodDayComponent, setProdDayComponent] = useState(Number(data.prodDay) || 0);\n    const [notProdDayComponent, setNotProdDayComponent] = useState(Number(data.notProdDay) || 0);\n    const [leavingDayComponent, setLeavingDayComponent] = useState(Number(data.leavingDay) || 0);\n    const [availableDayComponent, setAvailableDayComponent] = useState(Number(data.availableDay) || 0);\n    const [workingDay] = useState(Number(data.prodDay) + Number(data.notProdDay) + Number(data.leavingDay) + Number(data.availableDay));\n\n    const [hasChange, setHasChange] = useState(false);\n\n    // Calculate firstday of current month to compare with firstDayMonth of displayed Pxx\n    let firstDayOfCurrentMonth = new Date(Date.now());\n    firstDayOfCurrentMonth.setDate(1);\n    firstDayOfCurrentMonth = firstDayOfCurrentMonth.toISOString().substring(0, 10);\n\n    const editable = data.month ? (data.month.firstDay >= firstDayOfCurrentMonth) : false;\n\n    useEffect(() => {\n        if (hasChange && workingDay >= (prodDayComponent + notProdDayComponent + leavingDayComponent)) {\n            setAvailableDayComponent(workingDay - (prodDayComponent + notProdDayComponent + leavingDayComponent))\n            dispatch(updatePxx({\n                _id: data._id,\n                name: data.name,\n                month: data.month._id,\n                prodDay: prodDayComponent,\n                notProdDay: notProdDayComponent,\n                leavingDay: leavingDayComponent,\n                availableDay: workingDay - (prodDayComponent + notProdDayComponent + leavingDayComponent)\n            }));\n            setHasChange(false);\n        }\n    // eslint-disable-next-line\n    },[workingDay, prodDayComponent, notProdDayComponent, leavingDayComponent, data]);\n\n    return (\n        <>\n            <Row className=\"py-1\">\n                <Col xs={4} className=\"text-center align-middle\"><b>{data.month ? data.month.name : 'Not created Yeat'}</b> <i>{workingDay ? `(${workingDay}d)` : null}</i></Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <FormControl\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - notProdDayComponent - leavingDayComponent) ? (workingDay - notProdDayComponent - leavingDayComponent) : '-'}\n                            step={0.5}\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={prodDayComponent && prodDayComponent.toString()}\n                            onChange={(e) => {\n                                setProdDayComponent(Number(e.target.value));\n                                setHasChange(true);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <FormControl\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - prodDayComponent - leavingDayComponent) ? (workingDay - prodDayComponent - leavingDayComponent) : '-'}\n                            step={0.5}\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={notProdDayComponent && notProdDayComponent.toString()}\n                            onChange={(e) => {\n                                if (!e.target.value.toString().match(/[0-9]*[,.]$/g)) {\n                                    setNotProdDayComponent(Number(e.target.value));\n                                    setHasChange(true);\n                                }\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <FormControl\n                            type=\"number\"\n                            min={0}\n                            max={(workingDay - prodDayComponent - notProdDayComponent) ? (workingDay - prodDayComponent - notProdDayComponent) : '-'}\n                            step={0.5}\n                            disabled={!editable || !workingDay}\n                            className=\"align-middle text-center p-0\"\n                            value={leavingDayComponent && leavingDayComponent.toString()}\n                            onChange={(e) => {\n                                setLeavingDayComponent(Number(e.target.value));\n                                setHasChange(true);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n                <Col xs={2} className=\"text-center align-middle px-1\">\n                    <InputGroup>\n                        <FormControl\n                            type=\"number\"\n                            min={0}\n                            max={workingDay ? workingDay : '-'}\n                            step={0.5}\n                            className=\"align-middle text-center p-0\"\n                            value={availableDayComponent && availableDayComponent.toString()}\n                            disabled\n                        />\n                    </InputGroup>\n                </Col>\n\n            </Row>\n        </>\n    )\n}\n\nexport default PxxUserLine;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport PxxUserLine from '../components/PxxUserLine';\nimport { getMyConsultantPxxToEdit } from '../actions/pxxActions';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst PxxEditor = ({ consultantsMy, consultantFocus, searchDate, navigationMonthHandler }) => {\n\n    const dispatch = useDispatch();\n\n    const [numberOfMonth] = useState(5);\n\n    const pxxMyToEdit = useSelector(state => state.pxxMyToEdit);\n    const { loading: loadingPxx, error: errorPxx, pxx } = pxxMyToEdit;\n\n    const pxxUpdate = useSelector(state => state.pxxUpdate);\n    const { loading: loadingUpdate, error: errorUpdate } = pxxUpdate;\n\n    let consultantId = consultantsMy[consultantFocus]._id;\n    \n    useEffect(() => {\n\n        // Effect when loading component and each time entry parameters change\n        dispatch(getMyConsultantPxxToEdit(consultantId, searchDate, numberOfMonth));\n    }, [dispatch, searchDate, numberOfMonth, consultantId]);\n\n    return (\n        <ListGroup.Item>\n\n            <Row>\n                <Col xs={4} className='text-center align-middle'>\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                        style={{width: '8em'}}\n                    ><i className=\"fas fa-caret-up\"></i>  Previous</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={4} className=\"text-center align-middle px-1 pb-2\" style={{height: '2em'}}> {loadingUpdate && <Loader />}</Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Prd</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>NPrd</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Hld</strong></Col>\n                <Col xs={2} className=\"text-center align-middle px-1 pb-2\"><strong>Avlb</strong></Col>\n            </Row>\n\n            {loadingPxx ? <Loader /> : errorPxx ? <Message variant=\"danger\">{errorPxx}</Message> : (\n                pxx.map((line, key) => (\n                        <PxxUserLine\n                            key={key}\n                            data={line}\n                        />\n                ))\n            )}\n\n            {errorUpdate && (\n                <Row><Message variant='danger'>{errorUpdate}</Message></Row>\n            )}\n            \n            <Row>\n                <Col xs={4} className='text-center align-middle'>\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                        style={{width: '8em'}}\n                    >Next  <i className=\"fas fa-caret-down\"></i></Button>\n                </Col>\n                {/* <Col xs={6} md={2} className=\"text-right\">\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                        block\n                    ><i className=\"fas fa-caret-left\"></i>  Previous</Button>\n                </Col>\n                <Col xs={6} md={2} className=\"text-left\">\n                    <Button\n                        className='btn btn-primary mt-3'\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                        block\n                    >Next  <i className=\"fas fa-caret-right\"></i></Button>\n                </Col>\n                <Col xs={0} md={2}></Col> */}\n            </Row>\n\n        </ListGroup.Item>\n    )\n}\n\nexport default PxxEditor;\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst DropDownTitleContainer = ({children, title, close}) => {\n\n    const [hide, setHide] = useState(close);\n\n    return (\n        <Row className='mt-3'>\n            <Col>\n                <Button\n                    onClick={() => setHide(!hide)}\n                    variant='light'\n                    className='text-left'\n                    block\n                > <h3>{hide ? (\n                    <><i className=\"fas fa-caret-down\"></i> {title}</>\n                ) : (\n                        <><i className=\"fas fa-caret-up\"></i> {title}</>\n                    )}</h3></Button>\n\n                {!hide && children}\n            </Col>\n        </Row>\n    )\n}\n\nDropDownTitleContainer.defaultProps = {\n    close: true\n};\n\nexport default DropDownTitleContainer\n","import axios from 'axios';\nimport {\n    CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n    CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST,\n    CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS,\n    CONSULTANTS_MY_DETAILS_FAIL,\n    CONSULTANTS_MY_DETAILS_FOCUS,\n    CONSULTANTS_MY_DETAILS_REQUEST,\n    CONSULTANTS_MY_DETAILS_SUCCESS,\n    CONSULTANT_MY_FAIL,\n    CONSULTANT_MY_REQUEST,\n    CONSULTANT_MY_SUCCESS,\n    CONSULTANT_MY_UPDATE_FAIL,\n    CONSULTANT_MY_UPDATE_REQUEST,\n    CONSULTANT_MY_UPDATE_SUCCESS,\n    CONSULTANT_CREATE_REQUEST,\n    CONSULTANT_CREATE_SUCCESS,\n    CONSULTANT_CREATE_FAIL,\n    CONSULTANT_CDM_LIST_REQUEST,\n    CONSULTANT_CDM_LIST_SUCCESS,\n    CONSULTANT_CDM_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_REQUEST,\n    CONSULTANT_PRACTICE_LIST_FAIL,\n    CONSULTANT_PRACTICE_LIST_SUCCESS,\n    CONSULTANT_DELETE_REQUEST,\n    CONSULTANT_DELETE_FAIL,\n    CONSULTANT_DELETE_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_REQUEST,\n    CONSULTANT_UPDATE_COMMENT_SUCCESS,\n    CONSULTANT_UPDATE_COMMENT_FAIL,\n    //CONSULTANT_ALL_ACCESS_REQUEST,\n    //CONSULTANT_ALL_ACCESS_SUCCESS,\n    //CONSULTANT_ALL_ACCESS_FAIL,\n    CONSULTANT_ALL_SKILLS_REQUEST,\n    CONSULTANT_ALL_SKILLS_SUCCESS,\n    CONSULTANT_ALL_SKILLS_FAIL,\n    CONSULTANT_ADD_SKILL_REQUEST,\n    CONSULTANT_ADD_SKILL_SUCCESS,\n    CONSULTANT_ADD_SKILL_FAIL,\n    CONSULTANT_DELETE_SKILL_REQUEST,\n    CONSULTANT_DELETE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_REQUEST,\n    CONSULTANT_UPDATE_SKILL_FAIL,\n    CONSULTANT_UPDATE_SKILL_SUCCESS,\n    CONSULTANT_ALL_STAFF_REQUEST,\n    CONSULTANT_ALL_STAFF_SUCCESS,\n    CONSULTANT_ALL_STAFF_FAIL,\n    CONSULTANT_DELETE_SKILL_SUCCESS,\n    CONSULTANT_SKILLS_REQUEST,\n    CONSULTANT_SKILLS_FAIL,\n    CONSULTANT_SKILLS_SUCCESS,\n    CONSULTANT_CDM_REQUEST,\n    CONSULTANT_CDM_SUCCESS,\n    CONSULTANT_CDM_FAIL,\n    CONSULTANTS_ALL_LEADERS_REQUEST,\n    CONSULTANTS_ALL_LEADERS_SUCCESS,\n    CONSULTANTS_ALL_LEADERS_FAIL,\n    CONSULTANT_MASS_IMPORT_REQUEST,\n    CONSULTANT_MASS_IMPORT_SUCCESS,\n    CONSULTANT_MASS_IMPORT_FAIL,\n    CONSULTANT_UPLOAD_WK_REQUEST,\n    CONSULTANT_UPLOAD_WK_SUCCESS,\n    CONSULTANT_UPLOAD_WK_FAIL,\n    CONSULTANT_UPDATE_WK_REQUEST,\n    CONSULTANT_UPDATE_WK_SUCCESS,\n    CONSULTANT_UPDATE_WK_FAIL,\n    CONSULTANT_DELEGATE_UPDATE_REQUEST,\n    CONSULTANT_DELEGATE_UPDATE_SUCCESS,\n    CONSULTANT_DELEGATE_UPDATE_FAIL\n} from '../constants/consultantConstants';\n\nexport const getAllMyConsultants = (option = '') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANTS_MY_DETAILS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants?option=${option}`, config);        \n\n        dispatch({ type: CONSULTANTS_MY_DETAILS_SUCCESS, payload: data });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANTS_MY_DETAILS_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const setConsultantFocus = (focus) => async(dispatch) => {\n    dispatch({type: CONSULTANTS_MY_DETAILS_FOCUS, payload: focus});\n}\n\nexport const getMyConsultant = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MY_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_MY_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateMyConsultant = (consultant) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MY_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/${consultant._id}`, consultant, config);\n        if (!data) {\n            throw new Error('Error: your modification is not saved')\n        }\n\n        dispatch({ type: CONSULTANT_MY_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MY_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateDelegateConsultant = (consultantId, delegation) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELEGATE_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/delegate/${consultantId}`, delegation, config);\n        if (!data) {\n            throw new Error('Error: your modification is not saved')\n        }\n\n        dispatch({ type: CONSULTANT_DELEGATE_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_DELEGATE_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const createConsultant = (consultant) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/consultants', consultant, config);\n\n        dispatch({ type: CONSULTANT_CREATE_SUCCESS, payload: data });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANT_CREATE_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const deleteConsultant = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/consultants/${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_DELETE_SUCCESS });\n\n} catch (error) {\n    dispatch({\n        type: CONSULTANT_DELETE_FAIL,\n        payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n    });\n}\n};\n\nexport const getAllCDM = (practice) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CDM_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/cdm/${practice}`, config);\n\n        dispatch({ type: CONSULTANT_CDM_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_CDM_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllPractice = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_PRACTICE_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/practicelist`, config);\n\n        dispatch({ type: CONSULTANT_PRACTICE_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_PRACTICE_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllStaffs = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_ALL_STAFF_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/staffings?consultantId=${consultantId}`, config);\n\n        dispatch({ type: CONSULTANT_ALL_STAFF_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ALL_STAFF_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateComment = (consultantId, commentText) => async(dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CONSULTANT_UPDATE_COMMENT_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        await axios.put(`/api/consultants/comment/${consultantId}`, {commentText}, config);\n\n        dispatch({ type: CONSULTANT_UPDATE_COMMENT_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_UPDATE_COMMENT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllLeaders = (searchValue='') => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANTS_ALL_LEADERS_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/leaderslist?searchLeader=${searchValue}`, config);\n\n        dispatch({ type: CONSULTANTS_ALL_LEADERS_SUCCESS, payload: data });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANTS_ALL_LEADERS_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const getAllMyAdminConsultants = (keyword = '', pageNumber = '', pageSize = '15') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANTS_ALL_ADMIN_DETAILS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/admin/consultants?keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        \n        dispatch({ type: CONSULTANTS_ALL_ADMIN_DETAILS_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANTS_ALL_ADMIN_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getConsultantCdm = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_CDM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}/cdm`, config);\n\n        dispatch({ type: CONSULTANT_CDM_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_CDM_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getConsultantSkills = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_SKILLS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/${consultantId}/skill`, config);\n\n        dispatch({ type: CONSULTANT_SKILLS_SUCCESS, payload: data.quality });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_SKILLS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllConsultantSkills = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_ALL_SKILLS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/consultants/skills`, config);\n\n        dispatch({ type: CONSULTANT_ALL_SKILLS_SUCCESS, payload: data.skills });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ALL_SKILLS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantAddASkill = (consultantId, skillId, level) => async (dispatch, getState) => {\n\n    //console.log(\"consultantId\", consultantId, 'skillId', skillId, 'level', level);\n\n    try {\n        const skill = {\n            skill: skillId,\n            level: level\n        }\n\n        dispatch({ type: CONSULTANT_ADD_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/${consultantId}/skill`, skill, config);\n\n        dispatch({ type: CONSULTANT_ADD_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_ADD_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantDeleteSkill = (consultantId, skillId) => async (dispatch, getState) => {\n\n    //console.log(\"consultantId\", consultantId, 'skillId', skillId);\n\n    try {\n\n        dispatch({ type: CONSULTANT_DELETE_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/consultants/${consultantId}/skill/${skillId}`, config);\n\n        dispatch({ type: CONSULTANT_DELETE_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_DELETE_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantUpdateASkillLevel = (consultantId, skillId, level) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_UPDATE_SKILL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/${consultantId}/skill/${skillId}`, { level }, config);\n\n        dispatch({ type: CONSULTANT_UPDATE_SKILL_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_UPDATE_SKILL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const consultantImportInMass = (data) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CONSULTANT_MASS_IMPORT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/consultants/admin/mass-import`, data, config);\n\n        dispatch({ type: CONSULTANT_MASS_IMPORT_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: CONSULTANT_MASS_IMPORT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const uploadConsultantWk = (file) => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANT_UPLOAD_WK_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/upload/consultant`, file, config);\n\n        dispatch({ type: CONSULTANT_UPLOAD_WK_SUCCESS, payload: data });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANT_UPLOAD_WK_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const updateConsultantWk = (path) => async (dispatch, getState) => {\n    try {\n        dispatch({type: CONSULTANT_UPDATE_WK_REQUEST})\n        \n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                'responseType': 'stream',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/consultants/admin/wk`, path, config);\n        /* axios.put(`/api/consultants/admin/wk`, path, config)\n            .then((response) => {\n                response.data.pipe(fs.createWriteStream(\"tempsfile.txt\"))\n            })\n            .catch(error => console.log(error)); */\n        \n        dispatch({ type: CONSULTANT_UPDATE_WK_SUCCESS, payload: data });\n        //dispatch({ type: CONSULTANT_UPDATE_WK_SUCCESS, payload: 'OK' });\n\n        \n    } catch (error) {\n\n        dispatch({ \n            type: CONSULTANT_UPDATE_WK_FAIL, \n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport { setConsultantFocus } from '../actions/consultantActions';\nimport Button from 'react-bootstrap/Button';\n\nconst ConsultantsTab = ({ history, consultantsMy, focusActive }) => {\n\n    const dispatch = useDispatch();\n\n    const onClickHandler = (focus, consultantId) => {\n        focusActive && dispatch(setConsultantFocus(focus));\n        //focusActive && setFocus(focus);\n        history.push(`/editconsultant/${consultantId}`);\n    };\n\n    return (\n\n        <Table responsive hover striped className='mt-3'>\n            <thead>\n                <tr className='table-light'>\n                    <th className='align-middle text-dark'>Consultant name</th>\n                    <th className='align-middle text-dark'>Matricule</th>\n                    <th className='align-middle text-dark'>Practice</th>\n                    <th className='align-middle text-dark'>Valued</th>\n                    <th className='align-middle text-dark'>Arrival</th>\n                    <th className='align-middle text-dark'>Leaving</th>\n                    <th className='align-middle text-dark'>Seniority</th>\n                    <th className='align-middle text-dark'>Comment</th>\n                    <th className='align-middle text-dark'></th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {consultantsMy.map((consultant, focus) => (\n                    <tr key={consultant._id} onClick={() => focusActive && dispatch(setConsultantFocus(focus))}>\n                        <td className='align-middle'>{consultant.name}</td>\n                        <td className='align-middle'>{consultant.matricule}</td>\n                        <td className='align-middle'>{consultant.practice}</td>\n                        <td className='align-middle'>{consultant.valued ? consultant.valued.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{consultant.arrival ? consultant.arrival.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{consultant.leaving ? consultant.leaving.substring(0,10) : ''}</td>\n                        <td className='align-middle'>{\n                                consultant.valued ? ((new Date(Date.now()) - new Date(consultant.valued.substring(0,10)))/(1000*3600*24*365.25)).toString().substring(0,4) : 0\n                            } years</td>\n                        <td className='align-middle'>{consultant.comment}</td>\n                        <td className='align-middle'>\n                            <Button className='btn btn-light p-1' onClick={() => onClickHandler(focus, consultant._id)}>\n                                <i className=\"fas fa-user-edit\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default ConsultantsTab;\n","import React from 'react'\nimport { Helmet } from 'react-helmet';\n\nconst Meta = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Performance App'\n}\n\nexport default Meta\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Loader from './Loader';\nimport { getAllStaffs } from '../actions/consultantActions';\n\nconst ViewStaffs = ({ history, consultantId, displayedDeal = '', onNavigate = () => ('') }) => {\n\n    const dispatch = useDispatch();\n    const consultantAllStaffs = useSelector(state => state.consultantAllStaffs);\n    const { loading, staffings } = consultantAllStaffs;\n\n    useEffect(() => {\n        if (consultantId) {\n            dispatch(getAllStaffs(consultantId));\n        }\n    }, [dispatch, consultantId]);\n\n    return (\n        <Row>\n            <Col>\n                {loading && <Loader />}\n                <Table responsive hover striped className='mt-3'>\n                    <thead>\n                        <tr className='table-light'>\n                            <th className='align-middle text-dark'>Company</th>\n                            <th className='align-middle text-dark'>Title</th>\n                            <th className='align-middle text-dark'>Practice</th>\n                            <th className='align-middle text-dark'>Probability</th>\n                            <th className='align-middle text-dark'>Start</th>\n                            <th className='align-middle text-dark'>Deal status</th>\n                            <th className='align-middle text-dark'>Request status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {staffings && staffings.map(deal => (deal._id.toString() !== displayedDeal.toString()) && (\n                            <tr key={deal._id}>\n                                <td className='align-middle'>{deal.company}</td>\n                                <td className='align-middle'>{deal.title}</td>\n                                <td className='align-middle'>{deal.mainPractice}</td>\n                                <td className='align-middle'>{deal.probability} %</td>\n                                <td className='align-middle'>{deal.startDate.substring(0, 10)}</td>\n                                <td className='align-middle'>{deal.status}</td>\n                                <td className='align-middle'>{deal.requestStatus}</td>\n                                <td className='align-middle'>\n                                        <Button\n                                            onClick={() => {\n                                                history.push(`/staffing/${deal._id}`);\n                                                onNavigate();\n                                            }}\n                                            variant='light'\n                                        ><i className=\"fas fa-edit\"></i></Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ViewStaffs;\n","import axios from 'axios';\nimport { \n    DEAL_ALL_LIST_FAIL,\n    DEAL_ALL_LIST_REQUEST,\n    DEAL_ALL_LIST_SUCCESS,\n    DEAL_CREATE_FAIL, \n    DEAL_CREATE_REQUEST, \n    DEAL_CREATE_SUCCESS, \n    DEAL_DELETE_FAIL, \n    DEAL_DELETE_REQUEST,\n    DEAL_DELETE_SUCCESS,\n    DEAL_EDIT_FAIL,\n    DEAL_EDIT_REQUEST,\n    DEAL_EDIT_SUCCESS,\n    DEAL_MASS_IMPORT_FAIL,\n    DEAL_MASS_IMPORT_REQUEST,\n    DEAL_MASS_IMPORT_SUCCESS,\n    DEAL_OLD_FAIL,\n    DEAL_OLD_REQUEST,\n    DEAL_OLD_SUCCESS,\n    DEAL_UPDATE_FAIL,\n    DEAL_UPDATE_REQUEST,\n    DEAL_UPDATE_SUCCESS\n} from '../constants/dealConstants';\n\n\nexport const createDeal = (deal) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/deals`, deal, config);\n\n       dispatch({ type: DEAL_CREATE_SUCCESS, payload: data._id });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateDeal = (dealId, deal) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/deals/${dealId}`, deal, config);\n\n       dispatch({ type: DEAL_UPDATE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getAllDeals = (keyword, pageNumber = 1, pageSize = 20, state = '', filter = '') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_ALL_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals?title=${keyword.title}&company=${keyword.company}&contact=${keyword.contact}&status=${keyword.status}&request=${keyword.request}&pageNumber=${pageNumber}&pageSize=${pageSize}&state=${state}&filterMy=${keyword.filterMy}&staff=${keyword.staff}`, config);\n\n       dispatch({ type: DEAL_ALL_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_ALL_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteDeal = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        //await axios.delete(`/api/deals?id=${id}`, config);\n        await axios.delete(`/api/deals/${id}`, config);\n\n       dispatch({ type: DEAL_DELETE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getDealToEdit = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_EDIT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals/${id}`, config);\n\n       dispatch({ type: DEAL_EDIT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const getOldDeals = (consultantId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_OLD_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/deals/old?consultantId=${consultantId}`, config);\n\n       dispatch({ type: DEAL_OLD_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_OLD_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const dealsImportInMass = (datas) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: DEAL_MASS_IMPORT_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/deals/admin/mass-import`, datas, config);\n\n       dispatch({ type: DEAL_MASS_IMPORT_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: DEAL_MASS_IMPORT_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Loader from './Loader';\nimport { getOldDeals } from '../actions/dealActions';\n\nconst ViewOldStaffs = ({ history, consultantId, displayedDeal = '', onNavigate = () => ('') }) => {\n\n    const dispatch = useDispatch();\n\n    const dealOld = useSelector(state => state.dealOld);\n    const { loading, oldDeals } = dealOld;\n\n    /*const consultantAllStaffs = useSelector(state => state.consultantAllStaffs);\n    const { loading, staffings } = consultantAllStaffs;*/\n\n    useEffect(() => {\n        if (consultantId) {\n            dispatch(getOldDeals(consultantId));\n        }\n    }, [dispatch, consultantId]);\n\n    return (\n        <Row>\n            <Col>\n                {loading && <Loader />}\n                <Table responsive hover striped className='mt-3'>\n                    <thead>\n                        <tr className='table-light'>\n                            <th className='align-middle text-dark'>Company</th>\n                            <th className='align-middle text-dark'>Title</th>\n                            <th className='align-middle text-dark'>Practice</th>\n                            <th className='align-middle text-dark'>Probability</th>\n                            <th className='align-middle text-dark'>Start</th>\n                            <th className='align-middle text-dark'>Deal status</th>\n                            <th className='align-middle text-dark'>Request status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {oldDeals && oldDeals.map(deal => (\n                            <tr key={deal._id}>\n                                <td className='align-middle'>{deal.company}</td>\n                                <td className='align-middle'>{deal.title}</td>\n                                <td className='align-middle'>{deal.mainPractice}</td>\n                                <td className='align-middle'>{deal.probability} %</td>\n                                <td className='align-middle'>{deal.startDate.substring(0, 10)}</td>\n                                <td className='align-middle'>{deal.status}</td>\n                                <td className='align-middle'>{deal.staffingRequest.requestStatus}</td>\n                                <td className='align-middle'>\n                                        <Button\n                                            onClick={() => {\n                                                history.push(`/staffing/${deal._id}`);\n                                                onNavigate();\n                                            }}\n                                            variant='light'\n                                        ><i className=\"fas fa-edit\"></i></Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ViewOldStaffs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nconst Rating = ({ value, setValue, text, color, editable }) => {\n\n    const valueList = [...new Array(Math.floor(value)).fill(1)];\n    if (value % 1 >= 0.5) {\n        valueList.push(value % 1)\n    }\n    while (valueList.length < 5) {\n        valueList.push(0)\n    }\n\n    return (\n        \n            <Form.Group className='mb-0'>\n                <InputGroup>\n                    {valueList && valueList.map((x, val) => (\n                        <span key={val}>\n                            <Button\n                                className='mx-0 px-0'\n                                variant='ligth'\n                                onClick={() => { editable && (\n                                    x >= 1\n                                        ? setValue(val)\n                                        : x >= 0.5\n                                            ? setValue(val + 1)\n                                            : setValue(val + 0.5)\n                                )}}\n                            ><i style={{ color }}\n                                className={\n                                    x >= 1\n                                        ? 'fas fa-star'\n                                        : x >= 0.5\n                                            ? 'fas fa-star-half-alt'\n                                            : 'far fa-star'\n                                }>\n                                </i></Button>\n\n                        </span>\n                    ))}\n                    <span>{text && text}</span>\n                </InputGroup>\n            </Form.Group>\n\n        \n\n    )\n};\n\nRating.defaultProps = {\n    color: '#f8e825',\n    text: '',\n    editable: true,\n};\n\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n};\n\nexport default Rating;","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { consultantAddASkill, consultantDeleteSkill, consultantUpdateASkillLevel, getAllConsultantSkills, getConsultantSkills } from '../actions/consultantActions';\nimport Rating from './Rating';\nimport { CONSULTANT_UPDATE_SKILL_RESET } from '../constants/consultantConstants';\n\nconst SkillsDetails = ({consultantId, close=true, editable=true}) => {\n\n    const dispatch = useDispatch();\n\n    const [skillCategory, setSkillCategory] = useState('default');\n    const [skillId, setSkillId] = useState('default');\n    const [skillLevel, setSkillLevel] = useState(1);\n    const [skillCategoryList, setSkillCategoryList] = useState([]);\n\n    const [qualityOrdonned, setQualityOrdonned] = useState([]);\n\n    const [update, setUpdate] = useState(false);\n\n\n    const consultantAllSkills = useSelector(state => state.consultantAllSkills);\n    const { skills: skillsAll } = consultantAllSkills;\n\n    const consultantSkills = useSelector(state => state.consultantSkills);\n    const { loading, skills } = consultantSkills;\n\n    const consultantAddSkill = useSelector(state => state.consultantAddSkill);\n    const { loading: loadingConsultantAddSkill, success: successConsultantAddSkill, error: errorConsultantAddSkill } = consultantAddSkill;\n\n    /* const consultantUpdateSkill = useSelector(state => state.consultantUpdateSkill);\n    const { error: errorConsultantUpdateSkill } = consultantUpdateSkill;\n\n    const consultantDeleteSkillReducer = useSelector(state => state.consultantDeleteSkill);\n    const { success: successConsultantDeleteSkill } = consultantDeleteSkillReducer; */\n\n    useEffect(() => {\n        if (!skillsAll) {\n            dispatch(getAllConsultantSkills());\n        }\n    }, [dispatch, skillsAll]);\n\n    useEffect(() => {\n        dispatch(getConsultantSkills(consultantId));\n        //if(!skills) {\n        //}\n    }, [dispatch, consultantId]);\n\n    useEffect(() => {\n        if (skills) {\n            //setQuality(skills)\n            const ordonnedSkills = orderSkills(skills);\n            setQualityOrdonned(ordonnedSkills);\n        }\n    }, [dispatch, skills, consultantId]);\n\n    useEffect(() => {\n        if(update && !loading) {\n            dispatch(getConsultantSkills(consultantId));\n            setUpdate(false);\n        }\n    }, [dispatch, update, consultantId, loading])\n\n    useEffect(() => {\n        if (skillsAll) {\n            let categoryList = skillsAll.map(x => x.category);\n            categoryList = [...new Set(categoryList)];\n            setSkillCategoryList(categoryList);\n        }\n    }, [skillsAll]);\n\n    useEffect(() => {\n        //if ((successConsultantAddSkill || successConsultantDeleteSkill)) {\n        if (successConsultantAddSkill) {\n            setUpdate(true);\n        }\n    }, [\n        successConsultantAddSkill,\n        //successConsultantDeleteSkill,\n    ]);\n\n    const orderSkills = (skills) => {\n        const categoryList = [...new Set(skills.map(x => x.skill.category))]\n        const orderSkills = []\n        for (let incr = 0 ; incr < categoryList.length ; incr++) {\n            orderSkills.push({\n                category: categoryList[incr],\n                data: skills.filter( x => x.skill.category === categoryList[incr])\n            })\n        }\n        return orderSkills;\n    }\n\n    const handleAddSkill = (consultantId, skillId, skillLevel) => {\n        dispatch(consultantAddASkill(consultantId, skillId, skillLevel));\n    }\n\n    /* const handlerDeleteConsultantSkill = (consultantId, skillId) => {\n        dispatch(consultantDeleteSkill(consultantId, skillId));\n    }\n\n    const handleUpdateSkillLevel = (consultantId, skillId, level) => {\n        dispatch(consultantUpdateASkillLevel(consultantId, skillId, level));\n    } */\n\n    return (\n\n        <DropDownTitleContainer title='Skills' close={close}>\n\n            {editable && (\n                <ListGroup.Item>\n                    <h4>Add skills</h4>\n\n                    <Form.Row className='mt-3 align-items-end'>\n                        <Col xs={12} md={3}>\n                            <Form.Group controlId='skillCategory'>\n                                <Form.Label><strong>Category</strong></Form.Label>\n                                <Form.Control\n                                    as='select'\n                                    value={skillCategory ? skillCategory : 'default'}\n                                    onChange={(e) => setSkillCategory(e.target.value)}\n                                    required\n                                >\n                                    <option value='default'>Please Select</option>\n                                    {skillCategoryList && (\n                                        skillCategoryList.map((x, val) => (\n                                            <option\n                                                value={x}\n                                                key={val}\n                                            >{x}</option>\n                                        )))}\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} >\n                            <Form.Group controlId='skillName'>\n                                <Form.Label><strong>Skill</strong></Form.Label>\n                                <OverlayTrigger\n                                    placement=\"top\"\n                                    overlay={<Tooltip id=\"button-tooltip-2\">{skillId && skillsAll ? skillsAll.map(x => (x._id === skillId) && x.description) : 'no description'}</Tooltip>}\n                                >\n                                    <Form.Control\n                                        as='select'\n                                        value={skillId ? skillId : 'default'}\n                                        onChange={(e) => setSkillId(e.target.value)}\n                                        required\n                                    >\n                                        <option value='default'>Please Select</option>\n                                        {skillsAll && skillCategory && (\n                                            skillsAll.map((x, val) => (\n                                                x.category === skillCategory && (\n                                                    <option\n                                                        value={x._id}\n                                                        key={val}\n                                                    >{x.name}</option>\n                                                )\n                                            )))}\n\n                                    </Form.Control>\n                                </OverlayTrigger>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} >\n                            <Form.Group controlId='skillLevel'>\n                                <Form.Label><strong>Level</strong></Form.Label>\n                                <Form.Control\n                                    type='number'\n                                    min={0}\n                                    max={5}\n                                    step={0.5}\n                                    value={skillLevel ? skillLevel : 1}\n                                    onChange={(e) => setSkillLevel(e.target.value)}\n                                    required\n                                ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={12} md={3} className='align-items-bottom'>\n                            <Form.Group>\n                                <InputGroup>\n                                    <Button\n                                        block\n                                        onClick={() => handleAddSkill(consultantId, skillId, skillLevel)}\n                                    >{loadingConsultantAddSkill ? <Loader /> : 'Add'}</Button>\n                                </InputGroup>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {/*errorConsultantUpdateSkill && <Message variant='danger'>{errorConsultantUpdateSkill}</Message>*/}\n                    {errorConsultantAddSkill && <Message variant='danger'>{errorConsultantAddSkill}</Message>}\n\n                </ListGroup.Item>\n\n            )}\n            \n            \n            <ListGroup.Item>\n                {qualityOrdonned && qualityOrdonned.length ? (\n                    <ListGroup variant='flush'>\n                        {qualityOrdonned.map((categoryList,val) => (\n                            <ListGroup.Item key={val}>\n                                <h4>{categoryList.category}</h4>\n                                {categoryList.data.map( (x,val) => (\n                                    <SkillDisplayLine \n                                        consultantId={consultantId}\n                                        key={val}\n                                        skill={x}\n                                        val={val}\n                                        //handleUpdateSkillLevel={handleUpdateSkillLevel}\n                                        //handlerDeleteConsultantSkill={handlerDeleteConsultantSkill}\n                                        setUpdate={setUpdate}\n                                        editable={editable}\n                                    />\n                                ))}\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                ) : <p>Please add quality</p>}\n            </ListGroup.Item>\n\n        </DropDownTitleContainer>\n    )\n}\n\nconst SkillDisplayLine = ({ \n    consultantId, \n    skill, \n    val, \n    //handleUpdateSkillLevel, \n    //handlerDeleteConsultantSkill, \n    setUpdate,\n    editable=true}) => {\n\n    const dispatch = useDispatch();\n\n    const consultantUpdateSkill = useSelector(state => state.consultantUpdateSkill);\n    const { success: successConsultantUpdateSkill } = consultantUpdateSkill;\n\n    const consultantDeleteSkillReducer = useSelector(state => state.consultantDeleteSkill);\n    const { success: successConsultantDeleteSkill } = consultantDeleteSkillReducer;\n    \n    const [level, setLevel] = useState(skill.level);\n    const [waitingValidationLevel, setWaitingValidationLevel] = useState(skill.level);\n\n    useEffect(() => {\n        if (successConsultantDeleteSkill) {\n            setUpdate(true);\n        }\n    }, [\n        successConsultantDeleteSkill,\n        setUpdate\n    ]);\n\n    useEffect(() => {\n        if (successConsultantUpdateSkill) {\n            setLevel(waitingValidationLevel);\n            dispatch({type: CONSULTANT_UPDATE_SKILL_RESET})\n        }\n    },[dispatch, successConsultantUpdateSkill, waitingValidationLevel])\n\n\n    const updateLevel = (newLevel) => {\n        \n        dispatch(consultantUpdateASkillLevel(consultantId, skill.skill._id, newLevel));\n        setWaitingValidationLevel(newLevel);\n\n        //handleUpdateSkillLevel(consultantId, skill.skill._id, newLevel)\n    }\n\n\n    const handlerDeleteConsultantSkill = (consultantId, skillId) => {\n        dispatch(consultantDeleteSkill(consultantId, skillId));\n    }   \n\n\n    return (\n        <>\n            {/*errorConsultantUpdateSkill && <Message variant='danger'>{errorConsultantUpdateSkill}</Message>*/}\n            <Form.Row key={val}>\n                <Col xs={3}>\n                    <Form.Group controlId='skillName' className='mb-0'>\n                        <Form.Control\n                            plaintext\n                            readOnly\n                            value={skill.skill && skill.skill.name}\n                        ></Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Rating\n                        value={Number(level)}\n                        setValue={updateLevel}\n                        editable={editable}\n                    />\n                </Col>\n\n                <Col>\n                    {editable && (\n                        <Form.Group className='mb-0'>\n                            <InputGroup>\n                                <Button\n                                    //style={{color:'grey'}}\n                                    variant=\"secondary\"\n                                    size='sm'\n                                    onClick={() => handlerDeleteConsultantSkill(consultantId, skill.skill._id)}\n                                ><i className=\"fas fa-times-circle\"></i></Button>\n                            </InputGroup>\n                        </Form.Group>\n                    )}\n                </Col>\n            </Form.Row>\n        </>\n    )\n}\n\nexport default SkillsDetails\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PxxEditor from '../components/PxxEditor';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ConsultantsTab from '../components/ConsultantsTab';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport Loader from '../components/Loader';\nimport { getAllMyConsultants, updateComment, updateMyConsultant } from '../actions/consultantActions';\nimport { Container, FormControl, InputGroup } from 'react-bootstrap';\nimport { setConsultantFocus } from '../actions/consultantActions';\nimport ViewStaffs from '../components/ViewStaffs';\nimport ViewOldStaffs from '../components/ViewOldStaffs';\nimport SkillsDetails from '../components/SkillsDetails';\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst PxxEditScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const [commentText, setCommentText] = useState('');\n    const [trObjectives, setTrObjectives] = useState('');\n    const [myObjectives, setMyObjectives] = useState('');\n    const [delegateOption, setDelegationOption] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantsMyList = useSelector(state => state.consultantsMyList);\n    const { loading: loadingConsultantsMyList, error: errorConsultantsMyList, consultantsMy, focus } = consultantsMyList;\n\n    // const consultantMyUpdate = useSelector(state => state.consultantMyUpdate);\n    // const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = consultantMyUpdate;\n\n\n    const [searchDate, setSearchDate] = useState(new Date(Date.now()));\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n\n    useEffect(() => {\n        // Effect to start loading my consultants and then to update every time focus change\n        const option = delegateOption ? 'delegate' : '';\n        //console.log('option', option);\n        dispatch(getAllMyConsultants(option));\n    }, [dispatch, focus, delegateOption])\n\n    useEffect(() => {\n        if (consultantsMy) {\n            setCommentText(consultantsMy[focus].comment);\n            setMyObjectives(consultantsMy[focus].personalObjectives);\n            setTrObjectives(consultantsMy[focus].talentReviewObjectives);\n        }\n    }, [consultantsMy, focus]);\n\n    const navigationMonthHandler = (value) => {\n        const navigationDate = new Date(searchDate);\n        navigationDate.setMonth(navigationDate.getMonth() + value);\n        setSearchDate(navigationDate);\n    }\n\n    const navigationConsultantHandler = (value) => {\n\n        if (((focus + value) >= 0) && ((focus + value) < consultantsMy.length)) {\n            dispatch(setConsultantFocus(focus + value));\n        }\n    }\n\n    const updateCommentHandler = (consultantId, value) => {\n        dispatch(updateComment(consultantId, value));\n    }\n\n    return (\n\n        <Container>\n            <Meta />\n            {loadingConsultantsMyList ? <Loader /> :\n                errorConsultantsMyList ? <Message variant='danger'>{errorConsultantsMyList}</Message>\n                    : !consultantsMy || consultantsMy.length === 0 ?\n                        <Message variant='info'>You don't have consultant to edit yet</Message> : (\n                            <>\n                                <div className='border-bottom p-3'>\n                                    <Row>\n                                        <Col className=\"text-center\" xs={2}>\n                                            <Button\n                                                variant='primary'\n                                                size='sm'\n                                                onClick={() => navigationConsultantHandler(-1)}\n                                                disabled={focus === 0}\n                                            ><i className=\"fas fa-caret-left\"></i>\n                                            </Button>\n                                        </Col>\n                                        <Col className=\"text-center\" xs={8}>\n                                            <LinkContainer to={`/editconsultant/${consultantsMy[focus]._id}`}>\n                                                <Nav.Link>\n                                                    <h4>{consultantsMy[focus].name} <i>({consultantsMy[focus].matricule})</i></h4>\n                                                </Nav.Link>\n                                            </LinkContainer>\n                                        </Col>\n                                        <Col className=\"text-center\" xs={2}>\n                                            <Button\n                                                variant='primary'\n                                                size='sm'\n                                                onClick={() => navigationConsultantHandler(1)}\n                                                disabled={focus === consultantsMy.length - 1}\n                                            ><i className=\"fas fa-caret-right\"></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Row className='mt-3'>\n                                        <Col xs={12} md={4}>\n                                            <ListGroup>\n                                            <ListGroup.Item>\n                                                <Row className=\"my-3\">\n                                                    <Col className=\"text-left\"><b>Arrival:</b> {consultantsMy[focus].arrival && consultantsMy[focus].arrival.substring(0, 10)}</Col>\n                                                    <Col className=\"text-left\"><b>Valued:</b> {consultantsMy[focus].valued && consultantsMy[focus].valued.substring(0, 10)}</Col>\n                                                    <Col className=\"text-left\"><b>Leaving:</b> {consultantsMy[focus].leaving && consultantsMy[focus].leaving.substring(0, 10)}</Col>\n                                                </Row>\n                                                <Row className=\"my-3\">\n                                                    <Col><b>Seniority:</b> {((new Date(Date.now()) - new Date(consultantsMy[focus].arrival.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4)} years</Col>\n                                                </Row>\n\n                                                <Row className=\"my-3\">\n                                                    <Col>\n                                                        {!(consultantsMy[focus]._id === userInfo.consultantProfil._id) && (\n                                                            <>\n                                                                <label htmlFor=\"comment\"><strong>Staffing comment</strong></label>\n                                                                <InputGroup>\n                                                                    <FormControl\n                                                                        as='textarea'\n                                                                        rows={7}\n                                                                        id='comment'\n                                                                        value={commentText}\n                                                                        placeholder='Please enter a comment'\n                                                                        onChange={(e) => {\n                                                                            setCommentText(e.target.value);\n                                                                            updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                                        }}\n                                                                    ></FormControl>\n                                                                </InputGroup>\n                                                            </>\n                                                        )}\n\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            </ListGroup>\n                                        </Col>\n\n                                        <Col xs={12} md={8}>\n                                            <PxxEditor\n                                                consultantsMy={consultantsMy}\n                                                consultantFocus={focus}\n                                                searchDate={searchDate}\n                                                navigationMonthHandler={navigationMonthHandler}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                                <div className='border-bottom p-3'>\n                                    <Row>\n                                        <Col xs={12} md={6}>\n                                            <label htmlFor=\"personal-objectives\"><strong>My personal objectives</strong></label>\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    rows={3}\n                                                    id='personal-objectives'\n                                                    value={myObjectives}\n                                                    placeholder='Please enter a comment'\n                                                    onChange={(e) => {\n                                                        setMyObjectives(e.target.value);\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            personalObjectives: e.target.value,\n                                                            talentReviewObjectives: trObjectives\n                                                        }));\n                                                        //updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                    }}\n                                                ></FormControl>\n                                            </InputGroup>\n                                        </Col>\n                                        <Col xs={12} md={6}>\n                                        <label htmlFor=\"personal-objectives\"><strong>My annual objectives</strong></label>\n                                            <InputGroup>\n                                                <FormControl\n                                                    as='textarea'\n                                                    rows={3}\n                                                    id='personal-objectives'\n                                                    value={trObjectives}\n                                                    placeholder='Please enter a comment'\n                                                    onChange={(e) => {\n                                                        setTrObjectives(e.target.value);\n                                                        dispatch(updateMyConsultant({\n                                                            ...consultantsMy[focus], \n                                                            personalObjectives: myObjectives,\n                                                            talentReviewObjectives: e.target.value,\n                                                        }))\n                                                        //updateCommentHandler(consultantsMy[focus]._id, e.target.value)\n                                                    }}\n                                                ></FormControl>\n                                            </InputGroup>\n                                        </Col>\n                                    </Row>\n                                </div>\n\n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewStaffings'>\n                                            <DropDownTitleContainer title='Staffings on track' close={false}>\n                                                <ViewStaffs\n                                                    history={history}\n                                                    consultantId={consultantsMy[focus]._id}\n                                                />\n                                            </DropDownTitleContainer>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col>\n                                        <DropDownTitleContainer title='Old staffings' close={true}>\n                                            <ViewOldStaffs\n                                                history={history}\n                                                consultantId={consultantsMy[focus]._id}\n                                            />\n                                        </DropDownTitleContainer>\n                                    </Col>\n                                </Row>\n                                \n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewSkills'>\n                                            <SkillsDetails consultantId={consultantsMy[focus]._id} />\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col>\n                                        <DisplayChildren access='viewOthersConsultants'>\n                                            <DropDownTitleContainer title='Others consultants' close={false}>\n                                                <Form.Group controlId='switch-only-available' className='mt-3'>\n                                                    <Form.Check\n                                                        type='switch'\n                                                        id='switch-delegation'\n                                                        label='View delegation'\n                                                        checked={delegateOption}\n                                                        onChange={(e) => { e.target.checked === true ? setDelegationOption(true) : setDelegationOption(false) }}\n                                                    ></Form.Check>\n                                                </Form.Group>\n                                                <ConsultantsTab\n                                                    consultantsMy={consultantsMy}\n                                                    history={history}\n                                                    focusActive={true}\n                                                />\n                                            </DropDownTitleContainer>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n        </Container>\n    )\n}\n\nexport default PxxEditScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport {\n    createConsultant,\n    getAllCDM,\n    getAllPractice,\n    getMyConsultant,\n    updateMyConsultant\n} from '../actions/consultantActions';\nimport {\n    CONSULTANT_CREATE_RESET,\n    CONSULTANT_GRADE,\n    CONSULTANT_MY_UPDATE_RESET\n} from '../constants/consultantConstants';\nimport SkillsDetails from '../components/SkillsDetails';\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst ConsultantEditScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [matricule, setMatricule] = useState('');\n    const [practice, setPractice] = useState('');\n    const [grade, setGrade] = useState('Analyst');\n\n    const [cdm, setCdm] = useState(null);\n    const [arrival, setArrival] = useState('');\n    const [valued, setValued] = useState('');\n    const [leaving, setLeaving] = useState('');\n    const [seniority, setSeniority] = useState('');\n    const [isCDM, setIsCDM] = useState(false);\n\n    const [partialTime, setPartialTime] = useState(false);\n    const [startPartialTime, setStartPartialTime] = useState('');\n    const [endPartialTime, setEndPartialTime] = useState('');\n    const [valueMonday, setValueMonday] = useState(1);\n    const [valueTuesday, setValueTuesday] = useState(1);\n    const [valueWednesday, setValueWednesday] = useState(1);\n    const [valueThursday, setValueThursday] = useState(1);\n    const [valueFriday, setValueFriday] = useState(1);\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const [update, setUpdate] = useState(false);\n\n    const valueEditType = match.params.id ? 'edit' : 'create';\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantMy = useSelector(state => state.consultantMy);\n    const { loading, error, consultant } = consultantMy;\n\n    const consultantMyUpdate = useSelector(state => state.consultantMyUpdate);\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = consultantMyUpdate;\n\n    const consultantCreate = useSelector(state => state.consultantCreate);\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, consultantCreated } = consultantCreate;\n\n    const consultantCDMList = useSelector(state => state.consultantCDMList);\n    const { error: errorCDM, cdmList } = consultantCDMList;\n\n    const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    const { error: errorPractice, practiceList } = consultantPracticeList;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (match.params.id) {\n            if (!consultant) {\n                dispatch(getMyConsultant(match.params.id));\n                /*if (!loading) {\n                    //setUpdate(false);\n                }*/\n            } /*else {\n                if (consultant._id !== match.params.id) {\n                    dispatch(getMyConsultant(match.params.id));\n                    //setUpdate(false);\n                }\n            }*/\n        }\n    }, [dispatch, match, consultant]);\n\n    useEffect(() => {\n        if (match.params.id) {\n\n            if (consultant && consultant._id !== match.params.id) {\n                dispatch(getMyConsultant(match.params.id));\n                //setUpdate(false);\n            }\n\n        }\n    }, [dispatch, match, consultant]);\n\n    useEffect(() => {\n        if (update) {\n            dispatch(getMyConsultant(match.params.id));\n            setUpdate(false);\n        }\n    }, [dispatch, update, match]);\n\n    useEffect(() => {\n        if ((match.params.id) && (successUpdate)) {\n            setUpdate(true);\n        }\n    }, [\n        match,\n        successUpdate\n    ]);\n\n    useEffect(() => {\n        // Only in admin Level 0 access we can modify consultant Practice\n        if (!practiceList) {\n            dispatch(getAllPractice());\n        }\n    }, [dispatch, userInfo, practiceList]);\n\n    useEffect(() => {\n        // Load default data for cdm in the current practice\n        if (practice) {\n            dispatch(getAllCDM(practice));\n        }\n    }, [dispatch, practice]);\n\n    useEffect(() => {\n        if ((match.params.id) && consultant) {\n            setName(consultant.name);\n            setEmail(consultant.email);\n            setMatricule(consultant.matricule);\n            setPractice(consultant.practice);\n            setGrade(consultant.grade);\n            //setQuality(consultant.quality || []);\n            setCdm(consultant.cdmId ? consultant.cdmId : ''); //'waiting affectation'\n            setArrival(consultant.arrival.substring(0, 10));\n            setValued(consultant.valued ? consultant.valued.substring(0, 10) : '');\n            setLeaving(consultant.leaving ? consultant.leaving.substring(0, 10) : '');\n            setSeniority(((new Date(Date.now()) - new Date(consultant.arrival.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4));\n            setIsCDM(consultant.isCDM || false);\n            setPartialTime(consultant.isPartialTime.value);\n            setStartPartialTime(consultant.isPartialTime.start.substring(0, 10) ? consultant.isPartialTime.start.substring(0, 10) : false)\n            setEndPartialTime(consultant.isPartialTime.end.substring(0, 10) ? consultant.isPartialTime.end.substring(0, 10) : false)\n            setValueMonday(consultant.isPartialTime.week.filter(x => x.num === 1)[0].worked)\n            setValueTuesday(consultant.isPartialTime.week.filter(x => x.num === 2)[0].worked)\n            setValueWednesday(consultant.isPartialTime.week.filter(x => x.num === 3)[0].worked)\n            setValueThursday(consultant.isPartialTime.week.filter(x => x.num === 4)[0].worked)\n            setValueFriday(consultant.isPartialTime.week.filter(x => x.num === 5)[0].worked)\n        }\n    }, [match, consultant, valueEditType]);\n\n    useEffect(() => {\n\n        // Charge default practice for admin Level 0 user\n        if (!practice && userInfo && practiceList) {\n            setPractice(practiceList[0]);\n        }\n\n    }, [\n        userInfo,\n        practice,\n        practiceList,\n        cdm,\n        cdmList\n    ]);\n\n    useEffect(() => {\n        if (errorUpdate) {\n            setErrorMessage({ message: errorUpdate, type: 'danger' });\n            dispatch({ type: CONSULTANT_MY_UPDATE_RESET })\n        }\n        if (successUpdate) {\n            setSuccessMessage({ message: 'Consultant updated', type: 'success' });\n            dispatch({ type: CONSULTANT_MY_UPDATE_RESET })\n        }\n        if (errorCreate) {\n            setErrorMessage({ message: errorCreate, type: 'danger' });\n            dispatch({ type: CONSULTANT_CREATE_RESET })\n        }\n        if (successCreate) {\n            setSuccessMessage({ message: 'Consultant created', type: 'success' });\n            history.push(`/editconsultant/${consultantCreated._id}`);\n            dispatch({ type: CONSULTANT_CREATE_RESET })\n        }\n    }, [dispatch, history, errorUpdate, successUpdate, successCreate, errorCreate, consultantCreated]);\n\n    const submitHandler = (e) => {\n\n        e.preventDefault();\n\n        if (valueEditType === 'edit') {\n\n            const updatedUser = {\n                ...consultant,\n                name: name,\n                matricule: matricule,\n                arrival: new Date(arrival),\n                valued: new Date(valued),\n                leaving: leaving ? new Date(leaving) : null,\n                isCDM: isCDM,\n                grade: grade,\n                cdmId: cdm,\n                isPartialTime: {\n                    value: partialTime,\n                    start: partialTime ? startPartialTime : '',\n                    end: partialTime ? endPartialTime : '',\n                    week: [\n                        { num: 1, worked: partialTime ? valueMonday : 1 },\n                        { num: 2, worked: partialTime ? valueTuesday : 1 },\n                        { num: 3, worked: partialTime ? valueWednesday : 1 },\n                        { num: 4, worked: partialTime ? valueThursday : 1 },\n                        { num: 5, worked: partialTime ? valueFriday : 1 }\n                    ]\n                }\n            }\n            dispatch(updateMyConsultant(updatedUser));\n        }\n\n        if (valueEditType === 'create') {\n            const consultant = {\n                name,\n                email,\n                matricule,\n                arrival,\n                valued,\n                leaving,\n                practice,\n                isCDM,\n                grade: grade,\n                cdmId: cdm,\n                isPartialTime: {\n                    value: partialTime,\n                    start: startPartialTime,\n                    end: endPartialTime,\n                    week: [\n                        { num: 1, worked: valueMonday },\n                        { num: 2, worked: valueTuesday },\n                        { num: 3, worked: valueWednesday },\n                        { num: 4, worked: valueThursday },\n                        { num: 5, worked: valueFriday },\n                    ]\n                }\n            }\n            dispatch(createConsultant(consultant));\n        }\n    }\n\n    const changeValueDateHandler = (e) => {\n        setValued(e.substring(0, 10));\n        setSeniority(((new Date(Date.now()) - new Date(e.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4));\n    }\n\n    const goBackHandler = () => {\n        history.go(-1);\n        setErrorMessage('');\n        setSuccessMessage('');\n    }\n\n    return (\n        <>\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorMessage && <Message variant='danger'>{errorMessage.message}</Message>}\n\n            {errorCDM && <Message variant='danger'>{errorCDM}</Message>}\n            {errorPractice && <Message variant='danger'>{errorPractice}</Message>}\n\n            {loading && <Loader />}\n\n            <Button className='mb-3' onClick={() => goBackHandler()}>\n                Go Back\n            </Button>\n            <DisplayChildren access='editConsultantProfil'>\n\n                <Container>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={8}>\n\n                            <Form onSubmit={submitHandler}>\n                                <h2>{name && name}</h2>\n\n                                <DropDownTitleContainer title='Personal' close={valueEditType !== 'create'}>\n                                    <ListGroup.Item>\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='name'>\n                                                    <Form.Label><b>Name</b></Form.Label>\n                                                    <Form.Control\n                                                        type='name'\n                                                        placeholder='Enter Name'\n                                                        value={name && name}\n                                                        onChange={(e) => setName(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='matricule'>\n                                                    <Form.Label><b>Matricule</b></Form.Label>\n                                                    <Form.Control\n                                                        type='text'\n                                                        placeholder='Enter Matricule'\n                                                        value={matricule && matricule}\n                                                        onChange={(e) => setMatricule(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group controlId='seniority'>\n                                                    <Form.Label><b>Seniority</b> <i>(years)</i></Form.Label>\n                                                    <Form.Control\n                                                        type='text'\n                                                        placeholder='-'\n                                                        value={seniority && seniority}\n                                                        readOnly\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='email'>\n                                                    <Form.Label><b>Email Address</b></Form.Label>\n                                                    <Form.Control\n                                                        type='email'\n                                                        placeholder='Enter email'\n                                                        value={email && email}\n                                                        onChange={(e) => setEmail(e.target.value)}\n                                                        required\n                                                    ></Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                    </ListGroup.Item>\n                                </DropDownTitleContainer>\n\n                                {consultant && valueEditType !== 'create' && (\n                                    <SkillsDetails consultantId={consultant._id} />\n                                )}\n\n                                <DropDownTitleContainer title='Profil' close={false}>\n                                    <ListGroup.Item>\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='practice'>\n                                                    <Form.Label><b>Practice</b></Form.Label>\n                                                    <InputGroup>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={practice ? practice : userInfo ? userInfo.consultantProfil.practice : \"\"}\n                                                            //disabled={userInfo && !(userInfo.adminLevel === 0)}\n                                                            onChange={(e) => {\n                                                                setPractice(e.target.value)\n                                                            }}\n                                                            required\n                                                        >\n                                                            {!practiceList ? <option value={practice && practice}>{practice}</option>\n                                                                : errorPractice ? <Message variant='Danger'>No Practice found</Message>\n                                                                    : (\n                                                                        practiceList.map(x => (\n                                                                            <option\n                                                                                key={x}\n                                                                                value={x}\n                                                                                disabled={x === '-' ? true : false}\n                                                                            >{x}</option>\n                                                                        ))\n                                                                    )}\n                                                        </Form.Control>\n                                                    </InputGroup>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='grade'>\n                                                    <Form.Label><b>Grade</b></Form.Label>\n                                                    <Form.Control\n                                                        as='select'\n                                                        placeholder='Enter grade'\n                                                        value={grade && grade}\n                                                        onChange={(e) => setGrade(e.target.value)}\n                                                        required\n                                                    >\n                                                        {CONSULTANT_GRADE.map(x => (\n                                                            <option key={x} value={x}>{x}</option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <Form.Row>\n                                            <Col>\n                                                <Form.Group controlId='cdm'>\n                                                    <Form.Label><b>CDM</b></Form.Label>\n                                                    <Form.Control\n                                                        as='select'\n                                                        value={cdm ? cdm : 'default'}\n                                                        //disabled={userInfo && !(userInfo.adminLevel <= 2)}\n                                                        onChange={(e) => setCdm(e.target.value)}\n                                                        required\n                                                    >\n                                                        <option value='default'>Please Select</option>\n                                                        {!cdmList ? 'No cdm'\n                                                            : errorCDM ? <Message variant='danger'>No CDM found, please verify Practice</Message>\n                                                                : cdmList.length && (\n                                                                    cdmList.map(x => (\n                                                                        <option\n                                                                            key={x._id}\n                                                                            value={x._id}\n                                                                        >{x.name}</option>\n                                                                    ))\n                                                                )}\n                                                    </Form.Control>\n\n                                                </Form.Group>\n                                            </Col>\n                                        </Form.Row>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId='valued'>\n                                                        <Form.Label><b>Valued date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={valued && valued}\n                                                            onChange={(e) => changeValueDateHandler(e.target.value)}\n                                                            required\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n\n                                                <Col>\n                                                    <Form.Group controlId='arrival'>\n                                                        <Form.Label><b>Arrival date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={arrival && arrival}\n                                                            min={valued}\n                                                            onChange={(e) => {\n                                                                setArrival(e.target.value);\n                                                            }}\n                                                            required\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n\n                                                <Col>\n                                                    <Form.Group controlId='leaving'>\n                                                        <Form.Label><b>Leaving date</b></Form.Label>\n                                                        <Form.Control\n                                                            type='date'\n                                                            value={leaving && leaving}\n                                                            min={arrival}\n                                                            onChange={(e) => setLeaving(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Form.Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId=\"partialtime\">\n                                                        <Form.Check\n                                                            type=\"checkbox\"\n                                                            label=\"Partial time\"\n                                                            checked={partialTime ? true : false}\n                                                            onChange={(e) => {\n                                                                setPartialTime(e.target.checked)\n                                                            }} />\n                                                    </Form.Group>\n                                                </Col>\n                                                {partialTime && (\n                                                    <>\n                                                        <Col>\n                                                            <Form.Group controlId='startpartialtime'>\n                                                                <Form.Label>Start</Form.Label>\n                                                                <Form.Control\n                                                                    type=\"Date\"\n                                                                    min={arrival && arrival}\n                                                                    value={startPartialTime && startPartialTime}\n                                                                    onChange={(e) => {\n                                                                        setStartPartialTime(e.target.value.substring(0, 10));\n                                                                        !endPartialTime && setEndPartialTime(e.target.value.substring(0, 10));\n                                                                        (endPartialTime < e.target.value.substring(0, 10)) && setEndPartialTime(e.target.value.substring(0, 10));\n                                                                    }}\n                                                                    required\n                                                                ></Form.Control>\n                                                            </Form.Group>\n                                                        </Col>\n\n                                                        <Col>\n                                                            <Form.Group controlId='endpartialtime'>\n                                                                <Form.Label>End</Form.Label>\n                                                                <Form.Control\n                                                                    type=\"Date\"\n                                                                    value={endPartialTime && endPartialTime}\n                                                                    min={startPartialTime || ''}\n                                                                    onChange={(e) => {\n                                                                        setEndPartialTime(e.target.value.substring(0, 10))\n                                                                    }}\n                                                                    required\n                                                                ></Form.Control>\n                                                            </Form.Group>\n                                                        </Col>\n                                                    </>\n                                                )}\n                                            </Form.Row>\n\n                                            {partialTime && (\n                                                <Form.Row>\n                                                    <Col>\n                                                        <Form.Group controlId='monday'>\n                                                            <Form.Label><b>Monday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueMonday)}\n                                                                onChange={(e) => setValueMonday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='tuesday'>\n                                                            <Form.Label><b>Tuesday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueTuesday)}\n                                                                onChange={(e) => setValueTuesday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='wendnesday'>\n                                                            <Form.Label><b>Wendnesday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueWednesday)}\n                                                                onChange={(e) => setValueWednesday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='thursday'>\n                                                            <Form.Label><b>Thursday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueThursday)}\n                                                                onChange={(e) => setValueThursday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Group controlId='friday'>\n                                                            <Form.Label><b>Friday</b></Form.Label>\n                                                            <Form.Control\n                                                                type='Number'\n                                                                min={0}\n                                                                max={1}\n                                                                step={0.5}\n                                                                value={Number(valueFriday)}\n                                                                onChange={(e) => setValueFriday(e.target.value)}\n                                                            ></Form.Control>\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Form.Row>\n                                            )}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Form.Row>\n                                                <Col>\n                                                    <Form.Group controlId=\"iscdm\">\n                                                        <Form.Check\n                                                            type=\"checkbox\"\n                                                            label=\"Is CDM\"\n                                                            checked={isCDM ? true : false}\n                                                            onChange={(e) => {\n                                                                setIsCDM(e.target.checked);\n                                                            }} />\n                                                    </Form.Group>\n                                                </Col>\n                                            </Form.Row>\n                                        </ListGroup.Item>\n                                    </ListGroup.Item>\n                                </DropDownTitleContainer>\n\n                                <Form.Row className='pt-3'>\n                                    <Col>\n                                        <Button\n                                            type='submit'\n                                            variant='primary'\n                                            block\n                                            disabled={!name || !email || !matricule || !practice || !valued || !arrival}\n                                            //disabled={!name || !email || !matricule || !practice || !cdm || !valued || !arrival}\n                                        >{(loadingUpdate || loadingCreate) ? <Loader /> : valueEditType === 'create' ? \"Create\" : \"Update\"}\n                                        </Button>\n                                    </Col>\n                                </Form.Row>\n                                <Form.Row>\n                                    <Col>\n                                        {successMessage && <Message variant='success'><i className=\"fas fa-check-circle\">  Your information is correctly registered</i></Message>}\n                                    </Col>\n                                </Form.Row>\n\n                            </Form>\n\n\n                        </Col>\n                    </Row>\n                </Container>\n            </DisplayChildren>\n        </>\n    )\n}\n\nexport default ConsultantEditScreen;\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport * as XLSX from 'xlsx';\n\nconst ImportExcelFile = ({setImportData, sheets = 'all'}) => {\n\n    const [fileName, setFileName] = useState('');\n\n    const readFileHandler = async (e) => {\n\n        //const [importData, setImportData] = useState([]);\n\n        let file = e.target.files[0];\n\n        let reader = new FileReader();\n        reader.onload = function (e) {\n\n            let data = e.target.result;\n            let workBook = XLSX.read(data, { type: 'binary' });\n\n            const jsonData = []\n            for (let incr = 0; incr < workBook.SheetNames.length; incr++) {\n                const wsName = workBook.SheetNames[incr];\n                const ws = workBook.Sheets[wsName];\n                jsonData.push(XLSX.utils.sheet_to_json(ws)); //, status:'not imported'}\n            }\n            if (sheets === '1') {\n                setImportData(jsonData[0].map(x => ({...x, status:'not imported'})));\n            }\n            if (sheets === 'all'){\n                setImportData(jsonData);\n            }\n            setFileName(file.name);\n        };\n        reader.readAsBinaryString(file);\n    }\n\n    return (\n        <Form>\n            <Form.File\n                id=\"importData\"\n                custom\n            >\n                <Form.File.Label data-browse=\"Upload\">{fileName ? fileName : '  ...  '}</Form.File.Label>\n                <Form.File.Input onChange={(e) => readFileHandler(e)} />\n            </Form.File>\n        </Form>\n    )\n}\n\nexport default ImportExcelFile\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { uploadConsultantWk, updateConsultantWk } from '../actions/consultantActions';\nimport Form from 'react-bootstrap/Form';\n\nconst FlowImportWKConsultants = (props) => {\n\n    const dispatch = useDispatch();\n\n    const [step, setStep] = useState(0);\n    //const [selectedFile, setSelectedFile] = useState(null);\n\n    const consultantUploadWk = useSelector(state => state.consultantUploadWk);\n    const { loading: loadingUpload, error: errorUpload, path } = consultantUploadWk;\n\n    const consultantUpdateWk = useSelector(state => state.consultantUpdateWk);\n    const { loading: loadingUpdate, error: errorUpdate, message } = consultantUpdateWk;\n\n    const onChangeHandler = (e) => {\n        //setSelectedFile(e.target.files[0]);\n        const data = new FormData();\n        data.append('file', e.target.files[0]);\n        dispatch(uploadConsultantWk(data));\n    }\n    /* const onClickHandler = () => {\n        const data = new FormData();\n        data.append('file', selectedFile);\n        dispatch(uploadConsultantWk(data));\n    } */\n    const startImportData = () => {\n        if (path) {\n            dispatch(updateConsultantWk(path));\n            //const data = updateConsultantWk(path, userInfo);\n            //setMessage(data);\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        //style={{'minHeight': '80vh'}}\n        >\n            <Modal.Header closeButton>\n                <Row className='align-items-center'>\n                    <Col className='text-center'>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Import consultants data from Wavekeeper\n                        </Modal.Title>\n                    </Col>\n                </Row>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Row className='mb-3'>\n                    <Col><Button className={step >= 0 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(0)} variant='ligth' disabled={step < 0}><strong>1-Guidelines</strong></Button></Col>\n                    <Col><Button className={step >= 1 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(1)} variant='ligth' disabled={step < 1}><strong>2-Upload in App</strong></Button></Col>\n                    <Col><Button className={step >= 2 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(2)} variant='ligth' disabled={step < 2}><strong>3-Start update</strong></Button></Col>\n                    <Col><Button className={step >= 3 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(3)} variant='ligth' disabled={step < 3}><strong>4-Result</strong></Button></Col>\n                </Row>\n\n                <Row className='align-items-center'>\n\n                    <Col>\n                        {step === 0 && (\n                            <Row>\n                                <Col>\n                                    <h4>Process to export from Wavekeeper <a href=\"https://wavekeeper.wavestone-app.com/web#action=534&model=hr.presence&view_type=list&cids=1&menu_id=92\" target=\"_blank\" rel=\"noopener noreferrer\">(link)</a></h4>\n                                    <p>Please connect to Wavekeeper</p>\n                                    <ul>\n                                        <li>Step 1: Go to collaborators</li>\n                                        <li>Step 2: Apply filter to keep only current consultants</li>\n                                        <li>Step 3: Select all lines and go to actions / export</li>\n                                        <li>Step 4: Select filter 'JPR_export_2'</li>\n                                        <li>Step 5: Save the Excel file on you desktop</li>\n                                    </ul>\n                                    <Image src=\"/images/WK_export_consultants_application_filtres.jpg\" rounded fluid />\n                                </Col>\n                            </Row>\n                        )}\n                        {step === 1 && (\n                            <Row className='align-items-center'>\n                                <Col className='text-center'>\n                                    <h4>Upload your file here</h4>\n                                    {loadingUpload ? <Loader /> : (\n                                        <input \n                                            className='my-3' \n                                            type='file' \n                                            name='hr.presence' \n                                            onChange={onChangeHandler} \n                                        />\n                                    )}\n                                    {errorUpload && <Message variant='danger'>{errorUpload}</Message>}\n                                </Col>\n                            </Row>\n                        )}\n                        {step === 2 && (\n                            path ? (\n                                <Row>\n                                    <Col className='text-center'>\n                                        <h4>Do you want to update your consultants ?</h4>\n                                        {loadingUpdate ? <Loader /> : (\n                                            <Button variant='primary' className='m-3' onClick={startImportData}>\n                                                Update\n                                            </Button>\n                                        )}\n                                        <p>Process could take a few minute</p>\n                                        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                                    </Col>\n                                </Row>\n                            ) : (\n                                <Row><Col>Something wrong retry step 2</Col></Row>\n                            )\n                        )}\n                        {step === 3 && (\n                            <Form.Control\n                                as='textarea'\n                                rows={10}\n                                value={message && message}\n                                readOnly\n                            //plaintext\n                            />\n                        )}\n                    </Col>\n                </Row>\n\n\n            </Modal.Body>\n            <Modal.Footer>\n                {step === 3 && (\n                    <Button onClick={props.onHide}>Close</Button>\n                )}\n                {step < 3 && (\n                    <Button\n                        variant='success'\n                        onClick={() => (step + 1 <= 3) && setStep(step + 1)}\n                        disabled={step === 3 || (step === 1 && !path) || (step === 2 && !message)}\n                    >Next</Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default FlowImportWKConsultants;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteConsultant, getAllMyAdminConsultants, consultantImportInMass } from '../actions/consultantActions';\nimport { CONSULTANT_DELETE_RESET } from '../constants/consultantConstants';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport ReactExport from \"react-export-excel\";\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FlowImportWKConsultants from '../components/FlowImportWKConsultants';\nimport DisplayChlidren from '../components/DisplayChildren';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ManageConsultantScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const [pageSize, setPageSize] = useState(10000);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n\n    const [exportExcel, setExportExcel] = useState('');\n\n    const [importData, setImportData] = useState([]);\n\n    //const [selectedFile, setSelectedFile] = useState(null);\n    //const [message, setMessage] = useState('');\n\n    const [showImportConsultant, setShowImportConsultant] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const consultantsMyAdminList = useSelector(state => state.consultantsMyAdminList);\n    const { loading, error, consultantsMyAdmin, pages, page, count } = consultantsMyAdminList;\n\n    const consultantDelete = useSelector(state => state.consultantDelete);\n    const { success: successConsultantDelete } = consultantDelete;\n\n    const consultantsMassImport = useSelector(state => state.consultantsMassImport);\n    const { loading:loadingMassImport, error:errorMassImport, success:successMassImport } = consultantsMassImport;\n\n    /* const consultantUploadWk = useSelector(state => state.consultantUploadWk);\n    const { loading:loadingUpload, error:errorUpload, path } = consultantUploadWk;\n\n    const consultantUpdateWk = useSelector(state => state.consultantUpdateWk);\n    const { loading:loadingUpdate, error:errorUpdate, message } = consultantUpdateWk; */\n\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(getAllMyAdminConsultants(keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, pageNumber, pageSize, keyword, successMassImport]);\n\n    useEffect(() => {\n        if (consultantsMyAdmin) {\n            const exportExcelData = consultantsMyAdmin.map((consultant) => ({\n                'NAME': consultant.name,\n                'EMAIL': consultant.email,\n                'PRACTICE': consultant.practice,\n                'MATRICULE': consultant.matricule,\n                'VALUED': consultant.valued ? consultant.valued.substring(0,10) : '',\n                'ARRIVAL': consultant.arrival ? consultant.arrival.substring(0,10) : '',\n                'LEAVING': consultant.leaving ? consultant.leaving.substring(0,10) : '',\n                'PARTIAL_TIME': consultant.isPartialTime.value,\n                'GRADE': consultant.grade,\n                'IS_CDM': consultant.isCDM,\n                'CDM_MATRICULE': consultant.cdmId && consultant.cdmId.matricule,\n                'CDM_NAME': consultant.cdmId && consultant.cdmId.name,\n                'COMMENT': consultant.comment\n            }));\n            setExportExcel(exportExcelData);\n        }\n    },[consultantsMyAdmin])\n\n    useEffect(() => {\n        if (successConsultantDelete) {\n            dispatch(getAllMyAdminConsultants(keyword, pageNumber, pageSize));\n            dispatch({ type: CONSULTANT_DELETE_RESET });\n        }\n    // eslint-disable-next-line\n    }, [dispatch, successConsultantDelete]);\n\n\n    useEffect(() => {\n        if(importData.length > 0) {\n            dispatch(consultantImportInMass(importData));\n        }\n    },[dispatch, importData]);\n\n    const addConsultantHandler = () => {\n        history.push('/admin/consultant/add');\n    }\n\n    const onClickEditHandler = (consultantId) => {\n        history.push(`/editconsultant/${consultantId}`);\n    };\n\n    const onClickDeleteHandler = (consultant) => {\n        if (window.confirm(`Are you sure to delete user: ${consultant.name} ?`)) {\n            dispatch(deleteConsultant(consultant._id));\n        }\n    }\n\n    return (\n        <>\n            <Meta />\n            {errorMassImport && <Message variant='danger'>{errorMassImport}</Message>}\n\n            <FlowImportWKConsultants \n                show={showImportConsultant}\n                onHide={() => setShowImportConsultant(false)}\n            />\n\n            <DisplayChlidren access='updateConsultantsFromWK'>\n                <Button variant='primary' onClick={() => setShowImportConsultant(true)}>Import WK</Button>\n            </DisplayChlidren>\n\n            <DropDownTitleContainer title='Manage consultants' close={false}>\n                <ListGroup.Item>\n                    \n                    \n                    <Row>\n\n                        <Col xs={6} md={2}>\n                            <Button \n                                className=\"mb-3\" \n                                onClick={() => addConsultantHandler()}\n                            ><i className=\"fas fa-user-edit mr-2\"></i>Add\n                            </Button>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search name'\n                                    value={keyword && keyword}\n                                    onChange={(e) => setKeyword(e.target.value)}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} consultants found` : '0 consultant found'} />\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            {loadingMassImport ? (<Loader />) : (\n                                <ImportExcelFile setImportData={setImportData} />\n                            )}\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            {exportExcel && (\n                                <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                    <ExcelSheet data={exportExcel} name=\"consultantsSheet\">\n                                        <ExcelColumn label=\"NAME\" value=\"NAME\" />\n                                        <ExcelColumn label=\"EMAIL\" value=\"EMAIL\" />\n                                        <ExcelColumn label=\"PRACTICE\" value=\"PRACTICE\" />\n                                        <ExcelColumn label=\"MATRICULE\" value=\"MATRICULE\" />\n                                        <ExcelColumn label=\"VALUED\" value=\"VALUED\" />\n                                        <ExcelColumn label=\"ARRIVAL\" value=\"ARRIVAL\" />\n                                        <ExcelColumn label=\"LEAVING\" value=\"LEAVING\" />\n                                        <ExcelColumn label=\"PARTIAL_TIME\" value=\"PARTIAL_TIME\" />\n                                        <ExcelColumn label=\"GRADE\" value=\"GRADE\" />\n                                        <ExcelColumn label=\"IS_CDM\" value=\"IS_CDM\" />\n                                        <ExcelColumn label=\"CDM_MATRICULE\" value=\"CDM_MATRICULE\" />\n                                        <ExcelColumn label=\"CDM_NAME\" value=\"CDM_NAME\" />\n                                        <ExcelColumn label=\"COMMENT\" value=\"COMMENT\" />\n                                    </ExcelSheet>\n                                </ExcelFile>\n                            )}\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50, 10000].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x === 10000 ? 'All (export)' : `${x} / page`}</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    {consultantsMyAdmin && consultantsMyAdmin.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                        loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n\n                            <Table responsive hover striped>\n                                <thead>\n                                    <tr className='table-primary'>\n                                        <th className='align-middle text-light'>Consultant name</th>\n                                        <th className='align-middle text-light'>Matricule</th>\n                                        <th className='align-middle text-light'>Practice</th>\n                                        <th className='align-middle text-light'>Valued</th>\n                                        <th className='align-middle text-light'>Arrival</th>\n                                        <th className='align-middle text-light'>Leaving</th>\n                                        <th className='align-middle text-light'>Seniority</th>\n                                        <th className='align-middle text-light'></th>\n                                        <th className='align-middle text-light'></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {consultantsMyAdmin && consultantsMyAdmin.map((consultant) => (\n                                        <tr key={consultant._id}>\n                                            <td className='align-middle'>{consultant.name}</td>\n                                            <td className='align-middle'>{consultant.matricule}</td>\n                                            <td className='align-middle'>{consultant.practice}</td>\n                                            <td className='align-middle'>{consultant.valued ? consultant.valued.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{consultant.arrival ? consultant.arrival.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{consultant.leaving ? consultant.leaving.substring(0, 10) : ''}</td>\n                                            <td className='align-middle'>{\n                                                consultant.valued ? ((new Date(Date.now()) - new Date(consultant.valued.substring(0, 10))) / (1000 * 3600 * 24 * 365.25)).toString().substring(0, 4) : 0\n                                            } years</td>\n                                            <td className='align-middle'>\n                                                <Button\n                                                    className='btn btn-primary p-1'\n                                                    onClick={() => onClickEditHandler(consultant._id)}\n                                                    size='sm'\n                                                ><i className=\"fas fa-user-edit\"></i>\n                                                </Button>\n                                            </td>\n                                            <td className='align-middle'>\n                                                <Button\n                                                    className='btn btn-danger p-1'\n                                                    onClick={() => onClickDeleteHandler(consultant)}\n                                                    size='sm'\n                                                ><i className=\"fas fa-user-times\"></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n\n                        )}\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(getAllMyAdminConsultants(keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageConsultantScreen;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Message from '../components/Message';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { deleteUser, listUsers } from '../actions/userActions';\n\nconst ManageUsersScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userList = useSelector(state => state.userList);\n    const { users, pages, page, count } = userList;\n\n    const userDelete = useSelector(state => state.userDelete);\n    const { error, success } = userDelete;\n\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(listUsers(userInfo.consultantProfil.practice, keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, success, keyword, pageNumber, pageSize]);\n\n\n    const onClickEditHandler = (userId) => {\n        history.push(`/admin/edituser/${userId}`);\n    };\n\n    const onClickDeleteHandler = (user) => {\n        //console.log('delete user');\n        if (window.confirm(`Are you sure to delete user: ${user.name} ?`)) {\n            dispatch(deleteUser(user._id));\n        }\n    };\n\n    return (\n        <>\n            {error && (<Message variant='danger'>{error}</Message>)}\n\n            <DropDownTitleContainer title='Manage users' close={false}>\n                <ListGroup.Item>\n                    <Row>\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search name'\n                                    value={keyword && keyword}\n                                    onChange={(e) => setKeyword(e.target.value)}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={6}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} consultants found` : '0 consultant found'} />\n                        </Col>\n\n                        <Col xs={6} md={3}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x} / page</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    <Table responsive hover striped>\n                        <thead>\n                            <tr className='table-primary'>\n                                <th className='align-middle text-light'>User name</th>\n                                <th className='align-middle text-light'>Matricule</th>\n                                <th className='align-middle text-light text-center'>Practice</th>\n                                <th className='align-middle text-light text-center'>Created at</th>\n                                <th className='align-middle text-light text-center'>Last connection</th>\n                                <th className='align-middle text-light text-center'>Status</th>\n                                <th className='align-middle text-light text-center'>User Profil</th>\n                                <th className='align-middle text-light'></th>\n                                <th className='align-middle text-light'></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {users && users.map((user) => (\n                                <tr key={user._id}>\n                                    <td className='align-middle'><b>{user.name && user.name}</b></td>\n                                    <td className='align-middle'>{user.consultantProfil && user.consultantProfil.matricule}</td>\n                                    <td className='align-middle text-center'>{user.consultantProfil && user.consultantProfil.practice}</td>\n                                    <td className='align-middle text-center'>{user.createdAt && user.createdAt.toString().substring(0, 10)}</td>\n                                    <td className='align-middle text-center'>{user.lastConnexion && user.lastConnexion.toString().substring(0, 10)}</td>\n                                    <td className='align-middle text-center'>\n                                        {\n                                            user.status && user.status === 'Waiting approval' ?\n                                                <i className=\"far fa-clock\" style={{ color: 'orange' }}></i>\n                                                : user.status === 'Validated' ?\n                                                    <i className=\"fas fa-check-circle\" style={{ color: 'green' }} ></i>\n                                                    : user.status === 'Refused' ?\n                                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i> : 'unknown'\n\n                                        }</td>\n                                    <td className='align-middle text-center'>{user.profil && user.profil.profil && user.profil.profil}</td>\n                                    <td className='align-middle'>\n                                        <Button\n                                            className='btn btn-primary p-1'\n                                            onClick={() => onClickEditHandler(user._id)}\n                                            size='sm'\n                                        ><i className=\"fas fa-user-edit\"></i>\n                                        </Button>\n                                    </td>\n                                    <td className='align-middle'>\n                                        <Button\n                                            className='btn btn-danger p-1'\n                                            onClick={() => onClickDeleteHandler(user)}\n                                            size='sm'\n                                        ><i className=\"fas fa-user-times\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(listUsers(userInfo.consultantProfil.practice, keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageUsersScreen;\n","import axios from 'axios';\nimport { \n    ACCESS_LIST_FAIL, \n    ACCESS_LIST_REQUEST, \n    ACCESS_LIST_SUCCESS, \n    ACCESS_UPDATE_FRONTACCESS_FAIL, \n    ACCESS_UPDATE_FRONTACCESS_REQUEST,\n    ACCESS_UPDATE_FRONTACCESS_SUCCESS\n} from '../constants/accessConstants';\n\nexport const getAllAccess = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: ACCESS_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/access`, config);\n        dispatch({ type: ACCESS_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: ACCESS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\n\nexport const updateprofilFrontAcessRule = (rule) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: ACCESS_UPDATE_FRONTACCESS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/access`, rule, config);\n        dispatch({ type: ACCESS_UPDATE_FRONTACCESS_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: ACCESS_UPDATE_FRONTACCESS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup'\n//import Alert from 'react-bootstrap/Alert';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { getAllMyAdminConsultants } from '../actions/consultantActions';\nimport { USER_STATUS, USER_UPDATE_RESET } from '../constants/userConstants';\nimport { getAllAccess } from '../actions/accessActions';\n\nconst UserEditScreen = ({ match, history }) => {\n\n    const userId = match.params.id;\n\n    const dispatch = useDispatch();\n    \n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [linkConsultant, setLinkConsultant] = useState('');\n    const [profil, setProfil] = useState('');\n    const [status, setStatus] = useState('');\n    \n    //const [message, setMessage] = useState('');\n    \n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    \n    const userDetails = useSelector(state => state.userDetails);\n    const { error, loading, user } = userDetails;\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const { error: errorUpdate, success: successUpdate } = userUpdate;\n\n    const consultantsMyAdminList = useSelector(state => state.consultantsMyAdminList);\n    const { error:errorMyAdmin, consultantsMyAdmin } = consultantsMyAdminList;\n\n    const accessList = useSelector(state => state.accessList);\n    const { access } = accessList;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n\n        if (!loading && !error && (!user || user._id !== userId)) {\n            dispatch(getUserDetails(userId));\n        }\n\n    }, [dispatch, user, error, userId, loading]);\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setProfil(user.profil);\n            setStatus(user.status);\n            if (user.consultantProfil) {\n                setLinkConsultant(user.consultantProfil._id);\n            } else {\n                setLinkConsultant('');\n            }\n            //console.log(user.profil);\n        }\n\n    }, [user]);\n\n    /*\n    useEffect(() => {\n\n        if (error) {\n            setMessage({ message: error, type: 'danger' });\n        }\n        if (errorMyAdmin) {\n            setMessage({ message: errorMyAdmin, type: 'danger' });\n        }\n        if (errorUpdate) {\n            setMessage({ message: errorUpdate, type: 'danger' });\n        }\n        if (successUpdate) {\n            setMessage({ message: 'User profil updated', type: 'success' });\n            dispatch({type: USER_UPDATE_RESET});\n        }\n\n    }, [dispatch, error, errorMyAdmin, errorUpdate, successUpdate]);\n    */\n\n    useEffect(() => {\n\n        if (user && user._id === userId) {\n            dispatch(getAllMyAdminConsultants('','',10000));\n        }\n\n    }, [dispatch, user, userId]);\n\n    useEffect(() => {\n        if (!access) {\n            dispatch(getAllAccess());\n        }\n        //console.log(access)\n    },[dispatch, access]);\n\n    const updateProfilHandler = (profil) => {\n        const newProfil = access.filter(x => x.profil === profil)[0];\n        setProfil(newProfil);\n        //console.log('updateProfil');\n    }\n\n    const goBackHandler = () => {\n        history.go(-1);\n        dispatch({type: USER_UPDATE_RESET});\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const updatedUser = {\n            ...user,\n            name: name,\n            email: email,\n            consultantProfil: linkConsultant,\n            profil: profil._id,\n            status: status\n        };\n        dispatch(updateUser(updatedUser));\n\n    };\n\n    return (\n        <>\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorMyAdmin && <Message variant='danger'>{errorMyAdmin}</Message>}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {successUpdate && <Message variant='success'>User updated with success</Message>}\n\n            <Button className='mb-3' onClick={() => goBackHandler()}>\n                Go Back\n            </Button>\n\n            <FormContainer>\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label><b>Name</b></Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            value={name && name}\n                            onChange={(e) => setName(e.target.value)}\n                            required\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label><b>Email address</b></Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter email'\n                            value={email && email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='consultantProfil'>\n                        <Form.Label><b>Linked Consultant Profil</b></Form.Label>\n                        <InputGroup>\n                            <Form.Control\n                                as='select'\n                                placeholder='Enter consultant to link'\n                                value={linkConsultant && linkConsultant}\n                                onChange={(e) => setLinkConsultant(e.target.value)}\n                                required\n                            >\n                                {consultantsMyAdmin && consultantsMyAdmin.map(\n                                    x => (\n                                        <option\n                                            key={x._id}\n                                            value={x._id}\n                                        >{x.name}</option>\n                                    )\n                                )}\n                            </Form.Control>\n                            <InputGroup.Append>\n                                <Button onClick={() => history.push(`/editconsultant/${linkConsultant}`)}>Edit user</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n\n                    </Form.Group>\n\n                    <Form.Group controlId='user-profil'>\n                        <Form.Label><b>User profil</b></Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={profil && profil.profil ? profil.profil : ''}\n                            onChange={(e) => updateProfilHandler(e.target.value)}\n                            required\n                        >\n                            <option value=''>--Select--</option>\n                            {access && access.map( x => (\n                                <option\n                                    key={x._id}\n                                    value={x.profil}\n                                >{x.profil}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='status'>\n                        <Form.Label><b>Account Status</b></Form.Label>\n                        <Form.Control\n                            as='select'\n                            placeholder='Select status for account'\n                            value={status && status}\n                            onChange={(e) => setStatus(e.target.value)}\n                            required\n                        >\n                            {USER_STATUS.map( x => (\n                                <option\n                                    key={x}\n                                    value={x}\n                                >{x}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n\n\n                </Form>\n            </FormContainer>\n\n        </>\n    )\n};\n\nexport default UserEditScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'; \nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect);\n            // If user is authenticate, there is no search and user is redirect to home page\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            // Dispatch Register\n            setMessage(null); // to reinitialize the message before testing\n            if (password !== confirmPassword) {\n                setMessage('Passwords do not match')\n            } else {\n                dispatch(register(name, email, password));\n            }\n        }\n    };\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Adress</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='confirm-password'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variat='primary'>\n                    Register\n                </Button>\n\n                <Row className='py-3'>\n                    <Col>\n                        Have an account ? \n                        <Link to={redirect ? \n                            `/login?reditect=${redirect}`\n                        : '/login'}>\n                            Login\n                        </Link>\n                    </Col>\n                </Row>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport ViewStaffs from '../components/ViewStaffs';\nimport ViewOldStaffs from '../components/ViewOldStaffs';\nimport SkillsDetails from './SkillsDetails';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport { getConsultantCdm } from '../actions/consultantActions';\nimport DisplayChildren from '../components/DisplayChildren';\n\n\nconst StaffAConsultant = ({ history, onHide, show, consultant, loadingData={}, mode, addStaffHandler }) => {\n\n    const dispatch = useDispatch();\n\n    const [sdResponsability, setSdResponsability] = useState(loadingData.responsability ? loadingData.responsability : '');\n    const [sdPriority, setSdPriority] = useState(loadingData.priority ? loadingData.priority : '');\n    const [sdInformation, setSdInformation] = useState(loadingData.information ? loadingData.information : '');\n    //console.log('consultant', consultant)\n\n\n    const consultantGetCdm = useSelector(state => state.consultantGetCdm);\n    const { cdm } = consultantGetCdm;\n\n    useEffect(() => {\n        if(show) {\n            dispatch(getConsultantCdm(consultant._id))\n        }\n    }, [dispatch, consultant, show])\n\n    return (\n\n        <Modal\n            show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            onHide={onHide}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    {consultant.name ? consultant.name + ' - ' + consultant.grade + (cdm ? ' (' + cdm.name + ')' : '') : ''}\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                {mode === 'staffing' && (\n                    <DisplayChildren access='editStaff'>\n                        <Row>\n                            <Col className='mt-3'>\n                                <label htmlFor='sd-responsability'><strong>Responsability *</strong></label>\n                                <InputGroup id='sd-responsability'>\n                                    <FormControl\n                                        as='select'\n                                        value={sdResponsability}\n                                        onChange={(e) => setSdResponsability(e.target.value)}\n                                    >\n                                        <option value=''>--Select--</option>\n                                        <option value={'Project director'}>Project director</option>\n                                        <option value={'Project manager'}>Project manager</option>\n                                        <option value={'Project leader'}>Project leader</option>\n                                        <option value={'X'}>X</option>\n                                        <option value={'Intern'}>Intern</option>\n\n                                    </FormControl>\n                                </InputGroup>\n                            </Col>\n\n                            <Col className='mt-3'>\n                                <label htmlFor='sd-priority'><strong>Priority *</strong></label>\n                                <InputGroup id='sd-priority'>\n                                    <FormControl\n                                        as='select'\n                                        value={sdPriority}\n                                        onChange={(e) => setSdPriority(e.target.value)}\n                                    >\n                                        <option value=''>--Select--</option>\n                                        <option value={'P1'}>P1</option>\n                                        <option value={'P2'}>P2</option>\n                                        <option value={'P3'}>P3</option>\n\n                                    </FormControl>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='mt-3'>\n                                <label><strong>Comment</strong></label>\n                                <InputGroup id='sd-information'>\n                                    <FormControl\n                                        as='textarea'\n                                        rows={3}\n                                        value={sdInformation}\n                                        onChange={(e) => setSdInformation(e.target.value)}\n                                    ></FormControl>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n                    </DisplayChildren>\n                )}\n\n                <DisplayChildren access='viewSkills'>\n                    <SkillsDetails\n                        consultantId={consultant._id}\n                        editable={false}\n                        close={(mode === 'consultation') ? false : true}\n                    />\n                </DisplayChildren>\n\n                <DisplayChildren access='viewStaffings'>\n                    <DropDownTitleContainer title='Others staffings' close={false}>\n                        <ViewStaffs\n                            history={history}\n                            consultantId={consultant._id}\n                            onNavigate={onHide}\n                        />\n                    </DropDownTitleContainer>\n                </DisplayChildren>\n\n                <DropDownTitleContainer title='Old staffings' close={true}>\n                    <ViewOldStaffs\n                        history={history}\n                        consultantId={consultant._id}\n                        onNavigate={onHide}\n                    />\n                </DropDownTitleContainer>\n                \n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button onClick={onHide} variant='secondary'>Cancel</Button>\n                <DisplayChildren access='editStaff'>\n                    {mode === 'staffing' && (\n                        <Button\n                            onClick={() => {\n                                addStaffHandler(consultant, sdResponsability, sdPriority, sdInformation);\n                                onHide();\n                            }}\n                            variant='primary'\n                            disabled={!(sdResponsability !== '' && sdPriority !== '')}\n                        >Staff</Button>\n                    )}\n                </DisplayChildren>\n            </Modal.Footer>\n\n        </Modal>\n    )\n}\n\nexport default StaffAConsultant;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({ options, value, setValue, disabled, multi }) => {\n\n    const handleChange = (e) => {\n        let valuesSelected = [];\n        if(multi) {\n            valuesSelected = e.map(x => ({id: x.value, value: x.label}));\n        } else {\n            valuesSelected = [{id: e.value, value: e.label}]\n        }\n        setValue(valuesSelected);\n    }\n\n    return (\n        <div>\n            <Select\n                closeMenuOnSelect={true}\n                placeholder='Select...'\n                value={value ? value : null}\n                isMulti={multi}\n                options={options ? options : []}\n                onChange={handleChange}\n                isDisabled={disabled}\n            />\n        </div>\n    )\n}\n\nexport default SelectInput;\n","import axios from 'axios';\nimport {\n    SKILL_LIST_REQUEST,\n    SKILL_LIST_SUCCESS,\n    SKILL_LIST_FAIL,\n    SKILL_DELETE_REQUEST,\n    SKILL_DELETE_FAIL,\n    SKILL_DELETE_SUCCESS,\n    SKILL_CREATE_REQUEST,\n    SKILL_CREATE_SUCCESS,\n    SKILL_CREATE_FAIL\n } from '../constants/skillsConstants';\n\nexport const getAllSkills = (category = '', name = '', pageNumber = '', pageSize = '15') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: SKILL_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/skills?category=${category}&name=${name}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        dispatch({ type: SKILL_LIST_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteSkill = (skillId) => async (dispatch, getState) => {\n    \n    // TO FINISH : if delete a skill, you need to delete on all consultant associated profils\n    \n    try {\n\n        dispatch({ type: SKILL_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/skills/${skillId}`, config);\n        dispatch({ type: SKILL_DELETE_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n}\n\nexport const createSkills = (skill) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: SKILL_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/skills', skill, config);\n        dispatch({ type: SKILL_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: SKILL_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { getAvailabilities } from '../actions/pxxActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n//import Popover from 'react-bootstrap/Popover';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport StaffAConsultant from './StaffAConsultant';\nimport DisplayChildren from '../components/DisplayChildren';\n\nimport SelectInput from '../components/SelectInput';\nimport { getAllSkills } from '../actions/skillActions';\n\nconst ConsoDispo = ({ \n    //practice, \n    start, end, mode, addStaffHandler, history }) => {\n\n    const dispatch = useDispatch();\n\n    const [focus, setFocus] = useState('');\n    //const [searchSkills, setSearchSkills] = useState('');\n    const [searchExperienceStart, setSearchExperienceStart] = useState('');\n    const [searchExperienceEnd, setSearchExperienceEnd] = useState('');\n    const [practice, setPractice] = useState('');\n\n    const [searchSkillsList, setSearchSkillsList] = useState([]);\n\n    const [searchMode, setSearchMode] = useState('filterAvailable');\n\n    const [modalWindowShow, setModalWindowShow] = useState(false);\n    const [sdConsultant, setSdConsultant] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxAvailabilities = useSelector(state => state.pxxAvailabilities);\n    const { loading: loadingAvailabilities, error: errorAvailabilities, availabilities } = pxxAvailabilities;\n\n    const skillList = useSelector(state => state.skillList);\n    const { skills } = skillList;\n\n    useEffect(() => {\n        if(userInfo) {\n            setPractice(userInfo.consultantProfil.practice);\n        }\n    }, [userInfo]);\n\n    useEffect(() => {\n        if (practice) {\n            dispatch(getAvailabilities(practice, start, end, searchSkillsList.map(skill => skill.value).join(';'), searchExperienceStart, searchExperienceEnd, searchMode));\n        }\n    }, [dispatch, practice, start, end, searchMode, searchSkillsList, searchExperienceStart, searchExperienceEnd]);\n\n    useEffect(() => {\n        dispatch(getAllSkills('','',1,10000));\n    },[dispatch]);\n\n    const removeFilterAction = () => {\n        setSearchSkillsList([]);\n        setSearchExperienceStart('');\n        setSearchExperienceEnd('');\n        //dispatch(getAvailabilities(practice, start, end, '', '', '', searchMode));\n    };\n\n    const handlerSkillsSubmit = (e) => {\n        e.preventDefault();\n        dispatch(getAvailabilities(practice, start, end, searchSkillsList.map(skill => skill.value).join(';'), searchExperienceStart, searchExperienceEnd, searchMode));\n    };\n\n    const moreConsultantDetails = (consultant) => {\n        setModalWindowShow(true);\n        setSdConsultant(consultant);\n    };\n\n    return (\n        <>\n            {modalWindowShow && (\n                <StaffAConsultant\n                    show={modalWindowShow}\n                    onHide={() => setModalWindowShow(false)}\n                    consultant={sdConsultant}\n                    mode={mode}\n                    addStaffHandler={addStaffHandler}\n                    history={history}\n                />\n            )}\n\n            <Row className='mt-5'>\n                <Col md={12}>\n                    <Form onSubmit={handlerSkillsSubmit}>\n\n                        <Form.Row className='align-items-center mb-3'>\n                            <Col md={1}>\n                                {( searchExperienceStart || searchExperienceEnd) ? (\n                                    <Button \n                                        variant='secondary'\n                                        onClick={removeFilterAction}\n                                        block\n                                    ><i className=\"fas fa-minus-circle\"></i></Button>\n                                ) : (\n                                    <Button \n                                        variant='primary'\n                                        disabled\n                                        block\n                                    ><i className=\"fas fa-keyboard\"></i></Button>\n                                )}\n                            </Col>\n\n                            <Col md={4}>\n                                <Form.Group controlId='skill-search' className='my-0'>\n                                    <SelectInput\n                                        options={skills ? skills.map(skill => ({ value: skill._id, label: skill.name })) : []}\n                                        value={searchSkillsList.length ? searchSkillsList.map(skill => ({ value: skill._id, label: skill.value })) : []}\n                                        setValue={setSearchSkillsList}\n                                        multi={true}\n                                        disabled={false}\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='experience-search-start' className='my-0'>\n                                    <Form.Control\n                                        type='number'\n                                        min={0}\n                                        step={0.5}\n                                        placeholder='From (year)'\n                                        value={searchExperienceStart && searchExperienceStart}\n                                        onChange={(e) => setSearchExperienceStart(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='experience-search-end' className='my-0'>\n                                    <Form.Control\n                                        type='number'\n                                        step={0.5}\n                                        min={searchExperienceStart || 0}\n                                        placeholder='To (year)'\n                                        value={searchExperienceEnd && searchExperienceEnd}\n                                        onChange={(e) => setSearchExperienceEnd(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            </Col>\n\n                            <Col md={2}>\n                                <Form.Group controlId='switch-only-available'  className='my-0'>\n                                    <Form.Check\n                                        type='switch'\n                                        id='switch-only-available'\n                                        label='Not available'\n                                        checked={searchMode === 'filterAvailable' ? false : true}\n                                        onChange={(e) => {e.target.checked === true ? setSearchMode('all') : setSearchMode('filterAvailable')}}\n                                    ></Form.Check>\n                                </Form.Group>\n\n                                <Form.Group controlId='switch-practices'  className='my-0'>\n                                    <Form.Check\n                                        type='switch'\n                                        id='switch-all-practices'\n                                        label='All practices'\n                                        checked={practice === 'all' ? true : false}\n                                        onChange={(e) => {e.target.checked === true ? setPractice('all') : setPractice(userInfo.consultantProfil.practice)}}\n                                    ></Form.Check>\n                                </Form.Group>\n\n                            </Col>\n\n                            <Col md={1}>\n                                <Button\n                                    type='submit'\n                                    variant='primary'\n                                    block\n                                >Search</Button>\n                            </Col>\n                        </Form.Row>\n                    </Form>\n\n                </Col>\n            </Row>\n\n            <Tabs defaultActiveKey=\"Analysts\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"Intern\" title=\"Intern\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col sm={12} md={4} key={xVal}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Intern']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Analysts\" title=\"Analysts\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Analyst']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Consultants\" title=\"Consultants\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Consultant']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Senior consultants\" title=\"Senior consultants\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Senior consultant']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n\n                <Tab eventKey=\"Managers\" title=\"Managers and +\">\n                    <Row className='mt-3'>\n                        {loadingAvailabilities ? <Loader /> : errorAvailabilities ? <Message variant='danger'>{errorAvailabilities}</Message> : (\n                            availabilities && availabilities.map((x, xVal) => (\n                                <Col key={xVal} sm={12} md={4}>\n                                    <ConsoDispoUnit\n                                        monthData={x}\n                                        grades={['Manager', 'Senior manager', 'Director', 'Partner']}\n                                        mode={mode}\n                                        //addStaff={addStaff}\n                                        addStaff={moreConsultantDetails}\n                                        focus={focus}\n                                        setFocus={setFocus}\n                                    />\n                                </Col>\n                            ))\n                        )}\n                    </Row>\n                </Tab>\n            </Tabs>\n        </>\n    )\n}\n\n\nconst ConsoDispoUnit = ({monthData, grades, mode, addStaff, focus, setFocus}) => {\n\n    //const userLogin = useSelector(state => state.userLogin);\n    //const { userInfo } = userLogin;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    \n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    const calculateExperience = (date) => {\n\n        if (date) {\n            return ((Date.now() - new Date(date)) / (1000 * 24 * 3600 * 365.25)).toString().substring(0, 4)\n        } else {\n            return '-';\n        }\n    }\n\n    return (\n        <Card className='my-1 rounded' >\n            <Card.Header as=\"h5\">{monthData.month.firstDay.toString().substring(0, 7)}</Card.Header>\n            <Card.Body>\n                {monthData.availabilities.map((consultantData, yVal) => (\n                    grades.includes(consultantData.grade) && (\n                        <Row key={yVal} className='align-items-middle'>\n                            {(mode === 'staffing' || mode === 'consultation') && (\n                                <Col sm={1}>\n                                    <Button\n                                        size='sm'\n                                        variant='ligth'\n                                        className='mx-0 px-0'\n                                        onClick={() => addStaff(consultantData)}\n                                    ><i className=\"fas fa-search\"></i></Button>\n                                </Col>\n                            )}\n                            <Col sm={10}>\n\n\n                                <OverlayTrigger\n                                    overlay={\n                                        <Tooltip id=\"tooltip-disabled\">\n                                            <DisplayChildren access='viewComment'>\n                                                {userInfo && userInfo.consultantProfil._id !== consultantData._id ? (\n                                                    consultantData.comment ? consultantData.comment : 'No staffing comment'\n                                                ) : 'No access to this data'}\n                                            </DisplayChildren>\n                                        </Tooltip>\n                                    }>\n                                    <Form.Control\n                                        plaintext\n                                        readOnly\n                                        id={consultantData.email}\n                                        value={consultantData.availableDay.toString() + ' days : ' + formatName(consultantData.name) + ' (' + calculateExperience(consultantData.valued) + ' years)'}\n                                        style={(consultantData.email === focus) ? { background: '#464277', color: 'white' } : { color: 'black' }}\n                                        onFocus={(e) => {\n                                            setFocus(e.target.id)\n                                        }}\n                                    />\n                                </OverlayTrigger>\n\n                            </Col>\n                        </Row>\n                    )\n                ))}\n            </Card.Body>\n        </Card>\n    )\n}\n\n\nexport default ConsoDispo\n","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport DisplayChildren from '../components/DisplayChildren';\nimport { createTaceData } from '../actions/taceActions';\n\n\nconst Tace = ({ tace, practice }) => {\n\n    const dispatch = useDispatch();\n\n    const [target, setTarget] = useState(tace.target);\n    const [bid, setBid] = useState(tace.bid);\n    const [editRequest, setEditRequest] = useState(false);\n    const [update, setUpdate] = useState(false);\n\n    const [missingFTEToBid, setMissingFTEToBid] = useState('');\n    const [missingFTEToTarget, setMissingFTEToTarget] = useState('');\n\n    const createTace = useSelector(state => state.createTace);\n    //const { success } = createTace;\n\n    useEffect(() => {\n        if(update) {\n            dispatch(createTaceData({\n                month:tace.month._id,\n                practice: practice,\n                target: target,\n                bid: bid,\n            }))\n            setUpdate(false);\n        }\n    }, [dispatch, createTace, update, practice, tace, target, bid]);\n\n    useEffect(() => {\n        \n        const prodDay = Number(tace.totalProdDay);\n        const totalProdDayToBid = Number(bid) / 100 * (Number(tace.totalProdDay) + Number(tace.totalNotProdDay) + Number(tace.totalAvailableDay));\n        const totalProdDayToTarget = Number(target) / 100 * (Number(tace.totalProdDay) + Number(tace.totalNotProdDay) + Number(tace.totalAvailableDay));\n    \n        //console.log('firstDay', tace.month.firstDay);\n        const today = new Date(Math.max(new Date(Date.now()), new Date(tace.month.firstDay)));\n        //console.log(today);\n        const lastMonthDay = new Date(Math.max(new Date(Date.now()), new Date(tace.month.firstDay)));\n        //console.log(lastMonthDay);\n        lastMonthDay.setUTCMonth(lastMonthDay.getUTCMonth() + 1);\n        lastMonthDay.setUTCDate(1);\n\n        const todayToEnd = (lastMonthDay - today) / (3600 * 24 * 1000);\n\n        if(bid) {\n            const missingFTEToBidCalculated = (prodDay - totalProdDayToBid) / todayToEnd;\n            setMissingFTEToBid(missingFTEToBidCalculated);\n        }\n        if(target){\n            const missingFTEToTargetCalculated = (prodDay - totalProdDayToTarget) / todayToEnd;\n            setMissingFTEToTarget(missingFTEToTargetCalculated);\n        }\n\n    },[tace, bid, target]);\n\n\n    return (\n\n        <Col sm={12} md={4}>\n            <Card className='my-3 p-3 rounded'>\n                <Card.Header as=\"h5\">{tace.month.firstDay.toString().substring(0, 7)}</Card.Header>\n                <Card.Body className='p-1 mt-3'>\n                    <Card.Text as='h4'>Tace <DisplayChildren access='editTace'><Button \n                                                size='sm' \n                                                variant='ligth'\n                                                onClick={() => {\n                                                    if(editRequest) {\n                                                        setUpdate(true)\n                                                    }\n                                                    setEditRequest(!editRequest)}\n                                                }\n                                                ><i className=\"fas fa-edit\"></i></Button></DisplayChildren>\n                    </Card.Text>\n\n                    <ListGroup>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col className='text-center' xs={4}><strong>Current</strong></Col>\n                                <Col className='text-center' xs={4}><strong>Target</strong></Col>\n                                <Col className='text-center' xs={4}><strong>Bid</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row className='align-items-center'>\n                                <Col className='text-center' xs={4}>{(Number(tace.totalTACE) * 100).toFixed(1)} %</Col>\n                                \n                                <Col className='text-center' xs={4}>\n                                    <Form.Group controlId='tace-target' className='mb-0'>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='Number'\n                                                className='text-center'\n                                                min={0}\n                                                max={100}\n                                                step={0.1}\n                                                value={target}\n                                                onChange={(e) => setTarget(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Row className='align-items-center'>\n                                                    <Col className='m-0 p-0'>\n                                                        <Form.Control\n                                                            type='text'\n                                                            className='text-right'\n                                                            plaintext\n                                                            value={target}\n                                                            readOnly\n                                                        ></Form.Control>\n                                                    </Col>\n                                                    <Col className='m-0 p-0 text-left'>&nbsp;%</Col>\n                                                </Row>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n\n                                <Col className='text-center' xs={4}>\n                                    <Form.Group controlId='title' className='mb-0'>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='Number'\n                                                className='text-center'\n                                                min={0}\n                                                max={100}\n                                                step={0.1}\n                                                value={bid}\n                                                onChange={(e) => setBid(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Row className='align-items-center'>\n                                                    <Col className='m-0 p-0'>\n                                                        <Form.Control\n                                                            type='text'\n                                                            className='text-right'\n                                                            plaintext\n                                                            value={bid}\n                                                            readOnly\n                                                        ></Form.Control>\n                                                    </Col>\n                                                    <Col className='m-0 p-0 text-left'>&nbsp;%</Col>\n                                                </Row>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col xs={4}>&Delta; FTE</Col>\n                                <Col xs={4} className='text-center'>{missingFTEToTarget && missingFTEToTarget.toFixed(2)}</Col>\n                                <Col xs={4} className='text-center'>{missingFTEToBid && missingFTEToBid.toFixed(2)}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup className='mt-3'>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col><strong>Leaving</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col className='text-right'>{(Number(tace.totalLeaving) * 100).toFixed(2)} %</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup className='mt-3'>\n                        <ListGroup.Item className='py-1 bg-primary text-white'>\n                            <Row>\n                                <Col><strong>FTE</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col className='text-right'>{tace.totalETP && tace.totalETP.toFixed(2)}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>  \n                </Card.Body>\n                <Card.Footer className='mt-3'>\n                    <DisplayChildren access='tace'>\n                        <Link to={`/pxxdetails/${tace.month._id}`}>View details</Link>\n                    </DisplayChildren>\n                </Card.Footer>\n            </Card>\n        </Col>\n\n    )\n}\n\nexport default Tace;\n","import axios from 'axios';\nimport { \n    TACE_CREATE_FAIL,\n    TACE_CREATE_REQUEST, \n    TACE_CREATE_SUCCESS, \n} from '../constants/taceConstants';\n\nexport const createTaceData = (taceData) => async(dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: TACE_CREATE_REQUEST,\n        });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('/api/tace', taceData, config);\n\n        dispatch({\n            type: TACE_CREATE_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: TACE_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { getTace } from '../actions/pxxActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport ConsoDispo from '../components/ConsoDispo';\nimport Tace from '../components/Tace';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer'\nimport DisplayChildren from '../components/DisplayChildren';\n\nconst DashboardScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // initialization of default constants\n    const duration = 3;\n    let startDefault = new Date(Date.now());\n    startDefault.setUTCDate(1);\n    startDefault.setUTCMonth(startDefault.getUTCMonth());\n    startDefault = startDefault.toISOString().substring(0, 10);\n\n    let endDefault = new Date(Date.now());\n    endDefault.setUTCDate(1);\n    endDefault.setUTCMonth(endDefault.getUTCMonth() + duration - 1);\n    endDefault = endDefault.toISOString().substring(0, 10);\n\n    const [start, setStart] = useState(startDefault);\n    const [end, setEnd] = useState(endDefault);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxTACE = useSelector(state => state.pxxTACE);\n    const { loading: loadingTACE, error: errorTACE, tace } = pxxTACE;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } \n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (userInfo && !loadingTACE) {\n            dispatch(getTace(userInfo.consultantProfil.practice, start, end));\n        }\n        // eslint-disable-next-line\n    }, [ dispatch, start, end ]);\n    \n    const navigationMonthHandler = (val) => {\n        const startDate = new Date(start);\n        const endDate = new Date(end);\n        startDate.setUTCMonth(startDate.getUTCMonth() + val);\n        endDate.setUTCMonth(endDate.getUTCMonth() + val);\n\n        setStart(startDate.toISOString().substring(0, 10));\n        setEnd(endDate.toISOString().substring(0, 10));\n    }\n\n    return (\n        <>\n            <Meta />\n\n            <Row>\n\n                <Col className=\"text-center\" xs={2}>\n                    <Button\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(-1)}\n                    ><i className=\"fas fa-caret-left\"></i>\n                    </Button>\n                </Col>\n\n                <Col>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            id='start-date'\n                            className='form-control-lg mb-3 text-right'\n                            plaintext\n                            value={start && `From: ${start.substring(0, 7).replace('-', '/')}`}\n                            readOnly\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            id='date-end'\n                            className='form-control-lg mb-3 text-left'\n                            plaintext\n                            value={end && `To: ${end.substring(0, 7).replace('-', '/')}`}\n                            readOnly\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col className=\"text-center\" xs={2}>\n                    <Button\n                        variant='primary'\n                        size='sm'\n                        onClick={() => navigationMonthHandler(1)}\n                    ><i className=\"fas fa-caret-right\"></i>\n                    </Button>\n                </Col>\n            </Row>\n            \n            <DisplayChildren access={'tace'}>\n                <DropDownTitleContainer title='TACE' close={false}>\n                    <Row className='mt-3'>\n                        <Col>\n                            <h4>TACE ({userInfo && userInfo.consultantProfil.practice})</h4>\n                        </Col>\n                    </Row>\n\n                    <Row className='mt-1'>\n                        {loadingTACE ? <Loader /> : errorTACE ? <Message variant='danger'>{errorTACE}</Message> : (\n                            tace && tace.map((x, val) => (\n                                <Tace key={val} tace={x} practice={userInfo && userInfo.consultantProfil.practice} />\n                            ))\n                        )}\n                    </Row>\n                </DropDownTitleContainer>\n            </DisplayChildren>\n\n            <DisplayChildren access={'consoDispo'}>\n                <DropDownTitleContainer title='Availabilities' close={true}>\n                    <Row>\n                        <Col>\n                            <ConsoDispo\n                                //practice={practice}\n                                start={start}\n                                end={end}\n                                mode='consultation'\n                                history={history}\n                            />\n                        </Col>\n                    </Row>\n                </DropDownTitleContainer>\n            </DisplayChildren>\n        </>\n    )\n}\n\nexport default DashboardScreen;\n","import axios from 'axios';\nimport { \n    CLIENT_ALL_FAIL, \n    CLIENT_ALL_REQUEST, \n    CLIENT_ALL_SUCCESS, \n    CLIENT_CREATE_FAIL, \n    CLIENT_CREATE_REQUEST,\n    CLIENT_CREATE_SUCCESS,\n    CLIENT_DELETE_FAIL,\n    CLIENT_DELETE_REQUEST,\n    CLIENT_DELETE_SUCCESS,\n    CLIENT_UPDATE_FAIL,\n    CLIENT_UPDATE_REQUEST,\n    CLIENT_UPDATE_SUCCESS\n} from '../constants/clientConstants';\n\nexport const getAllClients = (name='', pageNumber='', pageSize='') => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_ALL_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/clients?clientName=${name}&pageNumber=${pageNumber}&pageSize=${pageSize}`, config);\n        dispatch({ type: CLIENT_ALL_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_ALL_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const createAClient = (clients) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_CREATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post(`/api/clients`, clients, config);\n        dispatch({ type: CLIENT_CREATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const updateAClient = (clients) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_UPDATE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`/api/clients`, clients, config);\n        dispatch({ type: CLIENT_UPDATE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const deleteAClient = (clientsId) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: CLIENT_DELETE_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.delete(`/api/clients/${clientsId}`, config);\n        dispatch({ type: CLIENT_DELETE_SUCCESS, payload: data });\n\n    } catch (error) {\n        dispatch({\n            type: CLIENT_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n//import Message from '../components/Message';\n//import Button from 'react-bootstrap/Button';\n//import SearchInput from '../components/SearchInput';\nimport { createAClient, getAllClients } from '../actions/clientActions';\n//import { CLIENT_CREATE_RESET } from '../constants/clientConstants';\n\nimport CreatableSelect from 'react-select/creatable';\n\nconst SelectCompany = ({ company, setCompany, editRequest }) => {\n\n    const dispatch = useDispatch();\n\n    const clientAll = useSelector(state => state.clientAll);\n    const { clients: companies } = clientAll;\n\n    const clientCreate = useSelector(state => state.clientCreate);\n    const { success } = clientCreate;\n\n    useEffect(() => {\n        //dispatch(getAllClients(searchCompany));\n        dispatch(getAllClients(''));\n    }, [dispatch, success]);\n\n    const handleChange = (e) => {\n        //console.log('e', e);\n        if (e) {\n            const currentCompaniesId = companies.map(x => x._id);\n            //console.log('currentCompaniesId', currentCompaniesId);\n            if (currentCompaniesId.includes(e.value)) {\n                setCompany(e.label);\n            } else {\n                //console.log('create a compay');\n                dispatch(createAClient([{name:e.label, commercialTeam:[]}]));\n                setCompany(e.label);\n            }\n        } else {\n            setCompany('');\n        }\n    }\n\n    return (\n        <Row className='align-items-end'>\n            <Col>\n                <CreatableSelect\n                    placeholder='Select a company'\n                    isClearable\n                    onChange={handleChange}\n                    value={(company && company.label !=='') ? company : null}\n                    options={companies && companies.map(company => ({ value: company._id, label: company.name }))}\n                    isDisabled={!editRequest}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nexport default SelectCompany\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport { createDeal, getDealToEdit, updateDeal } from '../actions/dealActions';\nimport { getAllLeaders, getAllPractice } from '../actions/consultantActions';\nimport { DEAL_CREATE_RESET, DEAL_PROBABILITY, DEAL_STATUS, DEAL_UPDATE_RESET, TYPE_BUSINESS } from '../constants/dealConstants';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ConsoDispo from '../components/ConsoDispo';\nimport ViewStaffs from '../components/ViewStaffs';\n//import SearchInput from '../components/SearchInput';\nimport SelectCompany from '../components/SelectCompany';\nimport { REQUEST_STATUS } from '../constants/dealConstants';\nimport StaffAConsultant from '../components/StaffAConsultant';\nimport DisplayChildren from '../components/DisplayChildren';\nimport SelectInput from '../components/SelectInput';\n\nconst StaffingEditScreen = ({ match, history }) => {\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealCreate = useSelector(state => state.dealCreate);\n    const { loading, error, success, createId } = dealCreate;\n\n    const dealUpdate = useSelector(state => state.dealUpdate);\n    const { loading: loadingUpdate, error: errorUpdate } = dealUpdate;\n\n    const dealEdit = useSelector(state => state.dealEdit);\n    const { success: successEdit, deal: dealToEdit } = dealEdit;\n\n    const consultantPracticeList = useSelector(state => state.consultantPracticeList);\n    const { practiceList } = consultantPracticeList;\n\n    const consultantsAllLeaders = useSelector(state => state.consultantsAllLeaders);\n    const { leaderslist } = consultantsAllLeaders;\n\n    const [title, setTitle] = useState('');\n    const [company, setCompany] = useState('');\n    const [client, setClient] = useState('');\n    const [type, setType] = useState('');\n    const [status, setStatus] = useState('');\n    const [probability, setProbability] = useState('');\n    const [description, setDescription] = useState('');\n    const [proposalDate, setProposalDate] = useState('');\n    const [presentationDate, setPresentationDate] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [mainPractice, setMainPractice] = useState('');\n    const [othersPractices, setOthersPractices] = useState([]);\n    const [location, setLocation] = useState('');\n    const [srInstruction, setSrInstruction] = useState('');\n    const [srStatus, setSrStatus] = useState('');\n    const [srRessources, setSrRessources] = useState([]);\n    const [comments, setComments] = useState([]);\n    const [duration, setDuration] = useState('');\n    const [othersContacts, setOthersContacts] = useState('');\n    \n    const [newComment, setNewComment] = useState('');\n    \n    const [sdInstructions] = useState('');\n    const [sdStatus, setSdStatus] = useState('');\n    const [sdStaff, setSdStaff] = useState([]);\n    \n    const [wonDate, setWonDate] = useState('');\n    \n    const [modalWindowShow, setModalWindowShow] = useState(false);\n    const [sdConsultant, setSdConsultant] = useState('');\n    const [loadingSdConsultantData, setLoadingSdConsultantData] = useState({})\n    \n    const [editRequest, setEditRequest] = useState(match.params.id ? false : true);\n    \n    const [dealChange, setDealChange] = useState(false);\n    \n    //const [searchLeader, setSearchLeader] = useState('');\n    const [leader, setLeader] = useState([]);\n    \n    //const [searchCoLeader, setSearchCoLeader] = useState('');\n    const [coLeaders, setCoLeaders] = useState([]);\n    \n\n    const [companyMessage, setCompanyMessage] = useState(null);\n\n    //ConsoDispo\n    const analyseTime = 3;\n    let startDefault = new Date(Date.now());\n    startDefault.setUTCDate(1);\n    startDefault.setUTCMonth(startDefault.getUTCMonth());\n    startDefault = startDefault.toISOString().substring(0, 10);\n\n    let endDefault = new Date(Date.now());\n    endDefault.setUTCDate(1);\n    endDefault.setUTCMonth(endDefault.getUTCMonth() + analyseTime - 1);\n    endDefault = endDefault.toISOString().substring(0, 10);\n\n    const [start] = useState(startDefault);\n    const [end] = useState(endDefault);\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (!practiceList) {\n            dispatch(getAllPractice());\n        }\n    }, [dispatch, practiceList]);\n\n    useEffect(() => {\n        if (match.params.id) {\n            dispatch(getDealToEdit(match.params.id));\n        }\n    }, [dispatch, match])\n\n\n    useEffect(() => { \n        //dispatch(getAllLeaders(searchLeader));\n        dispatch(getAllLeaders());\n        \n    },[dispatch])\n\n    /* useEffect(() => {\n\n        dispatch(getAllLeaders(searchCoLeader));\n\n    }, [dispatch, searchCoLeader]) */\n\n\n    useEffect(() => {\n        if (match.params.id && successEdit) {\n            setTitle(dealToEdit.title);\n            setCompany(dealToEdit.company);\n            setClient(dealToEdit.client);\n            setStatus(dealToEdit.status);\n            setType(dealToEdit.type);\n            setProbability(dealToEdit.probability);\n            setDescription(dealToEdit.description);\n            setProposalDate(dealToEdit.proposalDate ? dealToEdit.proposalDate.substring(0, 10) : \"\");\n            setPresentationDate(dealToEdit.presentationDate ? dealToEdit.presentationDate.substring(0, 10) : \"\");\n            setStartDate(dealToEdit.startDate ? dealToEdit.startDate.substring(0, 10) : \"\");\n            setMainPractice(dealToEdit.mainPractice);\n            setOthersPractices(dealToEdit.othersPractices ? dealToEdit.othersPractices : []);\n            setLocation(dealToEdit.location);\n            setSrInstruction(dealToEdit.staffingRequest.instructions);\n            setSrStatus(dealToEdit.staffingRequest.requestStatus);\n            setSrRessources(dealToEdit.staffingRequest.ressources ? dealToEdit.staffingRequest.ressources : []);\n            setSdStatus(dealToEdit.staffingDecision.staffingStatus ? dealToEdit.staffingDecision.staffingStatus : '');\n            setSdStatus(dealToEdit.staffingDecision.instructions ? dealToEdit.staffingDecision.instructions : '');\n            setSdStaff(dealToEdit.staffingDecision.staff ? dealToEdit.staffingDecision.staff : []);\n            setLeader(dealToEdit.contacts.primary ? \n                [{id: dealToEdit.contacts.primary._id, value: dealToEdit.contacts.primary.name}] : ['']);\n            setCoLeaders(dealToEdit.contacts.secondary ?\n                dealToEdit.contacts.secondary.map( coLeader => ({id: coLeader._id, value: coLeader.name})) : []);\n            setComments(dealToEdit.comments ? dealToEdit.comments : []);\n            setDuration(dealToEdit.duration ? dealToEdit.duration : '');\n            setOthersContacts(dealToEdit.othersContacts ? dealToEdit.othersContacts : '');\n        }\n    }, [successEdit, dealToEdit, userInfo, match])\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/staffing/${createId}`);\n            dispatch({ type: DEAL_CREATE_RESET });\n        }\n    }, [dispatch, history, success, createId]);\n\n    useEffect(() => {\n        if (match.params.id && dealChange) {\n            if (!company) {\n                setCompanyMessage('Please select a company');\n                setEditRequest(true);\n                return\n            } else {\n                setCompanyMessage('')\n            }\n            const deal = {\n                company: company,\n                client: client,\n                title: title,\n                type: type,\n                status: status,\n                contacts: {\n                    primary: leader.length ? leader[0].id : null,\n                    secondary: coLeaders.length ? coLeaders.map( x => x.id) : [],\n                },\n                probability: probability,\n                description: description,\n                proposalDate: proposalDate,\n                presentationDate: presentationDate,\n                wonDate: wonDate,\n                startDate: startDate,\n                duration: duration,\n                mainPractice: mainPractice,\n                othersPractices: othersPractices,\n                location: location,\n                staffingRequest: {\n                    instructions: srInstruction,\n                    requestStatus: srStatus,\n                    ressources: srRessources\n                },\n                staffingDecision: {\n                    instructions: sdInstructions,\n                    staffingStatus: sdStatus,\n                    staff: sdStaff.map(staff => ({\n                        responsability: staff.responsability,\n                        idConsultant: staff.idConsultant._id,\n                        priority: staff.priority,\n                        information: staff.information\n                    }))\n                },\n                comments: comments,\n                othersContacts: othersContacts\n            }\n            dispatch(updateDeal(match.params.id, deal));\n            setDealChange(false);\n            setNewComment('');\n        }\n\n    }, [match, dispatch, userInfo, dealChange, company, type, client, title, status, probability, description, proposalDate, presentationDate,\n        wonDate, startDate, duration, mainPractice, othersPractices, location, srInstruction, srStatus, srRessources, sdInstructions,\n        sdStatus, sdStaff, leader, coLeaders, comments, othersContacts\n    ]);\n\n    const updateOthersPractices = () => {\n        const selectedList = [];\n        const selectBox = document.getElementById('others-practices');\n        for (let i = 0; i < selectBox.options.length; i++) {\n            if (selectBox.options[i].selected) {\n                selectedList.push(selectBox.options[i].value);\n            }\n        }\n        setOthersPractices(selectedList);\n    }\n\n    const removeStaffHandler = (id) => {\n        let tampon = new Array(...sdStaff);\n        tampon = tampon.filter(consultant => consultant.idConsultant._id !== id);\n        setSdStaff(tampon);\n        setDealChange(true);\n    }\n\n    const addStaffHandler = (consultant, responsability, priority, information) => {\n        \n        let tampon = new Array(...sdStaff);\n\n        // Rule if consultant already added in staff\n        if(sdStaff.map(x => x.idConsultant._id).includes(consultant._id)) {\n            tampon = tampon.filter(x => x.idConsultant._id !== consultant._id);            \n        }\n\n        tampon.push({\n            idConsultant: {\n                _id: consultant._id,\n                name: consultant.name,\n            },\n            responsability: responsability,\n            priority: priority,\n            information: information\n        });\n\n        //tampon.sort((a,b) => a.priority - b.priority)\n\n        setSdStaff(tampon);\n        setDealChange(true);\n    }\n\n    const prepareDeal = () => {\n        return {\n            company: company,\n            client: client,\n            title: title,\n            contacts: {\n                primary: leader.length ? leader[0].id : null,\n                secondary: coLeaders.length ? coLeaders.map( x => x.id) : [],\n            },\n            type: type,\n            status: status,\n            probability: probability,\n            description: description,\n            proposalDate: proposalDate,\n            presentationDate: presentationDate,\n            wonDate: wonDate,\n            startDate: startDate,\n            duration: duration,\n            mainPractice: mainPractice,\n            othersPractices: othersPractices,\n            location: location,\n            staffingRequest: {\n                instructions: srInstruction,\n                requestStatus: srStatus,\n                ressources: srRessources\n            },\n            staffingDecision: {\n                instructions: sdInstructions,\n                staffingStatus: sdStatus,\n                staff: sdStaff.map(staff => ({\n                    responsability: staff.responsability,\n                    idConsultant: staff.idConsultant._id,\n                    priority: staff.priority,\n                    information: staff.information\n                }))\n            },\n            comments: comments,\n            othersContacts: othersContacts\n        }\n    }\n\n    /*\n    const deleteCompanyHandler = () => {\n        setCompany('');\n        setDealChange(true);\n    }\n    */\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!company) {\n            setCompanyMessage('Please select a company');\n            return;\n        } else {\n            setCompanyMessage(null)\n        }\n        const deal = prepareDeal();\n\n        if (match.params.id) {\n            dispatch(updateDeal(match.params.id, deal));\n        } else {\n            dispatch(createDeal(deal));\n        }\n    };\n\n    const addCommentHandler = () => {\n        const newComments = comments.slice();\n        newComments.push({\n            message: newComment,\n            sender:{\n                _id: userInfo._id,\n                name: userInfo.name\n            },\n            date: new Date(Date.now()).toISOString()\n        });\n        newComments.sort((a,b) => (Date.parse(b.date) - Date.parse(a.date)));\n        setComments(newComments);\n        setDealChange(true);\n    };\n\n    const deleteCommentHandler = (value) => {\n        let newComments = comments.slice();\n        newComments = newComments.filter(x => x.date !== value);\n        setComments(newComments);\n        setDealChange(true);\n    };\n\n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    return (\n        <>\n            <Meta />\n            {modalWindowShow && (\n                <StaffAConsultant\n                    show={modalWindowShow}\n                    onHide={() => setModalWindowShow(false)}\n                    consultant={sdConsultant}\n                    loadingData={loadingSdConsultantData}\n                    mode='staffing'\n                    addStaffHandler={addStaffHandler}\n                    history={history}\n                />\n            )}\n\n            <h1>Staffing request</h1>\n            <Form onSubmit={submitHandler}>\n                <Row className='mt-3'>\n                    <Col xs={6} md={2}>\n                        {match.params.id && (\n                            <Button\n                                type='button'\n                                variant='primary'\n                                onClick={() => {\n                                    history.go(-1);\n                                    dispatch({type: DEAL_UPDATE_RESET})\n                                }}\n                                block\n                            >Go Back</Button>\n                        )}\n                    </Col>\n                    <Col xs={0} md={8}></Col>\n                    <Col xs={6} md={2}>\n                        {match.params.id && loadingUpdate && <Loader />}\n                    </Col>\n                </Row>\n\n                {error && (<Row><Col><Message variant='danger'>{error}</Message></Col></Row>)}\n\n                {match.params.id && (\n                    <Row className='mt-3 align-items-center'>\n                        <Col md={1}>\n                            <Button\n                                onClick={() => {\n                                    setEditRequest(!editRequest);\n                                    editRequest && setDealChange(true);\n                                }}\n                                variant='light'\n                            >{editRequest ? (<i className=\"far fa-check-circle\"></i>) : (<i className=\"far fa-edit\"></i>)}\n                            </Button>\n                        </Col>\n                        <Col className='text-left align-middle'>\n                            {editRequest && (<p> Please click to update</p>)}\n                            {errorUpdate && (<Message variant='danger'>{errorUpdate}</Message>)}\n                        </Col>\n                    </Row>\n                )}\n\n                <Row className='mt-2'>\n\n                    <Col xs={12} md={4}>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='title' className='mb-0'>\n                                <Form.Label as='h5'>Title {editRequest && '*'}</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        type='text'\n                                        placeholder='Staffing request object'\n                                        value={title ? title : ''}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                        required\n                                    ></Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            plaintext\n                                            value={title ? title : ''}\n                                            readOnly\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n\n                            <Form.Group controlId='select-company' className='mb-0'>\n                                <Form.Label as='h5'>Company</Form.Label>\n                                <SelectCompany\n                                    company={{ value: company, label: company }}\n                                    setCompany={setCompany}\n                                    editRequest={editRequest}\n                                />\n                            </Form.Group>\n\n                            {companyMessage && <Message variant='danger'>{companyMessage}</Message>}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='client' className='mb-0'>\n                                <Form.Label as='h5'>Client</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        type='text'\n                                        placeholder='Client name'\n                                        value={client ? client : ''}\n                                        onChange={(e) => setClient(e.target.value)}\n                                    ></Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            plaintext\n                                            readOnly\n                                            value={client ? client : ''}\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='type' className='mb-0'>\n                                <Form.Label as='h5'>Type of business {editRequest && '*'}</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        as='select'\n                                        value={type ? type : ''}\n                                        onChange={(e) => { setType(e.target.value) }}\n                                        required\n                                    >\n                                        <option value=''>--Select--</option>\n                                        {TYPE_BUSINESS.map(type => (\n                                            <option\n                                                key={type.name}\n                                                value={type.name}\n                                            >{type.name}</option>\n                                        ))}\n                                    </Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            plaintext\n                                            value={type ? type : ''}\n                                            readOnly\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='status' className='mb-0'>\n                                <Form.Label as='h5'>Status {editRequest && '*'}</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        as='select'\n                                        value={status ? status : ''}\n                                        onChange={(e) => {\n                                            if (e.target.value === 'Won') {\n                                                setWonDate(new Date(Date.now()));\n                                            }\n                                            else {\n                                                setWonDate('');\n                                            }\n                                            setStatus(e.target.value);\n                                        }}\n                                        required\n                                    >\n                                        <option value=''>--Select--</option>\n                                        {DEAL_STATUS.map( status => (\n                                            <option\n                                                key={status.name}\n                                                value={status.name}\n                                            >{status.name}</option>\n                                        ))}\n                                    </Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            plaintext\n                                            readOnly\n                                            value={status ? status : ''}\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='probability' className='mb-0'>\n                                <Form.Label as='h5'>Probability {editRequest && '*'}</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        as='select'\n                                        value={probability ? probability : ''}\n                                        onChange={(e) => setProbability(e.target.value)}\n                                        required\n                                    >\n                                        <option value=''>--Select--</option>\n                                        {DEAL_PROBABILITY.map( prob => (\n                                            <option \n                                                key={prob.name}\n                                                value={prob.name}\n                                            >{prob.name} %</option>\n                                        ))}\n                                    </Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            value={`${probability} %`}\n                                            plaintext\n                                            readOnly\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='location' className='mb-0'>\n                                <Form.Label as='h5'>Location</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        type='text'\n                                        placeholder='Location'\n                                        value={location ? location : ''}\n                                        onChange={(e) => setLocation(e.target.value)}\n                                    ></Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            plaintext\n                                            readOnly\n                                            value={location ? location : ''}\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='main-practice' className='mb-0'>\n                                <Form.Label as='h5'>Main Practice {editRequest && '*'}</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        as='select'\n                                        value={mainPractice ? mainPractice : ''}\n                                        onChange={(e) => setMainPractice(e.target.value)}\n                                        required\n                                    >\n                                        <option value=''>--Select--</option>\n                                        {practiceList && practiceList.map((practice, val) => (\n                                            <option\n                                                value={practice}\n                                                key={val}\n                                            >{practice}</option>\n                                        ))}\n                                    </Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            plaintext\n                                            readOnly\n                                            value={mainPractice ? mainPractice : ''}\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='others-practices' className='mb-0'>\n                                <Form.Label as='h5'>Others Practices</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        as='select'\n                                        multiple\n                                        value={othersPractices ? othersPractices : []}\n                                        onChange={(e) => updateOthersPractices()}\n                                    >\n                                        {practiceList && practiceList.map((practice, val) => (\n                                            (practice !== mainPractice) && (\n                                                <option\n                                                    value={practice}\n                                                    key={val}\n                                                >{practice}</option>\n                                            )\n                                        ))}\n                                    </Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            value={othersPractices ? othersPractices.join(', ') : ''}\n                                            plaintext\n                                            readOnly\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                    </Col>\n\n                    <Col xs={12} md={8}>\n\n                        <ListGroup.Item>\n                            <Row className='align-items-start'>\n                                <Col xs={12} md={4}>\n\n                                    <Form.Group controlId='select-leader' className='mb-0'>\n                                        <Form.Label as='h5'>Leader</Form.Label>\n                                        <SelectInput\n                                            options={leaderslist ? leaderslist.map(consultant => ({ value: consultant._id, label: consultant.name })) : []}\n                                            value={leader.length ? { value: leader[0].id, label: leader[0].value } : {}}\n                                            setValue={setLeader}\n                                            multi={false}\n                                            disabled={!editRequest}\n                                        />\n                                    </Form.Group>\n                                    \n                                </Col>\n                            \n                                <Col xs={12} md={4}>\n                                    \n                                    <Form.Group controlId='others' className='mb-0'>\n                                        <Form.Label as='h5'>Co-Leader(s)</Form.Label>\n                                        <SelectInput\n                                            options={leaderslist ? leaderslist.map(consultant => ({ value: consultant._id, label: consultant.name })) : []}\n                                            value={coLeaders ? coLeaders.map(x => ({ value: x.id, label: x.value })) : []}\n                                            setValue={setCoLeaders}\n                                            multi={true}\n                                            disabled={!editRequest}\n                                        />\n                                    </Form.Group>\n                                </Col>\n\n                                <Col xs={12} md={4}>\n                                    <Form.Group controlId='others' className='mb-0'>\n                                        <Form.Label as='h5'>Others contacts</Form.Label>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='text'\n                                                placeholder='email1@mail.com;email2@mail.com'\n                                                value={othersContacts ? othersContacts : ''}\n                                                onChange={(e) => setOthersContacts(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Form.Control\n                                                    type='text'\n                                                    value={othersContacts ? othersContacts : ''}\n                                                    plaintext\n                                                    readOnly\n                                                ></Form.Control>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Form.Group controlId='description' className='mb-0'>\n                                <Form.Label as='h5'>Description {editRequest && '*'}</Form.Label>\n                                {editRequest ? (\n                                    <Form.Control\n                                        as='textarea'\n                                        rows={3}\n                                        placeholder='Deal description'\n                                        value={description ? description : ''}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        required\n                                    ></Form.Control>\n                                ) : (\n                                        <Form.Control\n                                            type='text'\n                                            value={description ? description : ''}\n                                            plaintext\n                                            readOnly\n                                        ></Form.Control>\n                                    )}\n                            </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h5>Sheduling</h5>\n                            <Row className='align-items-end'>\n                                <Col>\n                                    <Form.Group controlId='proposal-date' className='mb-0'>\n                                        <Form.Label>Proposal</Form.Label>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='date'\n                                                placeholder='Deal date'\n                                                value={proposalDate ? proposalDate : ''}\n                                                onChange={(e) => setProposalDate(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Form.Control\n                                                    type='date'\n                                                    value={proposalDate ? proposalDate : ''}\n                                                    plaintext\n                                                    readOnly\n                                                ></Form.Control>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n\n                                <Col>\n                                    <Form.Group controlId='presentation-date' className='mb-0'>\n                                        <Form.Label>Presentation</Form.Label>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='date'\n                                                placeholder='Presentation date'\n                                                value={presentationDate ? presentationDate : ''}\n                                                onChange={(e) => setPresentationDate(e.target.value)}\n                                            ></Form.Control>\n                                        ) : (\n                                                <Form.Control\n                                                    type='date'\n                                                    value={presentationDate ? presentationDate : ''}\n                                                    plaintext\n                                                    readOnly\n                                                ></Form.Control>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n\n                                <Col>\n                                    <Form.Group controlId='start-date' className='mb-0'>\n                                        <Form.Label>Start {editRequest && '*'}</Form.Label>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='date'\n                                                placeholder='Start date'\n                                                value={startDate ? startDate : ''}\n                                                onChange={(e) => setStartDate(e.target.value)}\n                                                required\n                                            ></Form.Control>\n                                        ) : (\n                                                <Form.Control\n                                                    type='date'\n                                                    value={startDate ? startDate : ''}\n                                                    plaintext\n                                                    readOnly\n                                                ></Form.Control>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n\n                                <Col>\n                                    <Form.Group controlId='duration' className='mb-0'>\n                                        <Form.Label>Duration (month) {editRequest && '*'}</Form.Label>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                type='number'\n                                                placeholder='Duration'\n                                                min={0}\n                                                step={0.5}\n                                                value={duration ? duration : 0}\n                                                onChange={(e) => setDuration(e.target.value)}\n                                                required\n                                            ></Form.Control>\n                                        ) : (\n                                                <Form.Control\n                                                    type='number'\n                                                    value={duration ? duration : 0}\n                                                    plaintext\n                                                    readOnly\n                                                ></Form.Control>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col xs={12} md={8}>\n                                    <Form.Group controlId='sr-instruction' className='mb-0'>\n                                        <Form.Label as='h5'>Staffing instruction {editRequest && '*'}</Form.Label>\n                                        {editRequest ? (\n                                            <Form.Control\n                                                as='textarea'\n                                                rows={3}\n                                                placeholder='Staffing instruction'\n                                                value={srInstruction ? srInstruction : ''}\n                                                onChange={(e) => setSrInstruction(e.target.value)}\n                                                required\n                                            ></Form.Control>\n                                        ) : (\n                                                <Form.Control\n                                                    type='text'\n                                                    value={srInstruction ? srInstruction : ''}\n                                                    plaintext\n                                                    readOnly\n                                                ></Form.Control>\n                                            )}\n                                    </Form.Group>\n                                </Col>\n\n                                <Col xs={12} md={4}>\n                                    <Form.Group controlId='sr-status' className='mb-0'>\n                                        <Form.Label as='h5'>Status {editRequest && '*'}</Form.Label>\n                                        <Form.Control\n                                            as='select'\n                                            value={srStatus ? srStatus : ''}\n                                            onChange={(e) => {\n                                                setSrStatus(e.target.value)\n                                                setDealChange(true);\n                                            }}\n                                            required\n                                        >\n                                            <option value=''>--Select--</option>\n                                            {REQUEST_STATUS.map(({name}) => (\n                                                <option\n                                                    key={name}\n                                                    value={name}\n                                                >{name}</option>\n                                            ))}\n\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        {match.params.id && (\n                            <ListGroup.Item>\n                                <h5>Staffing decision</h5>\n                                {sdStaff && [...new Set(sdStaff.map(x => x.priority))].sort().map(priority => (\n                                    <ListGroup.Item key={priority}>\n                                        <Row key={priority}>\n                                            <Col sm={1}>\n                                                <Row className='my-1'><Col>{priority}</Col></Row>\n                                            </Col>\n                                            <Col sm={11}>\n                                                {sdStaff.filter(x => x.priority === priority).map(staff => (\n                                                    <Row key={staff.idConsultant._id} className='my-1'>\n                                                        <Col sm={10}>\n                                                            <OverlayTrigger\n                                                                placement=\"top\"\n                                                                trigger='click'\n                                                                overlay={\n                                                                    <Popover \n                                                                        id='popover-others-staffs' \n                                                                        style={{ 'maxWidth': '40%' }}\n                                                                    >\n                                                                        <Popover.Title id=\"contained-modal-title-vcenter\">\n                                                                            Others staffs\n                                                                        </Popover.Title>\n\n                                                                        <Popover.Content>\n                                                                            <ViewStaffs\n                                                                                history={history}\n                                                                                consultantId={staff.idConsultant._id}\n                                                                                onNavigate={() => ('')}\n                                                                                displayedDeal={match.params.id}\n                                                                            />\n                                                                        </Popover.Content>\n                                                                    </Popover>\n                                                                }\n                                                            >\n                                                                <div><strong>{`${staff.responsability}: `}</strong>{`${formatName(staff.idConsultant.name)}`}<i>{` (${staff.information})`}</i></div>\n                                                            </OverlayTrigger>\n                                                        </Col>\n                                                        <Col sm={2} className='px-0'>\n                                                            <DisplayChildren access='editStaff'>\n                                                                <Button\n                                                                    onClick={() => {\n                                                                        setSdConsultant(staff.idConsultant)\n                                                                        setLoadingSdConsultantData({\n                                                                            information: staff.information,\n                                                                            priority: staff.priority,\n                                                                            responsability: staff.responsability\n                                                                        })\n                                                                        setModalWindowShow(true)\n                                                                    }}\n                                                                    variant='secondary'\n                                                                    className='text-center mx-1'\n                                                                    size='sm'\n                                                                ><i className=\"fas fa-edit\"></i></Button>\n                                                            </DisplayChildren>\n                                                            <DisplayChildren access='editStaff'>\n                                                                <Button\n                                                                    onClick={() => removeStaffHandler(staff.idConsultant._id)}\n                                                                    variant='danger'\n                                                                    className='text-center mx-1'\n                                                                    size='sm'\n                                                                ><i className=\"fas fa-times\"></i></Button>\n                                                            </DisplayChildren>\n                                                        </Col>\n                                                    </Row>\n                                                ))}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup.Item>   \n                        )}\n                        \n                        {!match.params.id && (\n                            <Row className='mt-3'>\n                                <Col className='text-right'>\n                                    <Button\n                                        type='submit'\n                                        variant='primary'\n                                    >{(loading) ? <Loader /> : 'Submit staffing'}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        )}\n\n                        {dealToEdit && match.params.id && (\n                            <ListGroup.Item>\n                                <Row className='my-1'>\n                                    <Col>\n                                        <strong>Last update at: </strong>{dealToEdit.updatedAt.substring(0, 19).replace('T', ' ')}\n                                        \n                                            \n                                                    <Row className='align-items-center my-3'>\n                                                        <Col xs={11} >\n                                                            <Form.Group controlId='comment' className='mb-0'>\n                                                                <Form.Control\n                                                                    type='text'\n                                                                    placeholder='Add a comment'\n                                                                    value={newComment ? newComment : ''}\n                                                                    onChange={(e) => setNewComment(e.target.value)}\n                                                                    onKeyUp={(e) => (e.key === 'Enter') && addCommentHandler()}\n                                                                ></Form.Control>\n                                                            </Form.Group>\n                                                        </Col>\n                                                        <Col xs={1}>\n                                                            <Button\n                                                                variant='primary'\n                                                                onClick={() => addCommentHandler()}\n                                                                size='sm'\n                                                            ><i className=\"fas fa-plus\"></i></Button>\n                                                        </Col>\n                                                    </Row>\n\n                                            <ListGroup className='my-3'>\n                                            {comments && comments.map( (comment, index) => (\n                                                <ListGroup.Item\n                                                    key={index}\n                                                    className='mb-0'\n                                                >\n                                                    \n                                                    <p>\n                                                        {comment.message}\n                                                    </p>\n                                                    <p style={{textAlign: 'right', marginBottom: '0'}}><i>By {comment.sender.name} the {comment.date.substring(0,19).replace('T', ' at ')}  {comment.sender._id === userInfo._id && (\n                                                            <Button\n                                                                size='sm'\n                                                                variant='ligth'\n                                                                style={{color:'red'}}\n                                                                onClick={() => deleteCommentHandler(comment.date)}\n                                                            >--delete--</Button>\n                                                    )}</i></p>\n                                                </ListGroup.Item>\n                                            ))}\n                                            </ListGroup>\n                                        <strong>Created at: </strong>{dealToEdit.createdAt.substring(0, 19).replace('T', ' ')} <br />\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        )}\n\n                    </Col>\n                </Row>\n            </Form>\n\n            {match.params.id && (\n                <DropDownTitleContainer title='Availabilities' close={false}>\n                    <ConsoDispo\n                        start={start}\n                        end={end}\n                        mode='staffing'\n                        addStaffHandler={addStaffHandler}\n                        history={history}\n                    />\n                </DropDownTitleContainer>\n            )}\n        </>\n    )\n}\n\nexport default StaffingEditScreen;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { createSkills, deleteSkill, getAllSkills } from '../actions/skillActions';\nimport { getAllConsultantSkills } from '../actions/consultantActions';\n\nconst ManageSkillsScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const category = ''; // to implement if you want to search on specific category\n    const [name, setName] = useState('');\n\n    // local states to add a category\n    const [skillCategoryList, setSkillCategoryList] = useState([]);\n    const [skillCategory, setSkillCategory] = useState('default');\n    const [skillName, setSkillName] = useState('');\n    const [skillDescription, setSkillDescription] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const skillList = useSelector(state => state.skillList);\n    const { loading, skills, pages, page, count } = skillList;\n\n    const skillDelete = useSelector(state => state.skillDelete);\n    const { error, success } = skillDelete;\n\n    const skillCreate = useSelector(state => state.skillCreate);\n    const { loading: loadingCreateSkill, error: errorCreateSkill, success: successCreateSkill } = skillCreate;\n\n    const consultantAllSkills = useSelector(state => state.consultantAllSkills);\n    const { loading: loadingSkills, skills: skillsList } = consultantAllSkills;\n\n    useEffect(() => {\n        if (!userInfo || !['admin', 'coordinator'].includes(userInfo.profil.profil)) {\n            history.push('/login');\n        } else {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    }, [dispatch, history, userInfo, category, name, pageNumber, pageSize]);\n\n    useEffect(() => {\n        if (success) {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    // eslint-disable-next-line\n    }, [dispatch, success]);\n\n    useEffect(() => {\n        if (successCreateSkill) {\n            dispatch(getAllSkills(category, name, pageNumber, pageSize));\n        }\n    // eslint-disable-next-line\n    }, [dispatch, successCreateSkill]);\n\n    useEffect(() => {\n        if (!skillsList) {\n            if (!loadingSkills) {\n                dispatch(getAllConsultantSkills());\n            }\n        } else {\n            let categoryList = skillsList.map(x => x.category);\n            categoryList = [...new Set(categoryList)];\n            setSkillCategoryList(categoryList);\n        }\n    }, [dispatch, skillsList, loadingSkills]);\n\n\n    const handlerAddSkill = (e) => {\n        e.preventDefault();\n        const skillToCreate = {\n            category: skillCategory,\n            name: skillName,\n            description: skillDescription\n        };\n        dispatch(createSkills(skillToCreate));\n    };\n\n    const onClickDeleteHandler = (skill) => {\n        if (window.confirm(`Are you sure to delete skill: ${skill.name} ?`)) {\n            dispatch(deleteSkill(skill._id));\n        }\n    }\n\n    return (\n        <>\n            <DropDownTitleContainer title='Create Skills' close={true}>\n                <ListGroup.Item>\n                <Row className='mt-3'>\n                    <Col>\n                        <Form onSubmit={handlerAddSkill}>\n                            <Form.Row>\n                                <Col md={3}>\n                                    <Form.Group controlId='skillCategory'>\n                                        <Form.Control\n                                            as='select'\n                                            value={skillCategory ? skillCategory : 'default'}\n                                            onChange={(e) => setSkillCategory(e.target.value)}\n                                            required\n                                        >\n                                            <option value='default'>Please Select</option>\n                                            {skillCategoryList && (\n                                                skillCategoryList.map((x, val) => (\n                                                    <option\n                                                        value={x}\n                                                        key={val}\n                                                        onChange={(e) => { setSkillCategory(e.target.value) }}\n                                                    >{x}</option>\n                                                )))}\n\n\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={3}>\n                                    <Form.Group controlId='name-skill'>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Skill'\n                                            value={skillName && skillName}\n                                            onChange={(e) => setSkillName(e.target.value)}\n                                            disabled={skillCategory === 'default'}\n                                            required\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group controlId='description-skill'>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Skill description'\n                                            value={skillDescription && skillDescription}\n                                            onChange={(e) => setSkillDescription(e.target.value)}\n                                            disabled={skillCategory === 'default'}\n                                            required\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </Col>\n\n                                <Col className='text-right'>\n                                    <Button type='submit' variant='primary' block>\n                                        {loadingCreateSkill ? <Loader /> : 'Add'}\n                                    </Button>\n                                </Col>\n                            </Form.Row>\n                            {errorCreateSkill && <Message variant='danger'>{errorCreateSkill}</Message>}\n                        </Form>\n\n                    </Col>\n                </Row>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n            \n            <DropDownTitleContainer title='Search Skills' close={false}>\n                <ListGroup.Item>\n                <Row className='mt-3'>\n\n                    <Col xs={6} md={2}>\n                        <InputGroup>\n                            <FormControl\n                                type='text'\n                                className=\"mb-3\"\n                                placeholder='Search skill'\n                                value={name && name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></FormControl>\n                        </InputGroup>\n                    </Col>\n\n                    <Col xs={6} md={8}>\n                        <Form.Control\n                            plaintext\n                            readOnly\n                            value={count ? `${count} skills found` : '0 skills found'} />\n                    </Col>\n\n                    <Col xs={6} md={2}>\n                        <InputGroup>\n                            <FormControl\n                                as='select'\n                                id='number-c'\n                                className=\"mb-3\"\n                                value={pageSize && pageSize}\n                                onChange={(e) => setPageSize(e.target.value)}\n                            >\n                                {[5, 10, 15, 20, 50].map(x => (\n                                    <option\n                                        key={x}\n                                        value={x}\n                                    >{x} / page</option>\n                                ))}\n                            </FormControl>\n                        </InputGroup>\n                    </Col>\n\n                </Row>\n\n                {skills && skills.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                    loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n\n                        <Table responsive hover striped>\n                            <thead>\n                                <tr className='table-primary'>\n                                    <th className='align-middle text-light'>Category</th>\n                                    <th className='align-middle text-light'>Skill</th>\n                                    <th className='align-middle text-light'>Description</th>\n                                    <th className='align-middle text-light'></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {skills && skills.map((skill) => (\n                                    <tr key={skill._id}>\n                                        <td className='align-middle'>{skill.category}</td>\n                                        <td className='align-middle'>{skill.name}</td>\n                                        <td className='align-middle'>{skill.description}</td>\n                                        <td className='align-middle'>\n                                            <Button \n                                                variant='danger' \n                                                onClick={() => onClickDeleteHandler(skill)}\n                                                size='sm'\n                                            ><i className=\"fas fa-times\"></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n\n                    )}\n\n                <Pagination>\n                    <Pagination.Prev\n                        onClick={() => setPageNumber(page - 1)}\n                        disabled={page === 1}\n                    />\n                    {[...Array(pages).keys()].map(x => (\n                        [0, 1, pages - 2, pages - 1].includes(x) ? (\n                        <Pagination.Item\n                            key={x + 1}\n                            active={x + 1 === page}\n                            onClick={() => {\n                                dispatch(getAllSkills(category, name, x + 1, pageSize));\n                                setPageNumber(x + 1);\n                            }}\n                        >{x + 1}</Pagination.Item>\n                        ) : (pages > 4 && x === 2) && (\n                            <Pagination.Ellipsis key={x + 1} />\n                        )\n                    ))}\n                    <Pagination.Next\n                        onClick={() => setPageNumber(page + 1)}\n                        disabled={page === pages}\n                    />\n                </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageSkillsScreen\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n//import Image from 'react-bootstrap/Image';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n//import { uploadConsultantWk, updateConsultantWk } from '../actions/consultantActions';\nimport Form from 'react-bootstrap/Form';\nimport { pxxUploadFiles, updatePxxFiles } from '../actions/pxxActions';\n\nconst FlowImportPxx = (props) => {\n\n    const dispatch = useDispatch();\n\n    const [step, setStep] = useState(0);\n\n    const pxxUploadFile = useSelector(state => state.pxxUploadFile);\n    const { loading:loadingUpload, error:errorUpload, path } = pxxUploadFile;\n\n    const updatePxx = useSelector(state => state.updatePxx);\n    const { loading: loadingUpdate, error: errorUpdate, message } = updatePxx;\n\n    const onChangeHandler = (e) => {\n        //const data = new FormData();\n        const files = [];\n        for (let incr = 0; incr < e.target.files.length; incr++) {\n            const file = e.target.files[incr];\n            if(file.name.match(/^p[A-Za-z]+-[0-9]{2}.xlsb|^p[A-Za-z]+-arrivees.xlsb/)) {\n                const data = new FormData();\n                data.append('file', file);\n                files.push(data);\n            }\n        }\n        dispatch(pxxUploadFiles(files));\n    }\n\n    const startImportData = () => {\n        if(path) {\n            //dispatch(updatePxxFiles(path));\n            dispatch(updatePxxFiles(path));\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            //style={{'minHeight': '80vh'}}\n        >\n            <Modal.Header closeButton>\n                <Row className='align-items-center'>\n                    <Col className='text-center'>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Import Pxx from Pxx directory\n                        </Modal.Title>\n                    </Col>\n                </Row>\n            </Modal.Header>\n            \n            <Modal.Body>\n                <Row className='mb-3'>\n                    <Col><Button className={step >= 0 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(0)} variant='ligth' disabled={step <0}><strong>1-Guidelines</strong></Button></Col>\n                    <Col><Button className={step >= 1 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(1)} variant='ligth' disabled={step <1}><strong>2-Upload in App</strong></Button></Col>\n                    <Col><Button className={step >= 2 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(2)} variant='ligth' disabled={step <2}><strong>3-Start update</strong></Button></Col>\n                    <Col><Button className={step >= 3 ? 'text-primary' : 'text-secondary'} onClick={() => setStep(3)} variant='ligth' disabled={step <3}><strong>4-Result</strong></Button></Col>\n                </Row>\n                \n                <Row className='align-items-center'>\n                    \n                    <Col>\n                    {step === 0 && (\n                        <Row>\n                            <Col>\n                                <h4>Process to upload pxx and update availabilities</h4>\n                                    <p>In the next steps you will be invit to</p>\n                                    <ul>\n                                            <li>Select your Pxx storage directory</li>\n                                            <li>Wait untill all Pxx files are uploaded</li>\n                                            <li>Start the backend calculation to update availabilities</li>\n                                            <li>Check the results and if asked proceed to corrections</li>\n                                        </ul>  \n                            </Col>\n                        </Row>\n                    )}\n                    {step === 1 && (\n                        <Row className='align-items-center'>\n                            <Col className='text-center'>\n                                <h4>Upload your file here</h4>\n                                {loadingUpload ? <Loader /> : (\n                                    <input \n                                        className='my-3' \n                                        type='file' \n                                        name='file' \n                                        onChange={onChangeHandler} \n                                        webkitdirectory='true'\n                                        directory='true'\n                                        multiple\n                                    />\n                                )}\n                                {errorUpload && <Message variant='danger'>{errorUpload}</Message>}\n                            </Col>\n                        </Row>\n                    )}\n                    {step === 2 && (\n                        path ? (\n                            <Row>\n                                <Col className='text-center'>\n                                    <h4>Do you want to update availabilities ?</h4>\n                                    {loadingUpdate ? <Loader />  : (\n                                        <Button variant='primary' className='m-3' onClick={startImportData}>\n                                            Update\n                                        </Button>\n                                    )}\n                                    <p>Process could take a few minute</p>\n                                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                                </Col>\n                            </Row>\n                        ) : (\n                            <Row><Col>Something wrong retry step 2</Col></Row>\n                        )\n                    )}\n                    {step === 3 && ( \n                        <Form.Control\n                            as='textarea' \n                            rows={10}\n                            value={message && message}\n                            readOnly\n                            //plaintext\n                        />\n                    )}\n                    </Col>\n                </Row>\n                \n                    \n            </Modal.Body>\n            <Modal.Footer>\n                {step === 3 && (\n                    <Button onClick={props.onHide}>Close</Button>\n                )}\n                {step < 3 && (\n                    <Button\n                        variant='success'\n                        onClick={() => (step + 1 <= 3) && setStep(step + 1)}\n                        disabled={step === 3 || (step === 1 && !path) || (step === 2 && !message)}\n                    >Next</Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default FlowImportPxx;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message';\nimport DisplayChildren from '../components/DisplayChildren';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport { getAllPxx, pxxUpdateALine } from '../actions/pxxActions';\nimport ReactExport from \"react-export-excel\";\nimport FlowImportPxx from '../components/FlowImportPxx';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst PxxDetailsScreen = ({ history, match }) => {\n\n    const dispatch = useDispatch();\n\n    const monthId = match.params.id ;\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n    const [exportExcel, setExportExcel] = useState('');\n\n    const [importData, setImportData] = useState([]);\n\n    const [progress, setProgress] = useState(0);\n    const [massImport, setMassImport] = useState(false);\n    const [errorImportMessage, setErrorImportMessage] = useState([]);\n    const [messsagesImportSuccess, setMessagesImportSuccess] = useState(0);\n    const [messsagesImportError, setMessagesImportError] = useState(0);\n    const [totalToImport, setTotalToImport] = useState(0);\n\n    const [showImportPxx, setShowImportPxx] = useState(false);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const pxxAllList = useSelector(state  => state.pxxAllList);\n    const {loading, pxxs, pages, page, count} = pxxAllList;\n\n    /* const pxxImportMass = useSelector(state  => state.pxxImportMass);\n    const {loading: loadingImportMass, error: errorImportMass, success: successImportData, datas} = pxxImportMass; */\n\n    const pxxImportLine = useSelector(state  => state.pxxImportLine);\n    const {loading: loadingImportLine, error: errorImportLine, success: successImportLine, updatedLine} = pxxImportLine;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            if (!massImport) {\n                dispatch(getAllPxx(userInfo.consultantProfil.practice, monthId, keyword, pageSize, pageNumber));\n            }\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, monthId, keyword, pageNumber, pageSize, massImport]);\n\n    useEffect(() => {\n        if (pxxs) {\n            const exportExcelData = pxxs.map((pxx) => ({\n                'CONSULTANT': pxx.name.name,\n                'MATRICULE': pxx.name.matricule,\n                'PRACTICE': pxx.name.practice,\n                'CDM_MATRICULE': pxx.name.cdmId && pxx.name.cdmId.matricule,\n                'CDM_NAME': pxx.name.cdmId && pxx.name.cdmId.name,\n                'VALUED': pxx.name.valued ? pxx.name.valued.substring(0,10) : '',\n                'ARRIVAL': pxx.name.arrival ? pxx.name.arrival.substring(0,10) : '',\n                'LEAVING': pxx.name.leaving ? pxx.name.leaving.substring(0,10) : '',\n                'MONTH': pxx.month.name,\n                'PROD': pxx.prodDay,\n                'NOT_PROD': pxx.notProdDay,\n                'HOLIDAYS': pxx.leavingDay,\n                'AVAILABLE': pxx.availableDay\n            }));\n            setExportExcel(exportExcelData);\n        }\n    }, [pxxs, setExportExcel]);\n\n\n\n    // Effect to manage file import\n\n    const handlerImportAllPxx = () => {\n        //dispatch({ type: EMAIL_SEND_DECISION_RESET });\n        //console.log(importData);\n        setProgress(0);\n        setMassImport(true);\n    }\n    \n    const handlerImportData = (lineToImport) => {\n        const newImportData = importData.slice();\n        for (let incr = 0 ; incr < newImportData.length; incr++){\n            if(newImportData[incr].MATRICULE === lineToImport.MATRICULE){\n                newImportData[incr].status = 'loading'\n            }\n        }\n        setImportData(newImportData);\n        dispatch(pxxUpdateALine(lineToImport));\n    }\n\n    useEffect(() => {\n        if(massImport) {\n            if(importData.length > 0 && importData[progress].status !== 'imported') {\n                //sleep(1000);\n                handlerImportData(importData[progress]);\n            } else {\n                if(progress < importData.length - 1){\n                    setProgress(progress+1);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    },[massImport, progress]);\n\n    useEffect(() => {\n        if(successImportLine) {\n            //console.log(progress);\n            //console.log(updatedLine);\n            //const successEmail = email;\n            const newImportData = importData.slice();\n            for (let incr = 0; incr < newImportData.length; incr++) {\n                if (newImportData[incr].MATRICULE === updatedLine.updatedMatricule) {\n                    newImportData[incr].status = 'imported'\n                }\n            }\n            setImportData(newImportData);\n\n            if (massImport){\n                if (progress < importData.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassImport(false);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [successImportLine]);\n\n    useEffect(() => {\n        if(errorImportLine) {\n            //console.log('error', error);\n            //const errorEmail = error;\n            const newImportData = importData.slice();\n            for (let incr = 0; incr < newImportData.length; incr++) {\n                if (newImportData[incr].MATRICULE === errorImportLine.message.matricule) {\n                    newImportData[incr].status = 'error';\n                }\n            }\n            setImportData(newImportData);\n            const newErrorMessage = errorImportMessage.slice();\n            newErrorMessage.push({message: errorImportLine.message.display});\n            //console.log(errorImportLine.message.display);\n            setErrorImportMessage(newErrorMessage);\n\n            if (massImport){\n                if (progress < importData.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassImport(false);\n                    setProgress(0);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [errorImportLine]);\n\n    useEffect(() => {\n        //console.log(importData)\n        setMessagesImportSuccess(importData.filter(x => x.status === 'imported').length);\n        setMessagesImportError(importData.filter(x => x.status === 'error').length);\n        setTotalToImport(importData.length);\n    },[importData, errorImportLine, successImportLine]);\n    \n    return (\n        <>\n            <Meta />\n\n            <FlowImportPxx \n                show={showImportPxx}\n                onHide={() => setShowImportPxx(false)}\n            />\n\n            <Row>\n                <Col className='text-left'>\n                    <Button className='mb-3' onClick={() => history.go(-1)}>Go Back</Button>\n                </Col>\n                <Col className='text-right'>\n                    <DisplayChildren access='updatePxxFromPxx'>\n                        <Button variant='primary' onClick={() => setShowImportPxx(true)}>Update from Pxx folder</Button>\n                    </DisplayChildren>\n                </Col>\n\n            </Row>\n\n\n\n\n            <Row className='align-items-center pt-3'>\n                <Col md={5}>\n                    {`${messsagesImportSuccess} Pxx line imported / ${totalToImport} - ${messsagesImportError} lines with error`}\n                </Col>\n\n                <Col ws={6} md={2} className='text-right'>\n                    {exportExcel && (\n                        <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                            <ExcelSheet data={exportExcel} name=\"pxxsheet\">\n                                <ExcelColumn label=\"MATRICULE\" value=\"MATRICULE\" />\n                                <ExcelColumn label=\"(PRACTICE)\" value=\"PRACTICE\" />\n                                {/* <ExcelColumn label=\"VALUED\" value=\"VALUED\" />\n                                <ExcelColumn label=\"ARRIVAL\" value=\"ARRIVAL\" />\n                                <ExcelColumn label=\"LEAVING\" value=\"LEAVING\" /> */}\n                                <ExcelColumn label=\"MONTH\" value=\"MONTH\" />\n                                <ExcelColumn label=\"PROD\" value=\"PROD\" />\n                                <ExcelColumn label=\"NOT_PROD\" value=\"NOT_PROD\" />\n                                <ExcelColumn label=\"HOLIDAYS\" value=\"HOLIDAYS\" />\n                                <ExcelColumn label=\"(AVAILABLE)\" value=\"AVAILABLE\" />\n                                <ExcelColumn label=\"(CDM_MATRICULE)\" value=\"CDM_MATRICULE\" />\n                                <ExcelColumn label=\"(CDM_NAME)\" value=\"CDM_NAME\" />\n                            </ExcelSheet>\n                        </ExcelFile>\n                    )}\n                </Col>\n\n                <Col md={3} >\n                    <DisplayChildren access='uploadPxx'>\n                        {loadingImportLine ? (\n                            <Loader />\n                        ) : (\n                                <ImportExcelFile setImportData={setImportData} sheets='1' />\n                            )}\n                    </DisplayChildren>\n                </Col>\n\n                \n                <Col md={2} className='text-right'>\n                    <Button\n                        variant='primary'\n                        //className='text-primary'\n                        onClick={() => handlerImportAllPxx()}\n                        disabled={!importData.length > 0}\n                    ><i className=\"fas fa-upload\"></i> {massImport ? <Loader /> : 'Import All Pxx'}</Button>\n                </Col>\n            </Row>\n            <Row className='pt-3'>\n                <Col>\n                    <ProgressBar>\n                        <ProgressBar animated={massImport} now={100* messsagesImportSuccess / totalToImport} variant='primary' />\n                        <ProgressBar animated={massImport} now={100* messsagesImportError / totalToImport} variant='danger' />\n                    </ProgressBar>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    {errorImportMessage && errorImportMessage.map((x, incr) => (\n                        <Message key={incr} variant='warning'>{x.message}</Message>\n                    ))}\n                </Col>\n            </Row>\n\n            <Row className='mt-3'>\n                <Col xs={6} md={4}>\n                    <InputGroup>\n                        <FormControl\n                            type='text'\n                            className=\"mb-3\"\n                            placeholder='Search name'\n                            value={keyword && keyword}\n                            onChange={(e) => setKeyword(e.target.value)}\n                        ></FormControl>\n                    </InputGroup>\n                </Col>\n\n                <Col xs={6} md={4}>\n                    <Form.Control\n                        plaintext\n                        readOnly\n                        value={count ? `${count} consultants found` : '0 consultant found'} />\n                </Col>     \n\n                <Col xs={6} md={4}>\n                    <InputGroup>\n                        <FormControl\n                            as='select'\n                            id='number-c'\n                            className=\"mb-3\"\n                            value={pageSize && pageSize}\n                            onChange={(e) => setPageSize(e.target.value)}\n                        >\n                            {['All', 5, 10, 15, 20, 50].map(x => (\n                                <option\n                                    key={x}\n                                    value={(x === 'All' ? 10000 : x)}\n                                >{(x === 'All' ? 'All (export)' : `${x} / page`)}</option>\n                            ))}\n                        </FormControl>\n                    </InputGroup>\n                </Col>\n\n            </Row>\n\n            {loading && <Loader />}\n\n            <Table responsive hover striped>\n                <thead>\n                    <tr className='table-primary'>\n                        <th className='align-middle text-light'>User name</th>\n                        <th className='align-middle text-light'>Matricule</th>\n                        <th className='align-middle text-light text-center'>Practice</th>\n                        <th className='align-middle text-light text-center'>CDM</th>\n                        <th className='align-middle text-light text-center'>Month</th>\n                        <th className='align-middle text-light text-center'>Arrival</th>\n                        <th className='align-middle text-light text-center'>Leaving</th>\n                        <th className='align-middle text-light text-center'>PROD</th>\n                        <th className='align-middle text-light text-center'>NOT PROD</th>\n                        <th className='align-middle text-light text-center'>HOLIDAYS</th>\n                        <th className='align-middle text-light text-center'>AVAILABLE</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {pxxs && pxxs.map((pxx) => (\n                        <tr key={pxx._id}>\n                            <td className='align-middle'><b>{pxx.name.name && pxx.name.name}</b></td>\n                            <td className='align-middle'><b>{pxx.name.matricule && pxx.name.matricule}</b></td>\n                            <td className='align-middle'>{pxx.name.practice && pxx.name.practice}</td>\n                            <td className='align-middle'><b>{pxx.name.cdmId && pxx.name.cdmId.name}</b></td>\n                            <td className='align-middle text-center'>{pxx.month.name && pxx.month.name}</td>\n                            <td className='align-middle text-center'>{pxx.name.arrival && pxx.name.arrival.toString().substring(0,10)}</td>\n                            <td className='align-middle text-center'>{pxx.name.leaving ? pxx.name.leaving.toString().substring(0,10) : '-'}</td>\n                            <td className='align-middle text-center'>{pxx.prodDay && pxx.prodDay}</td>\n                            <td className='align-middle text-center'>{pxx.notProdDay && pxx.notProdDay}</td>\n                            <td className='align-middle text-center'>{pxx.leavingDay && pxx.leavingDay}</td>\n                            <td className='align-middle text-center'>{pxx.availableDay && pxx.availableDay}</td>\n                            \n                        </tr>\n                    ))} \n                </tbody>\n            </Table>\n\n            <Pagination>\n                <Pagination.Prev\n                    onClick={() => setPageNumber(page - 1)}\n                    disabled={page === 1}\n                />\n                {[...Array(pages).keys()].map(x => (\n                    [0, 1, pages - 2, pages - 1].includes(x) ? (\n                        <Pagination.Item\n                            key={x + 1}\n                            active={x + 1 === page}\n                            onClick={() => {\n                                dispatch(getAllPxx(userInfo.consultantProfil.practice, monthId, keyword, pageSize, x + 1));\n                                setPageNumber(x + 1);\n                            }}\n                        >{x + 1}</Pagination.Item>\n                    ) : (pages > 4 && x === 2) && (\n                        <Pagination.Ellipsis key={x + 1} />\n                    )\n\n                ))}\n                <Pagination.Next\n                    onClick={() => setPageNumber(page + 1)}\n                    disabled={page === pages}\n                />\n            </Pagination>\n\n        </>\n    )\n}\n\nexport default PxxDetailsScreen;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Form from 'react-bootstrap/Form'\nimport { deleteDeal } from '../actions/dealActions';\nimport { DEAL_STATUS, REQUEST_STATUS } from '../constants/dealConstants';\n\nconst DealList = ({ history, data = [], filter }) => {\n\n    const dispatch = useDispatch();\n\n    const onClickDeleteHandler = (deal) => {\n        if (window.confirm(`Are you sure to delete deal: ${deal.title} ?`)) {\n            dispatch(deleteDeal(deal._id));\n        }\n    }\n    const formatName = (fullName) => {\n        const separateName = fullName.split(' ');\n        if (separateName.length === 1) {\n            return separateName[0];\n        } else {\n            const outName = separateName.map((word, indice1) => {\n                if (indice1 === 0) {\n                    return word[0].toUpperCase() + '.';\n                } else {\n                    return word.toUpperCase();\n                }\n            });\n            return outName.join(' ');\n        }\n    }\n\n    return (\n        <Table responsive hover striped className='mt-3'>\n            <thead>\n                <tr className='table-primary'>\n                    <th className='align-middle text-light'>Title</th>\n                    <th className='align-middle text-light'>Practice</th>\n                    <th className='align-middle text-light'>Contacts</th>\n                    <th className='align-middle text-light'>Company</th>\n                    <th className='align-middle text-light'>Status</th>\n                    <th className='align-middle text-light'>Probability</th>\n                    <th className='align-middle text-light'>Request</th>\n                    <th className='align-middle text-light'>Staff</th>\n                    <th className='align-middle text-light'>Start</th>\n                    <th className='align-middle text-light'></th>\n                    <th className='align-middle text-light'></th>\n                </tr>\n                <tr className='table-ligth'>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-title' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search title'\n                                value={filter.searchTitle && filter.searchTitle}\n                                onChange={(e) => { filter.setSearchTitle(e.target.value) }}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-practice' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search practice'\n                                disabled={true}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-contact' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search contact'\n                                value={filter.searchContact && filter.searchContact}\n                                onChange={(e) => filter.setSearchContact(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-company' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search company'\n                                value={filter.searchCompany && filter.searchCompany}\n                                onChange={(e) => filter.setSearchCompany(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-status' className='mb-0'>\n                            <Form.Control\n                                as='select'\n                                value={filter.searchDealStatus && filter.searchDealStatus}\n                                onChange={(e) => {\n                                    filter.setSearchDealStatus(e.target.value)\n                                    //setUpdate(true)\n                                }}\n                            >\n                                <option value=''>--Select--</option>\n                                {DEAL_STATUS.map(x => (\n                                    <option key={x.name} value={x.name}>{x.name}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-probability' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search probability'\n                                disabled={true}\n                            //value={filter.searchContact && filter.searchContact}\n                            //onChange={(e) => filter.setSearchContact(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-request' className='mb-0'>\n                            <Form.Control\n                                as='select'\n                                value={filter.searchRequestStatus && filter.searchRequestStatus}\n                                onChange={(e) => {\n                                    filter.setSearchRequestStatus(e.target.value)\n                                    //setUpdate(true)\n                                }}\n                            >\n                                <option value=''>--Select--</option>\n                                {REQUEST_STATUS.map(x => (\n                                    <option key={x.name} value={x.name}>{x.name}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-staff' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search staff'\n                                value={filter.searchStaff && filter.searchStaff}\n                                onChange={(e) => filter.setSearchStaff(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark'>\n                        <Form.Group controlId='filter-start' className='mb-0'>\n                            <Form.Control\n                                type='text'\n                                placeholder='Search start'\n                                disabled={true}\n                            ></Form.Control>\n                        </Form.Group>\n                    </th>\n                    <th className='align-middle text-Dark' colSpan={2}>\n                        <Button\n                            variant='ligth'\n                            style={{color: 'grey'}}\n                            onClick={() => {\n                                filter.setSearchTitle('');\n                                filter.setSearchCompany('');\n                                filter.setSearchContact('');\n                                filter.setSearchDealStatus('');\n                                filter.setSearchRequestStatus('');\n                                filter.setSearchStaff('');\n                            }}\n                        ><i className=\"fas fa-minus-circle\"></i>  Reset</Button>\n                    </th>\n                </tr>\n\n            </thead>\n\n            <tbody>\n                {data && data.deals.map((deal) => (\n                    <tr key={deal._id}>\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.description\n                            }</Tooltip>}\n                        >\n                            <td className='align-middle'>{deal.title}</td>\n                        </OverlayTrigger>\n                        <td className='align-middle text-center'>{deal.mainPractice} {deal.othersPractices && deal.othersPractices.length ? (`(${deal.othersPractices.join(', ')})`) : ''}</td>\n                        <td className='align-middle text-center'>{deal.contacts.primary ? formatName(deal.contacts.primary.name) : '-'} {deal.contacts && deal.contacts.secondary && deal.contacts.secondary.length ? ('/ (' + deal.contacts.secondary.map(x => formatName(x.name.toString())).join(', ') + ')') : ''}</td>\n                        <td className='align-middle text-center'>{deal.company}</td>\n                        <td className='align-middle text-center'>{deal.status}</td>\n                        <td className='align-middle text-center'>{deal.probability} %</td>\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.staffingRequest.instructions\n                            }</Tooltip>}\n                        >\n                            <td className='align-middle text-center'>{deal.staffingRequest.requestStatus}</td>\n                        </OverlayTrigger>\n\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            overlay={<Tooltip id=\"button-tooltip-2\">{\n                                deal.staffingDecision.staff.length > 0 ? (\n                                    deal.staffingDecision.staff.map(x => ({ name: formatName(x.idConsultant.name), responsability: x.responsability, priority: x.priority })).map((x, index) => <div className='text-left' key={index}>{`${x.responsability}: ${x.name} (${x.priority})`}</div>)\n                                ) : ('-')}</Tooltip>\n                            }\n                        >\n                            <td className='align-middle'>{deal.staffingDecision.staff.length > 0 ? 'See' : '-'}</td>\n                        </OverlayTrigger>\n\n                        <td className='align-middle text-center'>{deal.startDate.substring(0, 10)}</td>\n                        <td className='align-middle text-center'>\n                            <Button\n                                variant='ligth'\n                                style={{color:'gray'}}\n                                onClick={() => history.push(`/staffing/${deal._id}`)}\n                                size='md'\n                            ><i className=\"fas fa-edit\"></i>\n                            </Button>\n                        </td>\n                        <td className='align-middle'>\n                            <Button\n                                variant='ligth'\n                                style={{color: 'red'}}\n                                onClick={() => onClickDeleteHandler(deal)}\n                                size='md'\n                            ><i className=\"fas fa-times\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default DealList;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport DealList from '../components/DealList';\nimport DisplayChildren from '../components/DisplayChildren';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { dealsImportInMass, getAllDeals } from '../actions/dealActions';\nimport { FormControl, InputGroup } from 'react-bootstrap';\nimport { DEAL_STATUS, REQUEST_STATUS } from '../constants/dealConstants';\nimport ImportExcelFile from '../components/ImportExcelFile';\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ManageDealsScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n    const [pageSize] = useState('');\n    const [pageNumber] = useState('');\n\n    // search configuration\n    const [searchTitle, setSearchTitle] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).title ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).title : '');\n    const [searchCompany, setSearchCompany] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).company ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).company : '');\n    const [searchContact, setSearchContact] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).contact ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).contact : '');\n    const [searchDealStatus, setSearchDealStatus] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).dealStatus ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).dealStatus : '');\n    const [searchRequestStatus, setSearchRequestStatus] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).requestStatus ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).requestStatus : '');\n    const [searchMyDeals, setSearchMyDeals] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).myDeals ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).myDeals : '');\n    const [searchStaff, setSearchStaff] = useState(localStorage.getItem('ManageDealsScreen.filter') && JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).searchStaff ? JSON.parse(localStorage.getItem('ManageDealsScreen.filter')).searchStaff : '');\n\n    const [updateFilter, setUpdateFilter] = useState(7);\n    const [notUpdateFilter, setNotUpdateFilter] = useState(30);\n    const [newDealFilter, setNewDealFilter] = useState(7);\n    const [wonDealFilter, setWonDealFilter] = useState(7);\n\n    const [changePeriod, setChangePeriod] = useState(false);\n\n    const [tabsFilter] = useState(['Waiting staffing', `Updated (${updateFilter}d)`, `Not updated (${notUpdateFilter}d)`, `New deal (${newDealFilter}d)`, `Won (${wonDealFilter}d)`, 'All']);\n\n    const [defaultTabs, setDefaultTabs] = useState(localStorage.getItem('ManageDealsScreen.defaultTab') ? localStorage.getItem('ManageDealsScreen.defaultTab') : tabsFilter[0])\n\n    const [dataFiltered, setDataFiltered] = useState([]);\n\n    const [update, setUpdate] = useState(true);\n\n    const [exportExcel, setExportExcel] = useState('');\n    const [importData, setImportData] = useState([]);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { error, loading, deals } = dealAllList;\n\n    const dealDelete = useSelector(state => state.dealDelete);\n    const { error: errorDelete, success: successDelete } = dealDelete;\n\n    const dealsImportMass = useSelector(state  => state.dealsImportMass);\n    const {loading: loadingImportMass, success: successImportData} = dealsImportMass;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            const keyword = {\n                title: searchTitle,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: searchMyDeals\n            }\n\n            dispatch(getAllDeals(keyword, pageNumber, pageSize, 'active'));\n            localStorage.setItem('ManageDealsScreen.filter', JSON.stringify({\n                title: searchTitle,\n                company: searchCompany,\n                contact: searchContact,\n                dealStatus: searchDealStatus,\n                requestStatus: searchRequestStatus,\n                searchStaff: searchStaff,\n                myDeals: searchMyDeals,\n            }));\n            setUpdate(false);\n\n        } else {\n            history.push('/login');\n        }\n\n    }, [\n        dispatch, \n        history, \n        userInfo, \n        searchTitle, \n        searchCompany, \n        searchContact, \n        searchDealStatus, \n        searchRequestStatus,\n        searchStaff,\n        pageNumber, \n        pageSize,\n        update,\n        searchMyDeals,\n        successImportData\n    ]);\n\n    useEffect(() => {\n\n        if (deals) {\n\n            const updateTime = new Date(Date.now());\n            updateTime.setUTCDate(updateTime.getUTCDate() - updateFilter);\n\n            const notUpdateTime = new Date(Date.now());\n            notUpdateTime.setUTCDate(notUpdateTime.getUTCDate() - notUpdateFilter);\n\n            const newDealTime = new Date(Date.now());\n            newDealTime.setUTCDate(newDealTime.getUTCDate() - newDealFilter);\n\n            const wonDealTime = new Date(Date.now());\n            wonDealTime.setUTCDate(wonDealTime.getUTCDate() - wonDealFilter);\n\n\n            const filteredData = [];\n\n            for (let incr = 0; incr < tabsFilter.length; incr++) {\n                let dealsFiltered = [];\n\n                switch (tabsFilter[incr]) {\n                    case tabsFilter[0]: // Deals waiting a staff\n                        const needStaff = REQUEST_STATUS.filter(x => x.staff === true);\n                        const toDisplay = DEAL_STATUS.filter(x => x.display === 'onTrack' || x.display === 'win');\n                        //console.log('toDisplay', toDisplay)\n                        dealsFiltered = {\n                            deals: deals.filter(deal => (needStaff.map(x => x.name).includes(deal.staffingRequest.requestStatus) && toDisplay.map(x => x.name).includes(deal.status))),\n                            param: null,\n                            setParam: null\n                        };\n                        break;\n                    case tabsFilter[1]: // Update\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.updatedAt) >= updateTime),\n                            param: updateFilter,\n                            setParam: setUpdateFilter\n                        }\n                        break;\n                    case tabsFilter[2]: // Not Update\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.updatedAt) <= notUpdateTime),\n                            param: notUpdateFilter,\n                            setParam: setNotUpdateFilter\n                        }\n                        break;\n                    case tabsFilter[3]: // newDeal\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.createdAt) >= newDealTime),\n                            param: newDealFilter,\n                            setParam: setNewDealFilter\n                        }\n                        break;\n                    case tabsFilter[4]: // Won\n                        dealsFiltered = {\n                            deals: deals.filter(deal => new Date(deal.wonDate) >= wonDealTime),\n                            param: wonDealFilter,\n                            setParam: setWonDealFilter\n                        }\n                        break;\n                    case tabsFilter[5]: // All >>> mettre une redirection\n                        dealsFiltered = {\n                            deals: deals,\n                            param: null,\n                            setParam: null\n                        }\n                        break;\n                    default:\n                        dealsFiltered = [];\n                }\n                filteredData.push({ filter: tabsFilter[incr], data: dealsFiltered, count: dealsFiltered.deals.length });\n            }\n            setDataFiltered(filteredData);\n        }\n    }, [deals, tabsFilter, newDealFilter, notUpdateFilter, updateFilter, wonDealFilter]);\n\n    useEffect(() => {\n        if (deals) {\n            const exportExcelData = deals.map((deal) => ({\n                'TITLE': deal.title,\n                'COMPANY': deal.company,\n                'PRACTICE': deal.mainPractice,\n                'LEADER': deal.contacts && deal.contacts.primary && deal.contacts.primary.name,\n                'CO-LEADER': deal.contacts && deal.contacts.secondary && deal.contacts.secondary.map(x => x.name).join(''),\n                'OTHERS_PRACTICES': deal.othersPractices && deal.othersPractices.join(','),\n                'STATUS': deal.status,\n                'DESCRIPTION': deal.description,\n                'START': deal.startDate.substring(0,10),\n                'DURATION': deal.duration,\n                'REQUEST_STATUS': deal.staffingRequest.requestStatus,\n                'REQUEST_DETAILS': deal.staffingRequest.instructions,\n                'DECISION': deal.staffingDecision.staff && deal.staffingDecision.staff.map(x => `${x.responsability}: ${x.idConsultant.name} (${x.priority})}`).join('\\n'),\n            }));\n            setExportExcel(exportExcelData);\n        }\n    }, [deals, setExportExcel]);\n\n    useEffect(() => {\n        if(importData.length > 0) {\n            //console.log(importData);\n            dispatch(dealsImportInMass(importData));\n        }\n    },[dispatch, importData]);\n\n    useEffect(() => {\n\n        if (successDelete) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: searchMyDeals\n            }\n            dispatch(getAllDeals(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete]);\n\n    return (\n        <>\n            <Meta />\n\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <DropDownTitleContainer\n                title='Manage Deals'\n                close={false}>\n                \n                <Row className='mt-3'>\n                    <Col xs={0} md={7}></Col>\n                    <Col xs={6} md={3}>\n                        <DisplayChildren access='uploadDeals'>\n                            {loadingImportMass ? (\n                                <Loader />\n                            ) : (\n                                    <ImportExcelFile setImportData={setImportData} />\n                                )}\n                        </DisplayChildren>\n                    </Col>\n\n                    <Col ws={6} md={2}>\n                        {exportExcel && (\n                            <ExcelFile element={<Button variant='primary'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                <ExcelSheet data={exportExcel} name=\"dealsSheet\">\n                                    <ExcelColumn label=\"TITLE\" value=\"TITLE\" />\n                                    <ExcelColumn label=\"COMPANY\" value=\"COMPANY\" />\n                                    <ExcelColumn label=\"PRACTICE\" value=\"PRACTICE\" />\n                                    <ExcelColumn label=\"LEADER\" value=\"LEADER\" />\n                                    <ExcelColumn label=\"CO-LEADER\" value=\"CO-LEADER\" />\n                                    <ExcelColumn label=\"OTHERS_PRACTICES\" value=\"OTHERS_PRACTICES\" />\n                                    <ExcelColumn label=\"STATUS\" value=\"STATUS\" />\n                                    <ExcelColumn label=\"DESCRIPTION\" value=\"DESCRIPTION\" />\n                                    <ExcelColumn label=\"START\" value=\"START\" />\n                                    <ExcelColumn label=\"DURATION\" value=\"DURATION\" />\n                                    <ExcelColumn label=\"REQUEST_STATUS\" value=\"REQUEST_STATUS\" />\n                                    <ExcelColumn label=\"REQUEST_DETAILS\" value=\"REQUEST_DETAILS\" />\n                                    <ExcelColumn label=\"DECISION\" value=\"DECISION\" />\n                                </ExcelSheet>\n                            </ExcelFile>\n                        )}\n                    </Col>\n                </Row>\n\n                <ListGroup.Item className='p-0 mt-3'>\n                    <Tabs \n                        id=\"uncontrolled-tab-example\" \n                        variant='pills'\n                        activeKey={defaultTabs}\n                        onSelect={(k) => {\n                            setDefaultTabs(k)\n                            localStorage.setItem('ManageDealsScreen.defaultTab', k)\n                        }}\n                    >\n                        {dataFiltered.length > 0 && dataFiltered.map((data, val) => (\n                            <Tab\n                                key={val}\n                                className='mx-3'\n                                eventKey={`${data.filter}`}\n                                \n                                title={\n                                    <Row className='align-text-middle'>\n                                        <span className='ml-3 align-middle'>{data.filter.split(/[0-9]+/i)[0]}</span>\n                                        {changePeriod ? (\n                                            <span>{data.data.param && (\n                                                <InputGroup>\n                                                    <FormControl\n                                                        as='select'\n                                                        value={data.data.param}\n                                                        onChange={(e) => data.data.setParam(e.target.value)}\n                                                    >\n                                                        {[...new Array(30).keys()].map(x => (\n                                                            <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                        ))}\n                                                    </FormControl>\n                                                </InputGroup>\n                                            )}\n                                            </span>) : data.data.param}\n                                        <span>{(data.filter.split(/[0-9]+/i)[1] && data.filter.split(/[0-9]+/i)[1])}</span>\n                                        <span className='mr-3'>{' > ' + data.count}</span>\n                                    </Row>\n                                }\n                            >\n                                <Row className='mt-3'>\n                                    <Col className='text-left'>\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => setChangePeriod(!changePeriod)}\n                                        ><i className=\"fas fa-edit\"></i>  Configure tabs</Button>\n\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => history.push('/admin/deals/history')}\n                                        ><i className=\"fas fa-history\"></i>  History</Button>\n\n                                        <Button\n                                            variant='ligth'\n                                            onClick={() => {\n                                                setSearchMyDeals(!searchMyDeals)\n                                                setUpdate(true)\n                                            }}\n                                        >{searchMyDeals ? (\n                                            <div><i className=\"fas fa-backspace\"></i>  Get all deals</div>\n                                        ) : (\n                                                <div><i className=\"fas fa-filter\"></i>  Filter my deals</div>\n                                            )}\n                                        </Button>\n\n                                        <Button \n                                            variant='ligth'\n                                            onClick={() => window.confirm('Soon available')}\n                                        ><i className=\"fas fa-project-diagram\"></i>  Business flows\n                                        </Button>\n\n                                        <DisplayChildren access='sendStaffingDecision'>\n                                            <Button\n                                                variant='ligth'\n                                                className='text-black align-right'\n                                                onClick={() => history.push('/admin/send')}\n                                            ><i className=\"fas fa-envelope\"></i>  Send staffing decisions</Button>\n                                        </DisplayChildren>\n                                    </Col>\n                                </Row>\n\n                                <DealList\n                                    history={history}\n                                    data={data.data}\n                                    filter={{\n                                        searchTitle: searchTitle,\n                                        setSearchTitle: setSearchTitle,\n                                        searchCompany: searchCompany, \n                                        setSearchCompany: setSearchCompany,\n                                        searchContact: searchContact,\n                                        setSearchContact: setSearchContact,\n                                        searchDealStatus: searchDealStatus,\n                                        setSearchDealStatus: setSearchDealStatus,\n                                        searchRequestStatus: searchRequestStatus,\n                                        setSearchRequestStatus: setSearchRequestStatus,\n                                        searchStaff: searchStaff,\n                                        setSearchStaff: setSearchStaff\n                                    }}\n                                />\n                            </Tab>\n                        ))}\n                    </Tabs>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default ManageDealsScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport DealList from '../components/DealList';\nimport Meta from '../components/Meta';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { getAllDeals } from '../actions/dealActions';\nimport ReactExport from \"react-export-excel\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\nconst DealsHistoryScreen = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n    const [pageSize] = useState('');\n    const [pageNumber] = useState('');\n\n    // search configuration\n    const [searchTitle, setSearchTitle] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).title ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).title : '' );\n    const [searchCompany, setSearchCompany] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).company ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).company : '');\n    const [searchContact, setSearchContact] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).contact ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).contact : '');\n    const [searchDealStatus, setSearchDealStatus] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).dealStatus ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).dealStatus : '');\n    const [searchRequestStatus, setSearchRequestStatus] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).requestStatus ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).requestStatus : '');\n    const [searchStaff, setSearchStaff] = useState(localStorage.getItem('DealsHistoryScreen.filter') && JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).searchStaff ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).searchStaff : '');\n    //const [searchMyDeals, setSearchMyDeals] = useState(localStorage.getItem('DealsHistoryScreen.filter') ? JSON.parse(localStorage.getItem('DealsHistoryScreen.filter')).myDeals : '');\n\n    const [tabsFilter] = useState([...new Array(5).keys()].map(x => new Date(Date.now()).getFullYear() - x));\n\n    const [defaultTabs, setDefaultTabs] = useState(localStorage.getItem('DealsHistoryScreen.defaultTab') ? localStorage.getItem('DealsHistoryScreen.defaultTab') : tabsFilter[0])\n\n    const [dataFiltered, setDataFiltered] = useState([]);\n\n    const [update, setUpdate] = useState(true);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { error, loading, deals } = dealAllList;\n\n    const dealDelete = useSelector(state => state.dealDelete);\n    const { error: errorDelete, success: successDelete } = dealDelete;\n\n    useEffect(() => {\n        if (userInfo) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy: false\n            }\n\n            dispatch(getAllDeals(keyword, pageNumber, pageSize, 'all'));\n            localStorage.setItem('DealsHistoryScreen.filter', JSON.stringify({\n                title: searchTitle,\n                company: searchCompany,\n                contact: searchContact,\n                dealStatus: searchDealStatus,\n                requestStatus: searchRequestStatus,\n                searchStaff: searchStaff,\n                //myDeals: searchMyDeals,\n            }));\n            setUpdate(false);\n\n        } else {\n            history.push('/login');\n        }\n\n    }, [\n        dispatch, \n        history, \n        userInfo, \n        searchTitle, \n        searchCompany, \n        searchContact, \n        searchDealStatus, \n        searchRequestStatus, \n        searchStaff,\n        //searchMyDeals,\n        pageNumber, \n        pageSize,\n        update\n    ]);\n\n    useEffect(() => {\n        if (deals) {\n\n            const filteredData = [];\n\n            for (let incr = 0; incr < tabsFilter.length; incr++) {\n                let dealsFiltered = deals.filter( deal => deal.updatedAt.substring(0,4) === tabsFilter[incr].toString());\n                dealsFiltered = {\n                    deals: dealsFiltered,\n                    param: null,\n                    setParam: null,\n                    exportExcel: dealsFiltered.map((deal) => ({\n                        'TITLE': deal.title,\n                        'MAIN_PRACTICE': deal.mainPractice,\n                        'OTHERS_PRACTICES': deal.othersPractices.join(', '),\n                        'LEADER': deal.contacts.primary ? (deal.contacts.primary.name + ' (' + deal.contacts.primary.matricule + ')') : '',\n                        'CO-LEADERS': deal.contacts.secondary ? deal.contacts.secondary.map(x => x.name + ' (' + x.matricule + ')').join(', ')  : '',\n                        'COMPANY': deal.company,\n                        'STATUS': deal.status,\n                        'TYPE': deal.type,\n                        'DESCRIPTION': deal.description,\n                        'PROPOSAL DATE': deal.proposalDate ? deal.proposalDate.substring(0,10) : '',\n                        'PRESENTATION DATE': deal.presentationDate ? deal.presentationDate.substring(0,10) : '',\n                        'START DATE': deal.startDate ? deal.startDate.substring(0,10) : '',\n                        'WON DATE': deal.wonDate ? deal.wonDate.substring(0,10) : '',\n                        'STAFF': deal.staffingDecision.staff ? deal.staffingDecision.staff.map(x => x.responsability + ': ' + x.idConsultant.name + ' (' + x.idConsultant.matricule + ')').join(', ') : '',\n                    }))\n                \n\n                }\n                filteredData.push({ filter: tabsFilter[incr], data: dealsFiltered, count: dealsFiltered.deals.length });\n            }\n            setDataFiltered(filteredData);\n        }\n    }, [deals, tabsFilter]);\n\n    useEffect(() => {\n\n        if (successDelete) {\n            const keyword = {\n                title: searchTitle,\n                mainPractice: userInfo.consultantProfil.practice,\n                othersPractices: userInfo.consultantProfil.practice,\n                contact: searchContact,\n                company: searchCompany,\n                status: searchDealStatus,\n                request: searchRequestStatus,\n                staff: searchStaff,\n                filterMy:false\n            }\n            dispatch(getAllDeals(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete])\n\n    return (\n        <>\n            <Meta />\n\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <DropDownTitleContainer\n                title='Manage Deals'\n                close={false}>\n                <ListGroup.Item className='p-0 mt-3'>\n                    <Tabs \n                        //defaultActiveKey={tabsFilter[0]} \n                        id=\"uncontrolled-tab-example\" \n                        variant='pills'\n                        activeKey={defaultTabs}\n                        onSelect={(k) => {\n                            setDefaultTabs(k)\n                            localStorage.setItem('DealsHistoryScreen.defaultTab', k)\n                        }}\n                    >\n                        {dataFiltered.length > 0 && dataFiltered.map((data, val) => (\n                            <Tab\n                                key={val}\n                                className='mx-3'\n                                eventKey={`${data.filter}`}\n                                title={data.filter + ' (' + data.data.deals.length + ')'}\n                            >\n                                {data.data.deals && (\n                                    <ExcelFile element={<Button variant='ligth' className='mt-3'><i className=\"fas fa-download\"></i>  Download</Button>}>\n                                        <ExcelSheet data={data.data.exportExcel} name=\"dealsSheet\">\n                                            <ExcelColumn label=\"TITLE\" value=\"TITLE\" />\n                                            <ExcelColumn label=\"MAIN_PRACTICE\" value=\"MAIN_PRACTICE\" />\n                                            <ExcelColumn label=\"OTHERS_PRACTICES\" value=\"OTHERS_PRACTICES\" />\n                                            <ExcelColumn label=\"LEADER\" value=\"LEADER\" />\n                                            <ExcelColumn label=\"CO-LEADERS\" value=\"CO-LEADERS\" />\n                                            <ExcelColumn label=\"COMPANY\" value=\"COMPANY\" />\n                                            <ExcelColumn label=\"STATUS\" value=\"STATUS\" />\n                                            <ExcelColumn label=\"TYPE\" value=\"TYPE\" />\n                                            <ExcelColumn label=\"DESCRIPTION\" value=\"DESCRIPTION\" />\n                                            <ExcelColumn label=\"PROPOSAL DATE\" value=\"PROPOSAL DATE\" />\n                                            <ExcelColumn label=\"PRESENTATION DATE\" value=\"PRESENTATION DATE\" />\n                                            <ExcelColumn label=\"START DATE\" value=\"START DATE\" />\n                                            <ExcelColumn label=\"WON DATE\" value=\"WON DATE\" />\n                                            <ExcelColumn label=\"STAFF\" value=\"STAFF\" />\n                                        </ExcelSheet>\n                                    </ExcelFile>\n                                )}\n\n                                <DealList\n                                    history={history}\n                                    data={data.data}\n                                    filter={{\n                                        searchTitle: searchTitle,\n                                        setSearchTitle: setSearchTitle,\n                                        searchCompany: searchCompany,\n                                        setSearchCompany: setSearchCompany,\n                                        searchContact: searchContact,\n                                        setSearchContact: setSearchContact,\n                                        searchDealStatus: searchDealStatus,\n                                        setSearchDealStatus: setSearchDealStatus,\n                                        searchRequestStatus: searchRequestStatus,\n                                        setSearchRequestStatus: setSearchRequestStatus,\n                                        searchStaff: searchStaff,\n                                        setSearchStaff: setSearchStaff\n                                    }}\n                                />\n                            </Tab>\n                        ))}\n                    </Tabs>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n        </>\n    )\n}\n\nexport default DealsHistoryScreen\n","import React, { useState, useEffect } from 'react';\nimport { Form, ListGroup, Col, Row, Tabs, Tab, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ACCESS_DATAS, ACCESS_MODES } from '../constants/accessConstants';\nimport DisplayChildren from '../components/DisplayChildren';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getAllAccess, updateprofilFrontAcessRule } from '../actions/accessActions';\n\nconst AccessEditScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const accessList = useSelector(state => state.accessList);\n    const { loading, error, access } = accessList;\n\n    const accessFrontUpdate = useSelector(state => state.accessFrontUpdate);\n    const { error: errorFrontUpdate } = accessFrontUpdate;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [history, userInfo]);\n\n    useEffect(() => {\n        if (!access) {\n            dispatch(getAllAccess());\n        }\n    }, [dispatch, access]);\n    \n\n    return (\n        <DisplayChildren access='manageProfils'>\n            {loading && <Loader />}\n            {error && <Message variant='danger'>{error}</Message>}\n            {errorFrontUpdate && <Message variant='danger'>{errorFrontUpdate}</Message>}\n\n            <h1>Manage user profils screen</h1>\n            <Tabs defaultActiveKey={access && access[0].profil} id=\"uncontrolled-tab-example\">\n                {access && access.map((x, incr) => (\n                    <Tab key={incr} eventKey={x.profil} title={x.profil}>\n                        <ProfilDescription data={x} />\n                    </Tab>\n                ))}\n            </Tabs>\n        </DisplayChildren>\n    )\n}\n\nconst ProfilDescription = ({data}) => {\n\n    const categorizeFrontAccess = (frontAccess) => {\n        \n        const categories = [...new Set(frontAccess.map(x => x.category))];\n\n        const categorizedFrontAccess = [];\n        for (let incr = 0; incr < categories.length; incr++) {\n            const filterdData = frontAccess.filter(x => x.category === categories[incr]);\n            categorizedFrontAccess.push({\n                frontAccessRules: filterdData,\n                category: categories[incr],\n            });\n        }\n        return [categorizedFrontAccess, categories]\n    }\n    \n    const [categorizedFrontAccess, categories] = categorizeFrontAccess(data.frontAccess);\n\n\n    return (\n        <ListGroup>\n            {categorizedFrontAccess && categorizedFrontAccess.map((categoryRules, incr) => (\n                <ListGroup.Item key={incr} className='pt-3'>\n                    <CategoryAccess\n                        accessRules={categoryRules.frontAccessRules}\n                        category={categoryRules.category}\n                        categories={categories}\n                        profilId={data._id}\n                    />\n                </ListGroup.Item>\n            ))}\n        </ListGroup>\n    )\n};\n\nconst CategoryAccess = ({ accessRules, category, categories, profilId }) => {\n\n    const params = {\n        categories: categories,\n        modes: ACCESS_MODES,\n        datas: ACCESS_DATAS\n    }\n\n    return (\n        <>\n            <h4>{category && category}</h4>\n            <ListGroup variant='flush'>\n                <ListGroup.Item>\n                    <Row className='py-1 border-bottom bg-primary'>\n                        <Col className='text-white' xs={3}><strong>TECHNICAL ID</strong></Col>\n                        <Col className='text-white' xs={4}><strong>LABEL</strong></Col>\n                        <Col className='text-white' xs={2}><strong>MODE</strong></Col>\n                        <Col className='text-white' xs={2}><strong>ACCESS</strong></Col>\n                        <Col xs={1}><strong></strong></Col>\n                    </Row>\n                </ListGroup.Item>\n            </ListGroup>\n            {accessRules && accessRules.map((item, incr) => (\n                <ListGroup key={incr} variant='flush' className='border-bottom'>\n                    <ListGroup.Item>\n                        <AccessLineEdit\n                            frontAccessItem={item}\n                            params={params}\n                            profilId={profilId}\n                        />\n                    </ListGroup.Item>\n                </ListGroup>\n            ))}\n        </>\n    )\n}\n\nconst AccessLineEdit = ({ frontAccessItem, params, profilId }) => {\n\n    const dispatch = useDispatch()\n\n    const [id] = useState(frontAccessItem.id);\n    const [label, setLabel] = useState(frontAccessItem.label);\n    const [mode, setMode] = useState(frontAccessItem.mode);\n    const [data, setData] = useState(frontAccessItem.data);\n\n    const [loadingState, setLoadingState] = useState(false);\n\n    const accessFrontUpdate = useSelector(state => state.accessFrontUpdate);\n    const { error, success } = accessFrontUpdate;\n\n    useEffect(() => {\n        if(success) {\n            setLoadingState(false)\n        } \n    },[success]);\n\n    useEffect(() => {\n        if(error) {\n            setLoadingState(false)\n        } \n    },[error]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setLoadingState(true);\n        const rule = {\n            id: id,\n            label: label,\n            mode: mode,\n            data: data,\n            profilId: profilId\n        }\n        dispatch(updateprofilFrontAcessRule(rule))\n        console.log('update to implement')\n    }\n\n    return (\n        <Form onSubmit={submitHandler}>\n            <Form.Row>\n                <Col xs={3}>\n                    <Form.Control\n                        type='text'\n                        value={id && id}\n                        plaintext\n                        readOnly\n                    ></Form.Control>\n                </Col>\n\n                <Col xs={4}>\n                    <Form.Control\n                        type='text'\n                        value={label && label}\n                        onChange={(e) => setLabel(e.target.value)}\n                    ></Form.Control>\n                </Col>\n\n                <Col xs={2}>\n                    <Form.Control\n                        as='select'\n                        value={mode && mode}\n                        onChange={(e) => setMode(e.target.value)}\n                    >\n                        <option value=''>--Select--</option>\n                        {params.modes.map((x, incr) => (\n                            <option key={incr} value={x}>{x}</option>\n                        ))}\n                    </Form.Control>\n                </Col>\n\n                <Col xs={2}>\n                    <Form.Control\n                        as='select'\n                        value={data && data}\n                        onChange={(e) => setData(e.target.value)}\n                    >\n                        <option value=''>--Select--</option>\n                        {params.datas.map((x, incr) => (\n                            <option key={incr} value={x}>{x}</option>\n                        ))}\n                    </Form.Control>\n                </Col>\n\n                <Col xs={1}>\n                    <Button variant='ligth' className='text-secondary' type='submit'>\n                        {loadingState ? <Loader /> : <i className=\"fas fa-download\"></i>}\n                    </Button>\n                </Col>\n\n            </Form.Row>\n        </Form>\n    )\n}\n\nexport default AccessEditScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport DisplayChildren from '../components/DisplayChildren';\nimport DropDownTitleContainer from '../components/DropDownTitleContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { createAClient, deleteAClient, getAllClients, updateAClient } from '../actions/clientActions';\n\nconst ManageCompaniesScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    // pagination configuration\n\n    const [pageSize, setPageSize] = useState(10);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState('');\n\n    const [showAddContact, setShowAddContact] = useState({state:false, companyId:'', companyName:\"\"});\n    const [contactName, setContactName] = useState('');\n    const [contactEmail, setContactEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    const [showModifyName, setShowModifyName] = useState({state:false, companyId:'', companyName:''});\n    const [newCompanyName, setNewCompanyName] = useState('');\n\n    const [showCreateCompany, setShowCreateCompany] = useState({state:false});\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const clientAll = useSelector(state => state.clientAll);\n    const { error, loading, clients: companies, count, page, pages } = clientAll;\n\n    const clientUpdate = useSelector(state => state.clientUpdate);\n    const { error: errorUpdate, success:successUpdate } = clientUpdate;\n\n    const clientDelete = useSelector(state => state.clientDelete);\n    const { error: errorDelete, success:successDelete } = clientDelete;\n\n    const clientCreate = useSelector(state => state.clientCreate);\n    const { error: errorCreate, success:successCreate } = clientCreate;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        } else {\n            history.push('/login');\n        }\n\n    }, [dispatch, history, userInfo, pageNumber, pageSize, keyword]);\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successUpdate]);\n\n    useEffect(() => {\n        if (successDelete) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successDelete]);\n\n    useEffect(() => {\n        if (successCreate) {\n            dispatch(getAllClients(keyword, pageNumber, pageSize));\n        }\n        // eslint-disable-next-line\n    }, [dispatch, successCreate]);\n\n\n    const addCompanyHandler = (e, newCompanyName, contactName, contactEmail) => {\n        // Add company function\n        e.preventDefault();\n        dispatch(createAClient([{name:newCompanyName, commercialTeam:[{contactName: contactName, contactEmail: contactEmail}]}]));\n        setShowCreateCompany({state:false});\n        setContactEmail('');\n        setContactName('');\n        setNewCompanyName('');\n\n    }\n\n    const modifyCompanyNameHandler = (e, companyId, newCompanyName) => {\n        e.preventDefault();\n        let clientToUpdate = companies.filter(x => x._id === companyId)[0];\n        clientToUpdate.name = newCompanyName;\n        dispatch(updateAClient(clientToUpdate));\n        setShowModifyName({ state: false, companyId: '', companyName: '' });\n    }\n\n    const onClickDeleteHandler = (company) => {\n        if (window.confirm(`Are you sure to delete company: ${company.name} ?`)) {\n            dispatch(deleteAClient(company._id));\n        }\n    }\n\n    const addContactHandler = (e, contactName, contactEmail, companyId) => {\n        e.preventDefault();\n\n        let contactNameConform = false;\n        let contactEmailConform = false;\n        let message = []\n\n        if (contactName) {\n            contactNameConform = true\n        } else {\n            message.push('Thanks to enter a correct Name')\n        }\n\n        const regexEmail = /^(([^<>()[]\\.,;:s@]+(.[^<>()[]\\.,;:s@]+)*)|(.+))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))$/;\n        if (regexEmail.test(contactEmail)) {\n            contactEmailConform = true\n        } else {\n            message.push('Thanks to enter a correct Email address')\n        }\n\n        setMessage(message);\n\n        if (contactEmailConform && contactNameConform) {\n\n            let clientToUpdate = companies.filter(x => x._id === companyId)[0];\n            clientToUpdate.commercialTeam = clientToUpdate.commercialTeam.map(x => ({contactName: x.contactName, contactEmail:x.contactEmail}));\n            clientToUpdate.commercialTeam.push({contactName:contactName, contactEmail:contactEmail});\n\n            dispatch(updateAClient(clientToUpdate));\n\n            setShowAddContact({state:false, companyId:'', companyName:''});\n            setMessage('');\n        }\n    }\n\n    const deleteContactHandler = (contactEmail, companyId) => {\n        if (window.confirm(`Are you sure to delete contact: ${contactEmail} ?`)) {\n            let clientToUpdate = companies.filter(x => (x._id === companyId))[0];\n            clientToUpdate.commercialTeam = clientToUpdate.commercialTeam.map(x => ({contactName: x.contactName, contactEmail:x.contactEmail}));\n            const newContacts = clientToUpdate.commercialTeam.filter(x => x.contactEmail !== contactEmail);\n            clientToUpdate.commercialTeam = newContacts;\n\n            dispatch(updateAClient(clientToUpdate));\n        }\n\n    }\n\n    return (\n        <DisplayChildren access='manageCompanies'>\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            <DropDownTitleContainer title='Manage companies' close={false}>\n                <ListGroup.Item>\n                    <Row>\n\n                        <Col xs={6} md={4}>\n                            <Button className=\"mb-3\" onClick={() => setShowCreateCompany({state:true})}>\n                                <i className=\"fas fa-plus mr-2\"></i>Add\n                            </Button>\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    type='text'\n                                    className=\"mb-3\"\n                                    placeholder='Search company'\n                                    value={keyword && keyword}\n                                    onChange={(e) => setKeyword(e.target.value)}\n                                ></FormControl>\n                            </InputGroup>\n                        </Col>\n\n                        <Col xs={6} md={4}>\n                            <Form.Control\n                                plaintext\n                                readOnly\n                                value={count ? `${count} companies found` : '0 company found'} />\n                        </Col>\n\n                        <Col xs={6} md={2}>\n                            <InputGroup>\n                                <FormControl\n                                    as='select'\n                                    id='number-c'\n                                    className=\"mb-3\"\n                                    value={pageSize && pageSize}\n                                    onChange={(e) => setPageSize(e.target.value)}\n                                >\n                                    {[5, 10, 15, 20, 50].map(x => (\n                                        <option\n                                            key={x}\n                                            value={x}\n                                        >{x} / page</option>\n                                    ))}\n                                </FormControl>\n                            </InputGroup>\n                        </Col>\n\n                    </Row>\n\n                    {companies && companies.length === 0 ? <Message variant='information'>You have not access to these information</Message> :\n                        loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n                            <Table responsive hover striped>\n                                <thead>\n                                    <tr className='table-primary'>\n                                        <th className='align-middle text-light'>Company name</th>\n                                        <th className='align-middle text-light'>Commercial contacts</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {companies && companies.map((company) => (\n                                        <tr key={company._id}>\n                                            <td className='align-middle'>\n                                                <Row><Col>{company.name}</Col></Row>\n                                                <Row><Col>\n                                                    <Button\n                                                        variant='ligth'\n                                                        className=\"m-0 p-1 text-primary\"\n                                                        onClick={() => setShowModifyName({ state: true, companyId: company._id, companyName: company.name })}\n                                                    ><i className=\"fas fa-minus\"></i><i>  modify</i>\n                                                    </Button>\n                                                    <Button\n                                                        variant='ligth'\n                                                        className='m-0 p-1 btn text-danger'\n                                                        onClick={() => onClickDeleteHandler(company)}\n                                                    ><i className=\"fas fa-times\"></i><i>  Delete</i>\n                                                    </Button>\n                                                </Col></Row>\n                                            </td>\n                                            <td className='align-middle'>\n                                                <DisplayContact\n                                                    company={company}\n                                                    setShowAddContact={setShowAddContact}\n                                                    deleteContactHandler={deleteContactHandler}\n                                                />\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n\n                        )}\n\n                    <Pagination>\n                        <Pagination.Prev\n                            onClick={() => setPageNumber(page - 1)}\n                            disabled={page === 1}\n                        />\n                        {[...Array(pages).keys()].map(x => (\n                            [0, 1, pages - 2, pages - 1].includes(x) ? (\n                                <Pagination.Item\n                                    key={x + 1}\n                                    active={x + 1 === page}\n                                    onClick={() => {\n                                        dispatch(getAllClients(keyword, x + 1, pageSize));\n                                        setPageNumber(x + 1);\n                                    }}\n                                >{x + 1}</Pagination.Item>\n                            ) : (pages > 4 && x === 2) && (\n                                <Pagination.Ellipsis key={x + 1} />\n                            )\n\n                        ))}\n                        <Pagination.Next\n                            onClick={() => setPageNumber(page + 1)}\n                            disabled={page === pages}\n                        />\n                    </Pagination>\n                </ListGroup.Item>\n            </DropDownTitleContainer>\n\n            <Modal show={showAddContact.state} onHide={() => setShowAddContact({state:false, companyId:'', companyName:\"\"})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`New contact for: ${showAddContact.companyName}`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={contactName && contactName}\n                                onChange={(e) => setContactName(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Email *</Form.Label>\n                            <Form.Control\n                                type='email'\n                                value={contactEmail && contactEmail}\n                                onChange={(e) => setContactEmail(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button type='submit' variant=\"primary\" onClick={(e) => addContactHandler(e, contactName, contactEmail, showAddContact.companyId)} disabled={!contactEmail || !contactName}>Create</Button>\n                    </Form>\n                    {message && <Message variant='danger'>{message}</Message>}\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowAddContact({state:false, companyId:'', companyName:\"\"})}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showModifyName.state} onHide={() => setShowModifyName({state:false, companyId:'', companyName:\"\"})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`Original name: ${showModifyName.companyName}`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>New company name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={newCompanyName ? newCompanyName : showModifyName.companyName}\n                                onChange={(e) => setNewCompanyName(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button \n                            type='submit' \n                            variant=\"primary\" \n                            onClick={(e) => modifyCompanyNameHandler(e, showModifyName.companyId, newCompanyName)} \n                            disabled={!(newCompanyName && (newCompanyName !== showModifyName.companyName))}>Modify</Button>\n                    </Form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        setShowModifyName({ state: false, companyId: '', companyName: \"\" });\n                        setNewCompanyName('')\n                    }}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showCreateCompany.state} onHide={() => setShowCreateCompany({state:false})}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{`Create a company:`}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>New company name *</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={newCompanyName ? newCompanyName : showModifyName.companyName}\n                                onChange={(e) => setNewCompanyName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>First contact name</Form.Label>\n                            <Form.Control\n                                type='text'\n                                value={contactName ? contactName : ''}\n                                placeholder='Contact name'\n                                onChange={(e) => setContactName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>First contact email</Form.Label>\n                            <Form.Control\n                                type='email'\n                                value={contactEmail ? contactEmail : ''}\n                                placeholder='Contact email'\n                                onChange={(e) => setContactEmail(e.target.value)}\n                            />\n                        </Form.Group>\n                        \n                        <Button \n                            type='submit' \n                            variant=\"primary\" \n                            onClick={(e) => addCompanyHandler(e, newCompanyName, contactName, contactEmail)} \n                            disabled={!(newCompanyName )}>Create</Button>\n                    </Form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        setShowModifyName({ state: false, companyId: '', companyName: \"\" });\n                        setNewCompanyName('')\n                    }}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </DisplayChildren>\n    )\n}\n\nconst DisplayContact = ({ company, setShowAddContact, deleteContactHandler }) => {\n\n    const [contacts] = useState(company.commercialTeam || []);\n\n    return (\n        <div>\n            {contacts.map((contact, incr) => (\n                <Row key={incr}>\n                    <Col>\n                        {`${contact.contactName} (${contact.contactEmail})`}\n                        <Button\n                            variant='ligth'\n                            className='ml-3 px-1 text-danger'\n                            onClick={() => deleteContactHandler(contact.contactEmail, company._id)}\n                        ><i className=\"fas fa-times\"></i></Button>\n                    </Col>\n                </Row>\n            ))}\n            <Row><Col className='text-left'>\n                <Button\n                    className='m-0 p-1 text-primary'\n                    variant='ligth'\n                    onClick={() => setShowAddContact({state:true, companyId:company._id, companyName:company.name})}\n                ><i className=\"fas fa-plus\"></i><i>  add a contact</i></Button>\n            </Col></Row>\n\n        </div>\n    )\n}\n\nexport default ManageCompaniesScreen\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n//import Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport { getContactsList, sendDecisionEmail } from '../actions/emailActions';\nimport Loader from '../components/Loader';\nimport { EMAIL_SEND_DECISION_RESET } from '../constants/emailConstants';\n\nconst EnvoyerMailsScreen = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    const [contactList, setContactList] = useState([]);\n    const [messsagesSendSuccess, setMessagesSendSuccess] = useState(0);\n    const [messsagesSendError, setMessagesSendError] = useState(0);\n    const [totalToSend, setTotalToSend] = useState(0);\n    \n    const [massSending, setMassSending] = useState(false);\n    const [progress, setProgress] = useState(0);\n\n    // const userLogin = useSelector(state => state.userLogin);\n    // const { userInfo } = userLogin;\n\n    const contactsList = useSelector(state => state.contactsList);\n    const { loading, contacts } = contactsList;\n\n    const sendOneEmail = useSelector(state => state.sendOneEmail);\n    const { success, error, email } = sendOneEmail;\n\n    // const sleep = (milliseconds) => {\n    //     const date = Date.now();\n    //     let currentDate = null;\n    //     do {\n    //         currentDate = Date.now();\n    //     } while (currentDate - date < milliseconds);\n    // }\n\n    const handlerSendADecision = (email, name) => {\n        const newContactsInfo = contactList.slice();\n        for (let incr = 0 ; incr < newContactsInfo.length; incr++){\n            if(newContactsInfo[incr].email === email){\n                newContactsInfo[incr].status = 'loading'\n            }\n        }\n        setContactList(newContactsInfo);\n        dispatch(sendDecisionEmail(email, name))\n    }\n\n    const handlerSendAllDecisions = () => {\n        dispatch({ type: EMAIL_SEND_DECISION_RESET });\n        setProgress(0);\n        setMassSending(true);\n    }\n\n    useEffect(() => {\n        dispatch(getContactsList());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (contacts) {\n            setContactList(contacts.map(x => ({ ...x, status: 'not sent' })));\n            setTotalToSend(contacts.length);\n        }\n    }, [contacts]);\n\n    useEffect(() => {\n        if(massSending) {\n            if(contactList[progress].status !== 'send') {\n                //sleep(1000);\n                handlerSendADecision(contactList[progress].email, contactList[progress].name);\n            } else {\n                if(progress < contactList.length - 1){\n                    setProgress(progress+1);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    },[massSending, progress]);\n\n    useEffect(() => {\n        if(success) {\n            const successEmail = email;\n            const newContactsInfo = contactList.slice();\n            for (let incr = 0; incr < newContactsInfo.length; incr++) {\n                if (newContactsInfo[incr].email === successEmail) {\n                    newContactsInfo[incr].status = 'send'\n                }\n            }\n            setContactList(newContactsInfo);\n\n            if (massSending){\n                if (progress < contactList.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassSending(false);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [success]);\n\n    useEffect(() => {\n        if(error) {\n            //console.log('error', error);\n            const errorEmail = error;\n            const newContactsInfo = contactList.slice();\n            for (let incr = 0; incr < newContactsInfo.length; incr++) {\n                if (newContactsInfo[incr].email === errorEmail) {\n                    newContactsInfo[incr].status = 'error';\n                }\n            }\n            setContactList(newContactsInfo);\n\n            if (massSending){\n                if (progress < contactList.length - 1){\n                    setProgress(progress+1);\n                } else {\n                    setMassSending(false);\n                    setProgress(0);\n                }\n            }\n        }\n    // eslint-disable-next-line\n    }, [error]);\n\n    useEffect(() => {\n        setMessagesSendSuccess(contactList.filter(x => x.status === 'send').length);\n        setMessagesSendError(contactList.filter(x => x.status === 'error').length);\n        setTotalToSend(contactList.length);\n    },[contactList, error, success]);\n\n    return (\n        <div>\n            <Meta />\n            {loading && <Loader />}\n            <Button\n                variant='primary'\n                onClick={() => history.go(-1)}\n            >Go Back</Button>\n            <Row className='align-items-center pt-3'>\n                <Col>\n                    {`${messsagesSendSuccess} messages send / ${totalToSend} - ${messsagesSendError} messages with error`}\n                </Col>\n                <Col className='text-right'>\n                    <Button\n                        variant='ligth'\n                        className='text-primary'\n                        onClick={() => handlerSendAllDecisions()}\n                    ><i className=\"fas fa-envelope\"></i> {massSending ? <Loader /> : 'Send all messages'}</Button>\n                </Col>\n            </Row>\n            <Row className='pt-3'>\n                <Col>\n                    <ProgressBar>\n                        <ProgressBar animated={massSending} now={100* messsagesSendSuccess / totalToSend} variant='primary' />\n                        <ProgressBar animated={massSending} now={100* messsagesSendError / totalToSend} variant='danger' />\n                    </ProgressBar>\n                </Col>\n            </Row>\n\n            <Row className='pt-3'>\n                <Col>\n                    <Table responsive hover striped className='mt-3'>\n                        <thead>\n                            <tr className='table-primary'>\n                                <th className='align-middle text-light text-center col-md-5'>Name</th>\n                                <th className='align-middle text-light text-center col-md-5'>Email</th>\n                                <th className='align-middle text-light text-center col-md-2'>status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {contactList && contactList.map((contact, incr) => (\n                                <tr key={incr}>\n                                    <td className='align-middle text-center'>{contact.name ? contact.name : \"Unknown\"}</td>\n                                    <td className='align-middle text-center'>{contact.email}</td>\n                                    <td className='align-middle text-center'>\n                                        <Button\n                                            variant='ligth'\n                                            className={contact.status === 'error' ? 'text-danger' \n                                                        : contact.status === 'send' ? 'text-success'\n                                                        : 'text-primary'}\n                                            size='sm'\n                                            onClick={() => handlerSendADecision(contact.email, contact.name)}\n                                            disabled={contact.status === 'send' || massSending === true}\n                                        ><i className=\"fas fa-envelope\"></i>  \n                                            {contact.status === 'not sent' && '  send'}\n                                            {contact.status === 'loading' && <Loader />}\n                                            {contact.status === 'error' && '  Error send again'}\n                                            {contact.status === 'send' && '  sent'}\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default EnvoyerMailsScreen;\n","import axios from 'axios';\nimport { \n    EMAIL_CONTACTS_LIST_FAIL, \n    EMAIL_CONTACTS_LIST_REQUEST, \n    EMAIL_CONTACTS_LIST_SUCCESS, \n    EMAIL_SEND_DECISION_FAIL, \n    EMAIL_SEND_DECISION_REQUEST, \n    EMAIL_SEND_DECISION_SUCCESS\n} from '../constants/emailConstants';\n\nexport const getContactsList = () => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: EMAIL_CONTACTS_LIST_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/emails/contacts`, config);\n\n        dispatch({ type: EMAIL_CONTACTS_LIST_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: EMAIL_CONTACTS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};\n\nexport const sendDecisionEmail = (email, name) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({ type: EMAIL_SEND_DECISION_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers:{\n                //'Content-type': 'Application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/emails/decision?email=${email}&name=${name}`, config);\n\n        dispatch({ type: EMAIL_SEND_DECISION_SUCCESS, payload: data });\n\n\n    } catch (error) {\n        dispatch({\n            type: EMAIL_SEND_DECISION_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        });\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport DisplayChildren from '../components/DisplayChildren';\nimport { getAllDeals } from '../actions/dealActions';\nimport SelectInput from '../components/SelectInput';\nimport { getAllCDM, updateDelegateConsultant } from '../actions/consultantActions';\n\n\nconst ProfileScreen = ({ history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n    const [messageUpdate, setMessageUpdate] = useState(null);\n\n    const [delegation, setDelegation] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userUpdateProfil = useSelector((state) => state.userUpdateProfil);\n    const { success: successUpdate, error: errorUpdate } = userUpdateProfil;\n\n    const dealAllList = useSelector(state => state.dealAllList);\n    const { deals } = dealAllList;\n\n    const consultantCDMList = useSelector(state => state.consultantCDMList);\n    const { cdmList } = consultantCDMList;\n\n    const consultantDelegateUpdate = useSelector(state => state.consultantDelegateUpdate);\n    const { loading: loadingDelegate } = consultantDelegateUpdate;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } else {\n            if (!user || !user.name) {\n                dispatch(getUserDetails(userInfo._id));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n            }\n        }\n    }, [dispatch, history, userInfo, user]);\n\n    useEffect(() => {\n        if (successUpdate) {\n            setMessageUpdate({ type: 'success', message: 'Profile updated' });\n        }\n    }, [successUpdate]);\n\n    useEffect(() => {\n        if (errorUpdate) {\n            setMessageUpdate({ type: 'danger', message: 'Profile not updated' });\n        }\n    }, [errorUpdate]);\n\n    useEffect(() => {\n        if (userInfo) {\n            const keyword = {\n                title: '',\n                contact: '',\n                company: '',\n                status: '',\n                request: '',\n                staff: '',\n                filterMy: true\n            }\n            dispatch(getAllDeals(keyword, 1, 1000, 'active'));\n        }\n    }, [dispatch, userInfo]);\n\n    useEffect(() => {\n        if(user) {\n            setDelegation(user.consultantProfil.cdmDelegation.map(x => ({id: x.cdmId, value: x.name})));\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if(!cdmList) {\n            dispatch(getAllCDM(userInfo.consultantProfil.practice))\n        }\n    }, [dispatch, cdmList, userInfo]);\n\n    const submitHandlerDelegation = () => {\n        const delegationToUpdate = delegation.map(x => ({cdmId: x.id, name: x.value}))\n        dispatch(updateDelegateConsultant(user.consultantProfil._id, delegationToUpdate))\n    }\n\n    const submitHandler = (e) => {\n        const form = e.currentTarget;\n        // Verification of validity of data\n        if (form.checkValidity() === false) {\n            setMessage('Please check your information');\n        } else {\n            e.preventDefault(); // to avoid page to refresh\n            setMessage(null); // to reinitialize the message before testing\n            setMessageUpdate(null);\n\n            //const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n            //const lowRegex = new RegExp(\"([a-zA-Z0-9!@#\\$%\\^&\\*]){1,}\");\n            const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n            const lowRegex = new RegExp(\"([a-zA-Z0-9!@#$%^&*]){1,}\");\n            \n            const applyRegex = ['demo', 'poc'].includes(process.env.REACT_APP_ENV) ? strongRegex : lowRegex;\n            //console.log(applyRegex);\n\n            if (!password || !confirmPassword) {\n                setMessage('Please enter a password');\n                return;\n            }\n            if (password.match(applyRegex)) {\n                if (!password || password !== confirmPassword) {\n                    setMessage('Passwords do not match');\n                    return;\n                } else {\n                    dispatch(updateUserProfile({ id: user._id, name, password }));\n                    return;\n                }\n            } else {\n                setMessage(`Please enter strong password: \\n\n                    - must be eight characters or longer \\n\n                    - must contain at least 1 lowercase alphabetical character \\n\n                    - must contain at least 1 uppercase alphabetical character \\n\n                    - must contain at least 1 numeric character \\n\n                    - must contain at least one special character (!@#$%^&*)`)\n                return;\n            }\n        }\n    };\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profil</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {messageUpdate && messageUpdate.type && <Message variant={messageUpdate.type}>{messageUpdate.message}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Adress</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='confirm-password'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button \n                        type='submit' \n                        className='my-3'\n                        variant='primary' \n                        block\n                    >Update Password</Button>\n                    \n                    {userInfo && userInfo.consultantProfil.isCDM && (\n                        <>\n                            <h3>Delegate </h3>\n                            <SelectInput\n                                options={cdmList ? cdmList.map(cdm => ({ value: cdm._id, label: cdm.name })) : []}\n                                value={delegation ? delegation.map(x => ({ value: x.id, label: x.value })) : []}\n                                setValue={setDelegation}\n                                multi={true}\n                            //disabled={!editRequest}\n                            />\n                            <Button\n                                onClick={submitHandlerDelegation}\n                                className='my-3'\n                                variant='primary'\n                                block\n                            >{loadingDelegate ? <Loader /> : 'Update Delegations'}</Button>\n                        </>\n                    )}\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <DisplayChildren access='viewProfilDetails'>\n                    <h2>Follow my Requests</h2>\n                    <Table striped hover responsive className='table-sm mt-3'>\n                        <thead>\n                            <tr className='table-light'>\n                                <th className='align-middle text-center'>Title</th>\n                                <th className='align-middle text-center'>Client</th>\n                                <th className='align-middle text-center'>Contacts</th>\n                                <th className='align-middle text-center'>Practice</th>\n                                <th className='align-middle text-center'>Step</th>\n                                <th className='align-middle text-center'>Request status</th>\n                                <th className='align-middle text-center'>Starting date</th>\n                                <th className='align-middle text-center'>Staffing</th>\n                                <th className='align-middle text-center'>Details</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {deals && deals.map( deal => (\n                                <tr key={deal._id}>\n                                    <td className='align-middle text-center'>{deal.title}</td>\n                                    <td className='align-middle text-center'>{deal.company}</td>\n                                    <td className='align-middle text-center'>{`${deal.contacts && deal.contacts.primary && deal.contacts.primary.name} \\n(${deal.contacts && deal.contacts.secondary && deal.contacts.secondary.map(c => c.name).join(', ')})`}</td>\n                                    <td className='align-middle text-center'>{`${deal.mainPractice} \\n(${deal.othersPractices && deal.othersPractices.join(', ')})`}</td>\n                                    <td className='align-middle text-center'>{deal.status}</td>\n                                    <td className='align-middle text-center'>{deal.staffingRequest && deal.staffingRequest.requestStatus}</td>\n                                    <td className='align-middle text-center'>{deal.startDate.substring(0,10)}</td>\n                                    <td className='align-middle text-center'>{deal.staffingDecision && deal.staffingDecision.staff && deal.staffingDecision.staff.map( s => `${s.idConsultant.name} - ${s.responsability} - ${s.priority}`).join(',\\n')}</td>\n                                    <td className='align-middle text-center'>\n                                        <Button\n                                            variant='ligth'\n                                            style={{ color: 'gray' }}\n                                            onClick={() => history.push(`/staffing/${deal._id}`)}\n                                            size='md'\n                                        ><i className=\"fas fa-edit\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    \n                </DisplayChildren>\n            </Col>\n\n        </Row>\n    );\n};\n\nexport default ProfileScreen;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getTransparentNewToken, logout } from '../actions/userActions';\n\nconst TokenIsValide = ({ history, children }) => {\n\n    const dispatch = useDispatch();\n    let grantedAccess = true;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (!userInfo) {\n            grantedAccess = false;\n            history.push('/login');\n        }\n    }, [userInfo, history]);\n\n    // to avoid errors with migration\n    useEffect(() => {\n        if (userInfo && !userInfo.lastConnexion) {\n            grantedAccess = false;\n            dispatch(logout());\n        }\n    });\n\n    useEffect(() => {\n        // get new Token if close to end of current token\n        if (userInfo && userInfo.accountType === 'LOCAL') {\n            const currentTime = new Date(Date.now());\n            const delay = (currentTime - new Date(userInfo.lastConnexion))/(1000 * 24 * 3600);\n            if (delay > 0.7 && delay < 1) {\n                grantedAccess = false;\n                dispatch(getTransparentNewToken({email: userInfo.email, delay: delay}, userInfo));\n            }\n        }\n    }, [dispatch, userInfo]);\n\n    useEffect(() => {\n        // logout user if token not valide\n        if (userInfo && userInfo.accountType === 'LOCAL') {\n            const currentTime = new Date(Date.now());\n            const delay = (currentTime - new Date(userInfo.lastConnexion))/(1000 * 24 * 3600);\n            if (delay >= 1) {\n                grantedAccess = false;\n                dispatch(logout());\n            }\n        }\n    }, [dispatch, userInfo]);\n    \n    return (\n        <span>\n            {grantedAccess && children && children}\n        </span>\n    )\n}\n\nexport default TokenIsValide;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport LoginScreen from './screens/LoginScreen';\nimport PxxEditScreen from './screens/PxxEditScreen';\nimport ConsultantEditScreen from './screens/ConsultantEditScreen';\nimport ManageConsultantScreen from './screens/ManageConsultantScreen';\nimport ManageUsersScreen from './screens/ManageUsersScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport StaffingEditScreen from './screens/StaffingEditScreen';\nimport ManageSkillsScreen from './screens/ManageSkillsScreen';\nimport PxxDetailsScreen from './screens/PxxDetailsScreen';\nimport ManageDealsScreen from './screens/ManageDealsScreen';\nimport DealsHistoryScreen from './screens/DealsHistoryScreen';\nimport AccessEditScreen from './screens/AccessEditScreen';\nimport ManageCompaniesScreen from './screens/ManageCompaniesScreen';\nimport EnvoyerMailsScreen from './screens/EnvoyerMailsScreen';\n\nimport ProfileScreen from './screens/ProfileScreen';\nimport TokenIsValide from './components/TokenIsValide';\n\nimport history from './components/History';\n\nconst App = () => {\n\n  return (\n    <Router history={history}>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} exact />\n          <Route path='/register' component={RegisterScreen} exact />\n          \n          <TokenIsValide history={history}>\n            <Route path='/profile' component={ProfileScreen} exact />\n            <Route path='/staffing' component={StaffingEditScreen} exact />\n            <Route path='/staffing/:id' component={StaffingEditScreen} exact />\n            <Route path='/pxx' component={PxxEditScreen} exact />\n            <Route path='/pxx/:id' component={PxxEditScreen} exact />\n            <Route path='/pxxdetails/:id' component={PxxDetailsScreen} exact />\n            <Route path='/editconsultant/:id' component={ConsultantEditScreen} exact />\n            <Route path='/admin/consultants' component={ManageConsultantScreen} exact />\n            <Route path='/admin/consultants/:keyword/page/:pageNumber' component={DashboardScreen} exact />\n            <Route path='/admin/users' component={ManageUsersScreen} exact />\n            <Route path='/admin/edituser/:id' component={UserEditScreen} exact />\n            <Route path='/admin/consultant/add' component={ConsultantEditScreen} exact />\n            <Route path='/admin/skills' component={ManageSkillsScreen} exact />\n            <Route path='/admin/deals' component={ManageDealsScreen} exact />\n            <Route path='/admin/deals/history' component={DealsHistoryScreen} exact />\n            <Route path='/admin/profils' component={AccessEditScreen} exact />\n            <Route path='/admin/companies' component={ManageCompaniesScreen} exact />\n            <Route path='/admin/send' component={EnvoyerMailsScreen} exact />\n            <Route path='/' component={DashboardScreen} exact />\n          </TokenIsValide>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}